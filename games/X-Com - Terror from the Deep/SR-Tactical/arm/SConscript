#
#  Copyright (C) 2016-2023 Roman Pauer
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy of
#  this software and associated documentation files (the "Software"), to deal in
#  the Software without restriction, including without limitation the rights to
#  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
#  of the Software, and to permit persons to whom the Software is furnished to do
#  so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.
#

import re

include_re = re.compile(r'^.include\s+"(\S+)"\r?$', re.M)

def asmfile_scan(node, env, path):
    contents = node.get_text_contents()
    includes = include_re.findall(contents)
    return includes

asmscan = Scanner(function = asmfile_scan,
                  skeys = ['.s'],
                  recursive = True)

SourceFileScanner.add_scanner('.s', asmscan)

Import('device', 'version', 'env')

if version == 'gog':
    obj = env.Object('tactical-asm-gog.s')
else:
    obj = env.Object('tactical-asm.s')

asm_sources = Glob('*.s', strings = True)
if 'tactical-asm.s' in asm_sources:
    asm_sources.remove('tactical-asm.s')
asm_sources.remove('tactical-asm-gog.s')

obj = obj + env.Object(asm_sources + Glob('*.c'))

Return('obj')
