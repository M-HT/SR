/**
 *
 *  Copyright (C) 2024 Roman Pauer
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy of
 *  this software and associated documentation files (the "Software"), to deal in
 *  the Software without restriction, including without limitation the rights to
 *  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 *  of the Software, and to permit persons to whom the Software is furnished to do
 *  so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 *
 */

/** based on:
 *  MT-32 GM drivers for MSS/AIL by Mok - https://www.vogons.org/viewtopic.php?t=58949
 *  AIL Version 2 by John Miles - http://www.ke5fx.com/
 */

// # of RAM timbres
#define MT32_NUM_TIMBS 64

// # of MIDI channels
#define MT32_NUM_CHANS 16

#define MT32_NUM_DRUMS (64 + 21)

static struct {
    uint32_t hist;      // last note event count for LRU
    uint8_t bank;       // GTR bank
    uint8_t num;        // GTR #
    uint8_t attribs;    // bit 7=in use 6=protected
    uint8_t reserved;
} mt32_timb_data[MT32_NUM_TIMBS];

static int8_t mt32_chan_timbs[MT32_NUM_CHANS]; // indexes used by channels 1-16 (-1 if internal/uninit'd)

static int8_t mt32_timbre_index[256];

static struct {
    uint8_t mt32_channel;
    uint8_t rpn_flags;
    uint8_t active_notes;
    int8_t modulation_wheel;
    int8_t volume;
    int8_t mt32_pan;
    int8_t expression;
    int8_t sustain;
    int8_t pitch_bend_sensitivity;
    int8_t program;
    int16_t pitch_wheel;
    uint32_t note_hist;
} mt32_gm_channels[MT32_NUM_CHANS];

static struct {
    int8_t modulation_wheel;
    int8_t volume;
    int8_t pan;
    int8_t expression;
    int8_t sustain;
    int8_t program;
    int16_t pitch_wheel;
    int8_t pitch_bend_sensitivity;
    uint8_t reserved[7];
} mt32_channels[MT32_NUM_CHANS];

static uint32_t mt32_timbre_event; // used for LRU counting
static uint32_t mt32_note_event; // used for LRU counting

static uint8_t mt32_drum_patch_pan[MT32_NUM_DRUMS];

static int8_t mt32_drum_channel_pan;

// addr: 10 00 01 - System area - REVERB
const static uint8_t mt32_init_reverb[3] =  { 1, 4, 4 }; // reverb mode = 1 (hall), time = 4, level = 4

// addr: 10 00 0d - System area - MIDI CHANNEL
const static uint8_t mt32_part_chans[9] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 }; // default (0-based) chans for each part

// addr: 10 00 04 - System area - PARTIAL RESERVE
const static uint8_t mt32_part_rsv[9] = { 3, 4, 3, 4, 3, 4, 3, 4, 4 }; // # of reserved partials/channel

// addr: 03 01 10 - Rhythm Setup Temporary Area
const static struct {
    uint8_t timbre;         // 0-93/127 (i01-i64,r01-r30/r63,OFF)
    uint8_t output_level;   // 0-100
    uint8_t panpot;         // 0-14 (R-L)
    uint8_t reverb_switch;  // 0-1 (OFF,ON)
} mt32_rhythm_setup[MT32_NUM_DRUMS] = {
    { 127,   0,  7, 0 }, // Key# 24
    { 127,   0,  7, 0 }, // Key# 25
    { 127,   0,  7, 0 }, // Key# 26
    { 127, 100,  7, 1 }, // Key# 27
    {  75, 100, 11, 1 }, // Key# 28
    { 127, 100,  7, 1 }, // Key# 29
    { 127, 100,  7, 1 }, // Key# 30
    {  74, 100,  6, 1 }, // Key# 31
    {  88,  90, 10, 1 }, // Key# 32
    {  74, 100,  7, 1 }, // Key# 33
    {  87, 100,  7, 1 }, // Key# 34
    {  64, 100,  7, 1 }, // Key# 35
    {  64, 100,  7, 1 }, // Key# 36
    {  74, 100,  7, 1 }, // Key# 37
    {  65, 100,  7, 1 }, // Key# 38
    {  75, 100,  8, 1 }, // Key# 39
    {  69, 100,  6, 1 }, // Key# 40
    {  68, 100, 11, 1 }, // Key# 41
    {  70, 100,  6, 1 }, // Key# 42
    {  68, 100,  9, 1 }, // Key# 43
    {  93,  80,  6, 1 }, // Key# 44
    {  67, 100,  8, 1 }, // Key# 45
    {  71, 100,  5, 1 }, // Key# 46
    {  67, 100,  6, 1 }, // Key# 47
    {  66, 100,  6, 1 }, // Key# 48
    {  72, 100,  5, 1 }, // Key# 49
    {  66, 100,  4, 1 }, // Key# 50
    {  73,  90,  9, 1 }, // Key# 51
    {  72, 100, 10, 1 }, // Key# 52
    {  73,  90, 10, 1 }, // Key# 53
    {  86, 100,  6, 1 }, // Key# 54
    {  93, 100,  9, 1 }, // Key# 55
    {  76, 100,  5, 1 }, // Key# 56
    {  72, 100,  9, 1 }, // Key# 57
    {  92,  80, 10, 1 }, // Key# 58
    {  73,  80,  9, 1 }, // Key# 59
    {  82, 100,  2, 1 }, // Key# 60
    {  83, 100,  4, 1 }, // Key# 61
    {  77,  90, 10, 1 }, // Key# 62
    {  78, 100, 10, 1 }, // Key# 63
    {  79, 100,  9, 1 }, // Key# 64
    {  80, 100,  5, 1 }, // Key# 65
    {  81, 100,  5, 1 }, // Key# 66
    {  84, 100, 10, 1 }, // Key# 67
    {  85, 100, 10, 1 }, // Key# 68
    {  91, 100, 11, 1 }, // Key# 69
    {  88, 100, 12, 1 }, // Key# 70
    {  90,  80,  5, 1 }, // Key# 71
    {  89,  80,  5, 1 }, // Key# 72
    {  75,  80,  4, 1 }, // Key# 73
    {  92,  70,  4, 1 }, // Key# 74
    {  87, 100,  5, 1 }, // Key# 75
    {  82,  90,  5, 1 }, // Key# 76
    {  77,  90,  5, 1 }, // Key# 77
    { 118,  70,  9, 1 }, // Key# 78
    { 118, 100,  9, 1 }, // Key# 79
    {  85,  80, 10, 1 }, // Key# 80
    {  84,  90, 10, 1 }, // Key# 81
    {  91, 100,  4, 1 }, // Key# 82
    {  72,  75,  5, 1 }, // Key# 83
    {  92,  60,  5, 1 }, // Key# 84
    {  88, 100, 10, 1 }, // Key# 85
    {  67, 100, 10, 1 }, // Key# 86
    {  68, 100, 10, 1 }, // Key# 87
// CM-32L / LAPC-I
    { 127, 100,  7, 1 }, // Key# 88
    { 127, 100,  7, 1 }, // Key# 89
    { 127, 100,  7, 1 }, // Key# 90
    { 127, 100,  7, 1 }, // Key# 91
    { 127, 100,  7, 1 }, // Key# 92
    { 127, 100,  7, 1 }, // Key# 93
    { 127, 100,  7, 1 }, // Key# 94
    { 127, 100,  7, 1 }, // Key# 95
    { 127, 100,  7, 1 }, // Key# 96
    { 127, 100,  7, 1 }, // Key# 97
    { 127, 100,  7, 1 }, // Key# 98
    { 127, 100,  7, 1 }, // Key# 99
    { 127, 100,  7, 1 }, // Key# 100
    { 127, 100,  7, 1 }, // Key# 101
    { 127, 100,  7, 1 }, // Key# 102
    { 127, 100,  7, 1 }, // Key# 103
    { 127, 100,  7, 1 }, // Key# 104
    { 127, 100,  7, 1 }, // Key# 105
    { 127, 100,  7, 1 }, // Key# 106
    { 127, 100,  7, 1 }, // Key# 107
    { 127, 100,  7, 1 }, // Key# 108
};

typedef struct {
    struct {
        uint8_t timbre_name[10]; // 32-127 (ASCII)
        uint8_t structure_of_partials_1_2; // 0-12 (1-13)
        uint8_t structure_of_partials_2_4; // 0-12 (1-13)
        uint8_t partial_mute; // 0-15 (0000-1111)
        uint8_t env_mode; // 0-1 (Normal, No sustain)
    } common_parameter;

    struct {
        uint8_t wg_pitch_coarse; // 0-96 (C1,C#1-C9)
        uint8_t wg_pitch_fine; // 0-100 (-50 - +50)
        uint8_t wg_pitch_keyfollow; // 0-16 (-1,-1/2,0,1,1/8,1/4,3/8,1/2,5/8,3/4,7/8,1,5/4,3/2,2.s1,s2)
        uint8_t wg_pitch_bender_switch; // 0,1 (ON/OFF)
        uint8_t wg_wave_form; // 0-1 (SQU/SAW)
        uint8_t wg_pitch_pcm_wave; // 0-127 (1-128)
        uint8_t wg_pitch_pulse_width; // 0-100
        uint8_t wg_pitch_pw_velo_sens; // 0-14 (-7 - +7)
        uint8_t p_env_depth; // 0-10
        uint8_t p_env_velo_sensitivity; // 1-100
        uint8_t p_env_time_key_follow; // 0-4
        uint8_t p_env_time_1; // 1-100
        uint8_t p_env_time_2; // 1-100
        uint8_t p_env_time_3; // 1-100
        uint8_t p_env_time_4; // 1-100
        uint8_t p_env_level_0; // 1-100 (-50 - +50)
        uint8_t p_env_level_1; // 1-100 (-50 - +50)
        uint8_t p_env_level_2; // 1-100 (-50 - +50)
        uint8_t p_env_sustain_level; // 1-100 (-50 - +50)
        uint8_t p_env_end_level; // 1-100 (-50 - +50)
        uint8_t p_lfo_rate; // 0-100
        uint8_t p_lfo_depth; // 0-100
        uint8_t p_lfo_mod_sensitivity; // 0-100
        uint8_t tvf_cut_off_freq; // 0-100
        uint8_t tvf_resonance; // 0-30
        uint8_t tvf_key_follow; // 0-16 (-1,-1/2,1/4,0,1,1/8,1/4,3/8,1/2,5/8,3/2,7/8,15/4,3/2,2,s1,s2)
        uint8_t tvf_bias_point_dir; // 0-127 (<1A - <7C >1A - >7C)
        uint8_t tvf_bias_level; // 0-14 (-7 - +7)
        uint8_t tvf_env_depth; // 0-100
        uint8_t tvf_env_velo_sensitivity; // 0-100
        uint8_t tvf_env_depth_key_follow; // 0-4
        uint8_t tvf_env_time_key_follow; // 0-4
        uint8_t tvf_env_time_1; // 1-100
        uint8_t tvf_env_time_2; // 1-100
        uint8_t tvf_env_time_3; // 1-100
        uint8_t tvf_env_time_4; // 1-100
        uint8_t tvf_env_time_5; // 1-100
        uint8_t tvf_env_level_1; // 1-100
        uint8_t tvf_env_level_2; // 1-100
        uint8_t tvf_env_level_3; // 1-100
        uint8_t tvf_env_sustain_level; // 0-100
        uint8_t tva_level; // 0-100
        uint8_t tva_velo_sens; // 0-100
        uint8_t tva_bias_point_1; // 1 0-127 (<1A - <7C >1A - >7C)
        uint8_t tva_bias_level_1; // 0-12 (-12 - 0)
        uint8_t tva_bias_point_2; // 0-127 (<1A - <7C >1A - >7C)
        uint8_t tva_bias_level_2; // 0-12 (-12 - 0)
        uint8_t tva_env_time_key_follow; // 0-4
        uint8_t tva_env_time_v_follow; // 0-4
        uint8_t tva_env_time_1; // 0-100
        uint8_t tva_env_time_2; // 0-100
        uint8_t tva_env_time_3; // 0-100
        uint8_t tva_env_time_4; // 0-100
        uint8_t tva_env_time_5; // 0-100
        uint8_t tva_env_level_1; // 0-100
        uint8_t tva_env_level_2; // 0-100
        uint8_t tva_env_level_3; // 0-100
        uint8_t tva_env_sustain_level; // 0-100
    } partial_parameter[];
} mt32_timbre_parameter;

const static mt32_timbre_parameter mt32_timbre_0 = { // "AcouPiano "
    { { 'A',  'c',  'o',  'u',  'P',  'i',  'a',  'n',  'o',  ' ' }, 1, 5, 0b1111, 0 },
    { { 36, 50, 16, 1, 0, 0, 75, 7, 3, 0, 0, 11, 12, 17, 0, 70, 61, 54, 50, 50, 64, 3, 57, 76, 0, 6, 15, 9, 30, 80, 0, 2, 0, 2, 15, 93, 96, 70, 60, 27, 16, 84, 90, 91, 12, 27, 12, 3, 2, 1, 11, 40, 86, 68, 100, 90, 86, 0 },
      { 80, 22, 10, 1, 0, 0, 75, 7, 3, 0, 0, 11, 12, 17, 0, 70, 61, 54, 50, 50, 64, 3, 40, 70, 0, 8, 10, 11, 25, 21, 0, 1, 0, 7, 29, 100, 96, 97, 60, 45, 0, 35, 90, 64, 8, 27, 12, 1, 0, 1, 10, 32, 100, 100, 100, 90, 66, 0 },
      { 36, 58, 16, 1, 0, 43, 68, 7, 3, 0, 0, 11, 12, 17, 0, 70, 61, 54, 50, 50, 64, 3, 44, 70, 0, 8, 15, 10, 25, 100, 1, 1, 1, 2, 15, 93, 96, 70, 60, 27, 16, 40, 90, 64, 5, 27, 12, 2, 2, 0, 10, 53, 89, 70, 100, 79, 36, 0 },
      { 49, 50, 6, 0, 0, 20, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 95, 91, 12, 59, 6, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 99 } }
};

const static mt32_timbre_parameter mt32_timbre_1 = { // "BrightPian"
    { { 'B',  'r',  'i',  'g',  'h',  't',  'P',  'i',  'a',  'n' }, 0, 0, 0b0011, 0 },
    { { 36, 49, 16, 1, 0, 0, 75, 7, 2, 3, 0, 11, 12, 17, 0, 70, 61, 54, 50, 50, 0, 0, 57, 76, 0, 7, 89, 4, 40, 100, 0, 2, 0, 9, 27, 93, 96, 100, 71, 39, 16, 84, 80, 90, 12, 63, 10, 4, 2, 1, 11, 40, 86, 68, 100, 90, 86, 0 },
      { 48, 50, 16, 1, 0, 0, 75, 7, 2, 3, 0, 11, 12, 17, 0, 70, 61, 54, 50, 50, 0, 0, 57, 70, 0, 7, 38, 5, 40, 100, 0, 2, 0, 9, 27, 93, 96, 86, 71, 39, 16, 76, 80, 67, 8, 103, 5, 3, 2, 1, 11, 40, 71, 68, 100, 90, 83, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_2 = { // "ElecPiano "
    { { 'E',  'l',  'e',  'c',  'P',  'i',  'a',  'n',  'o',  ' ' }, 1, 5, 0b0111, 0 },
    { { 36, 50, 15, 1, 0, 0, 75, 7, 3, 0, 1, 10, 7, 22, 0, 50, 66, 51, 50, 50, 63, 0, 47, 44, 0, 8, 22, 10, 67, 40, 0, 2, 0, 0, 59, 100, 82, 100, 71, 41, 0, 79, 85, 92, 12, 89, 12, 2, 0, 0, 50, 71, 100, 60, 100, 82, 40, 0 },
      { 79, 71, 7, 1, 0, 0, 91, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 21, 20, 6, 103, 7, 100, 0, 0, 2, 0, 29, 64, 75, 29, 100, 73, 0, 0, 55, 75, 15, 8, 91, 12, 1, 1, 0, 40, 61, 74, 40, 100, 54, 35, 0 },
      { 49, 50, 6, 0, 0, 20, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 91, 12, 59, 10, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 99 } }
};

const static mt32_timbre_parameter mt32_timbre_3 = { // "Honkytonk "
    { { 'H',  'o',  'n',  'k',  'y',  't',  'o',  'n',  'k',  ' ' }, 1, 0, 0b0111, 0 },
    { { 36, 60, 16, 1, 0, 0, 68, 8, 7, 0, 1, 2, 0, 7, 0, 50, 100, 48, 50, 50, 56, 4, 67, 50, 0, 6, 22, 8, 67, 71, 0, 2, 0, 0, 59, 71, 82, 100, 71, 41, 0, 72, 85, 92, 12, 105, 10, 1, 0, 0, 50, 71, 74, 60, 100, 82, 40, 0 },
      { 80, 79, 15, 1, 0, 0, 33, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 84, 16, 6, 103, 6, 100, 0, 0, 2, 0, 29, 72, 75, 29, 88, 100, 0, 0, 28, 70, 15, 6, 91, 12, 1, 1, 0, 40, 61, 74, 40, 100, 54, 35, 0 },
      { 48, 40, 16, 1, 1, 0, 80, 8, 2, 0, 1, 7, 3, 7, 0, 50, 70, 48, 50, 50, 56, 0, 72, 50, 20, 6, 22, 8, 75, 71, 0, 2, 0, 0, 59, 71, 82, 100, 71, 41, 0, 72, 85, 92, 12, 93, 10, 1, 0, 1, 50, 71, 74, 60, 100, 82, 40, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_4 = { // "Rhodes    "
    { { 'R',  'h',  'o',  'd',  'e',  's',  ' ',  ' ',  ' ',  ' ' }, 1, 0, 0b0011, 0 },
    { { 36, 50, 11, 1, 0, 0, 18, 7, 10, 3, 0, 7, 58, 69, 100, 50, 50, 50, 50, 50, 73, 0, 0, 0, 0, 11, 13, 11, 83, 0, 0, 0, 0, 22, 92, 21, 82, 100, 87, 0, 0, 84, 74, 86, 12, 0, 12, 0, 0, 0, 92, 0, 0, 38, 100, 0, 0, 0 },
      { 36, 57, 11, 1, 0, 0, 78, 7, 10, 3, 0, 7, 58, 69, 100, 50, 50, 50, 50, 50, 73, 0, 0, 13, 0, 11, 15, 10, 77, 57, 0, 0, 0, 10, 95, 0, 82, 100, 68, 0, 0, 84, 50, 86, 12, 0, 12, 0, 0, 0, 94, 0, 0, 38, 100, 0, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_5 = { // "Chorused  "
    { { 'C',  'h',  'o',  'r',  'u',  's',  'e',  'd',  ' ',  ' ' }, 4, 0, 0b0011, 0 },
    { { 36, 55, 15, 0, 0, 0, 62, 8, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 52, 0, 0, 67, 3, 9, 91, 3, 44, 38, 0, 1, 1, 42, 50, 66, 40, 100, 70, 36, 0, 60, 77, 96, 10, 27, 12, 1, 0, 1, 65, 75, 82, 61, 100, 82, 48, 0 },
      { 55, 54, 15, 0, 0, 39, 69, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 52, 0, 0, 0, 0, 8, 91, 6, 36, 38, 1, 1, 1, 50, 58, 67, 46, 100, 69, 40, 20, 36, 73, 88, 9, 27, 12, 2, 0, 1, 78, 73, 82, 61, 100, 76, 48, 20 } }
};

const static mt32_timbre_parameter mt32_timbre_6 = { // "Harpsichrd"
    { { 'H',  'a',  'r',  'p',  's',  'i',  'c',  'h',  'r',  'd' }, 1, 2, 0b0111, 0 },
    { { 48, 50, 16, 1, 1, 0, 60, 7, 0, 0, 0, 0, 0, 37, 0, 50, 50, 50, 50, 50, 64, 2, 50, 71, 30, 9, 103, 8, 10, 0, 0, 0, 3, 50, 32, 42, 61, 47, 90, 92, 80, 68, 75, 27, 12, 15, 5, 1, 1, 2, 40, 75, 92, 60, 97, 92, 30, 0 },
      { 67, 52, 16, 1, 0, 0, 54, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 88, 30, 11, 115, 2, 10, 10, 0, 0, 13, 33, 15, 60, 23, 70, 42, 60, 40, 60, 61, 27, 12, 15, 5, 1, 1, 1, 41, 41, 72, 60, 100, 80, 81, 0 },
      { 36, 52, 16, 1, 0, 43, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 77, 91, 6, 27, 12, 3, 0, 1, 44, 60, 83, 60, 100, 86, 53, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_7 = { // "Clavinet  "
    { { 'C',  'l',  'a',  'v',  'i',  'n',  'e',  't',  ' ',  ' ' }, 1, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 0, 0, 100, 7, 3, 0, 2, 1, 1, 3, 21, 50, 83, 49, 50, 41, 64, 1, 41, 75, 9, 8, 36, 9, 50, 47, 0, 1, 3, 18, 42, 64, 25, 79, 65, 45, 21, 80, 70, 127, 6, 27, 12, 3, 3, 1, 5, 33, 89, 20, 100, 97, 85, 0 },
      { 82, 50, 6, 1, 1, 0, 90, 7, 8, 0, 0, 1, 0, 2, 0, 50, 96, 48, 50, 50, 0, 0, 0, 100, 11, 13, 24, 10, 14, 14, 0, 1, 2, 1, 48, 57, 38, 61, 33, 26, 0, 36, 63, 127, 0, 83, 12, 3, 3, 1, 8, 37, 100, 31, 100, 90, 54, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_8 = { // "Celesta   "
    { { 'C',  'e',  'l',  'e',  's',  't',  'a',  ' ',  ' ',  ' ' }, 1, 0, 0b0011, 0 },
    { { 36, 50, 11, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 53, 0, 50, 50, 50, 50, 50, 62, 14, 34, 50, 0, 11, 41, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 91, 12, 27, 8, 3, 0, 0, 10, 35, 80, 69, 100, 98, 87, 0 },
      { 70, 68, 11, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 75, 0, 11, 27, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 91, 12, 27, 8, 1, 0, 0, 5, 42, 78, 76, 100, 85, 51, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_9 = { // "Glock     "
    { { 'G',  'l',  'o',  'c',  'k',  ' ',  ' ',  ' ',  ' ',  ' ' }, 1, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 100, 0, 50, 50, 60, 3, 34, 53, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 60, 91, 12, 27, 0, 4, 0, 0, 7, 55, 85, 76, 100, 79, 64, 0 },
      { 67, 72, 16, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 100, 0, 50, 50, 0, 0, 0, 66, 0, 9, 51, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 60, 91, 12, 27, 0, 1, 0, 0, 30, 42, 71, 76, 100, 95, 76, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_10 = { // "MusicBox  "
    { { 'M',  'u',  's',  'i',  'c',  'B',  'o',  'x',  ' ',  ' ' }, 1, 0, 0b0111, 1 },
    { { 60, 50, 16, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 60, 4, 60, 67, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 80, 91, 12, 27, 12, 4, 0, 20, 0, 55, 71, 76, 0, 100, 52, 0 },
      { 79, 50, 16, 1, 1, 0, 0, 7, 3, 0, 0, 1, 36, 0, 0, 100, 51, 50, 50, 50, 66, 19, 60, 80, 0, 9, 51, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 80, 91, 8, 27, 12, 4, 0, 20, 0, 55, 71, 76, 0, 100, 52, 0 },
      { 36, 50, 16, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 60, 4, 60, 69, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 80, 91, 12, 27, 12, 3, 0, 0, 7, 55, 71, 76, 100, 79, 52, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_11 = { // "Vibraphone"
    { { 'V',  'i',  'b',  'r',  'a',  'p',  'h',  'o',  'n',  'e' }, 2, 2, 0b0111, 0 },
    { { 75, 74, 16, 1, 0, 52, 85, 7, 0, 0, 0, 0, 0, 10, 0, 50, 50, 50, 50, 50, 60, 44, 0, 65, 0, 11, 51, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 62, 127, 9, 27, 12, 2, 1, 0, 17, 36, 84, 72, 100, 53, 21, 0 },
      { 36, 50, 16, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 61, 9, 40, 54, 0, 9, 104, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 75, 91, 12, 27, 12, 2, 1, 6, 14, 28, 90, 72, 87, 97, 100, 0 },
      { 36, 52, 16, 0, 0, 32, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 90, 127, 0, 27, 12, 0, 0, 0, 35, 56, 60, 72, 100, 99, 99, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_12 = { // "Marimba   "
    { { 'M',  'a',  'r',  'i',  'm',  'b',  'a',  ' ',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 65, 11, 1, 0, 31, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 75, 105, 1, 7, 7, 0, 4, 0, 42, 76, 80, 60, 100, 100, 0, 0 },
      { 36, 50, 11, 1, 1, 0, 48, 7, 2, 0, 4, 9, 10, 15, 0, 79, 62, 55, 50, 50, 62, 34, 61, 45, 22, 11, 16, 11, 39, 0, 0, 1, 7, 9, 13, 67, 74, 62, 81, 25, 0, 100, 60, 115, 0, 3, 0, 3, 0, 5, 18, 27, 70, 70, 89, 100, 92, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_13 = { // "Xylophone "
    { { 'X',  'y',  'l',  'o',  'p',  'h',  'o',  'n',  'e',  ' ' }, 2, 0, 0b0001, 0 },
    { { 36, 50, 16, 1, 0, 33, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 67, 0, 85, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 61, 91, 12, 15, 0, 0, 0, 0, 0, 0, 0, 50, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_14 = { // "Tubular   "
    { { 'T',  'u',  'b',  'u',  'l',  'a',  'r',  ' ',  ' ',  ' ' }, 0, 5, 0b0001, 0 },
    { { 36, 58, 11, 0, 0, 0, 65, 7, 0, 0, 0, 0, 0, 58, 0, 50, 50, 50, 50, 50, 55, 18, 29, 33, 11, 7, 0, 7, 100, 28, 0, 0, 3, 41, 49, 72, 89, 57, 74, 60, 48, 72, 70, 110, 8, 27, 12, 2, 4, 1, 14, 53, 58, 92, 100, 94, 83, 78 } }
};

const static mt32_timbre_parameter mt32_timbre_15 = { // "Dulcimer  "
    { { 'D',  'u',  'l',  'c',  'i',  'm',  'e',  'r',  ' ',  ' ' }, 5, 0, 0b0011, 0 },
    { { 36, 53, 15, 1, 0, 42, 60, 7, 0, 0, 1, 10, 7, 22, 0, 50, 66, 51, 50, 50, 0, 0, 0, 38, 17, 8, 22, 10, 62, 70, 1, 2, 1, 19, 34, 100, 95, 91, 76, 54, 0, 100, 70, 92, 12, 28, 0, 0, 0, 0, 100, 85, 100, 80, 100, 25, 0, 0 },
      { 36, 46, 15, 1, 0, 39, 60, 7, 0, 0, 1, 10, 7, 22, 0, 50, 66, 51, 50, 50, 0, 0, 0, 38, 17, 8, 22, 10, 62, 70, 1, 2, 1, 19, 34, 100, 95, 91, 76, 54, 0, 100, 90, 92, 9, 16, 12, 0, 0, 0, 67, 100, 100, 80, 100, 39, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_16 = { // "HammondOrg"
    { { 'H',  'a',  'm',  'm',  'o',  'n',  'd',  'O',  'r',  'g' }, 0, 2, 0b0111, 0 },
    { { 36, 50, 16, 1, 1, 49, 52, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 69, 9, 60, 67, 0, 9, 104, 6, 61, 0, 0, 0, 0, 6, 0, 0, 0, 35, 0, 0, 0, 74, 75, 91, 12, 27, 12, 4, 1, 1, 0, 0, 0, 27, 100, 100, 100, 100 },
      { 60, 50, 16, 1, 1, 0, 58, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 69, 9, 60, 53, 0, 11, 104, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 75, 91, 12, 27, 12, 4, 1, 1, 12, 38, 27, 27, 100, 63, 63, 63 },
      { 12, 50, 16, 1, 0, 0, 71, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 69, 9, 60, 60, 0, 9, 104, 6, 61, 0, 0, 0, 0, 16, 0, 0, 0, 56, 0, 0, 0, 42, 75, 91, 12, 27, 12, 4, 1, 1, 17, 28, 0, 27, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_17 = { // "PercOrgan "
    { { 'P',  'e',  'r',  'c',  'O',  'r',  'g',  'a',  'n',  ' ' }, 0, 2, 0b0111, 0 },
    { { 48, 50, 16, 1, 0, 27, 52, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 69, 9, 62, 50, 30, 11, 104, 6, 0, 0, 0, 0, 0, 16, 0, 0, 0, 69, 0, 0, 0, 64, 75, 91, 12, 27, 12, 4, 1, 0, 17, 28, 0, 27, 100, 100, 100, 100 },
      { 24, 50, 16, 1, 0, 27, 52, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 69, 9, 62, 64, 30, 9, 104, 6, 0, 0, 0, 0, 0, 16, 0, 0, 0, 69, 0, 0, 0, 64, 75, 91, 12, 27, 12, 4, 1, 0, 17, 28, 0, 27, 100, 100, 100, 100 },
      { 25, 50, 16, 1, 1, 71, 52, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 69, 9, 62, 67, 0, 11, 104, 6, 0, 0, 0, 0, 0, 6, 0, 0, 0, 42, 0, 0, 0, 50, 75, 91, 12, 27, 12, 4, 1, 0, 65, 0, 0, 27, 100, 0, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_18 = { // "RockOrgan "
    { { 'R',  'o',  'c',  'k',  'O',  'r',  'g',  'a',  'n',  ' ' }, 2, 2, 0b0111, 0 },
    { { 37, 45, 11, 1, 0, 115, 52, 7, 10, 0, 0, 0, 6, 0, 0, 100, 100, 50, 50, 50, 64, 9, 40, 64, 30, 9, 104, 6, 0, 0, 0, 0, 0, 16, 0, 0, 0, 69, 0, 0, 0, 35, 75, 91, 12, 27, 12, 4, 1, 0, 17, 28, 0, 40, 100, 100, 100, 100 },
      { 24, 50, 16, 1, 0, 27, 59, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 70, 46, 40, 84, 0, 11, 104, 6, 94, 0, 0, 0, 0, 6, 0, 0, 0, 69, 0, 0, 0, 44, 75, 91, 12, 27, 12, 4, 1, 0, 17, 28, 0, 40, 100, 100, 100, 100 },
      { 36, 57, 16, 1, 1, 49, 52, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 71, 35, 40, 52, 28, 11, 104, 6, 32, 0, 0, 0, 0, 10, 0, 0, 39, 62, 0, 0, 0, 81, 75, 91, 12, 27, 12, 4, 1, 0, 0, 0, 0, 41, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_19 = { // "ChurchOrg "
    { { 'C',  'h',  'u',  'r',  'c',  'h',  'O',  'r',  'g',  ' ' }, 8, 0, 0b0111, 0 },
    { { 36, 44, 16, 1, 0, 49, 0, 7, 4, 0, 0, 10, 12, 18, 100, 10, 31, 44, 50, 45, 62, 3, 34, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 70, 127, 0, 27, 12, 1, 0, 12, 24, 19, 24, 69, 93, 96, 100, 100 },
      { 48, 49, 16, 1, 0, 49, 0, 7, 4, 0, 0, 13, 10, 12, 0, 19, 35, 45, 50, 50, 62, 3, 34, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 70, 91, 5, 27, 10, 1, 0, 5, 4, 8, 11, 64, 53, 83, 89, 100 },
      { 79, 63, 16, 1, 1, 0, 55, 7, 3, 0, 0, 12, 12, 12, 0, 27, 39, 47, 50, 56, 52, 10, 36, 41, 0, 10, 51, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 70, 127, 0, 27, 12, 1, 0, 2, 3, 6, 11, 65, 49, 72, 90, 99 } }
};

const static mt32_timbre_parameter mt32_timbre_20 = { // "ReedOrgan "
    { { 'R',  'e',  'e',  'd',  'O',  'r',  'g',  'a',  'n',  ' ' }, 0, 2, 0b0011, 0 },
    { { 48, 57, 16, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 66, 5, 61, 73, 5, 3, 104, 6, 0, 0, 0, 0, 0, 10, 0, 0, 0, 62, 0, 0, 0, 52, 75, 91, 12, 27, 12, 4, 1, 24, 0, 0, 0, 27, 100, 99, 100, 100 },
      { 36, 57, 16, 1, 0, 0, 100, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 66, 5, 61, 94, 26, 3, 104, 6, 0, 0, 0, 0, 0, 10, 0, 0, 0, 62, 0, 0, 0, 58, 75, 91, 12, 27, 12, 4, 1, 24, 0, 0, 0, 27, 100, 99, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_21 = { // "Accordion "
    { { 'A',  'c',  'c',  'o',  'r',  'd',  'i',  'o',  'n',  ' ' }, 5, 0, 0b0011, 0 },
    { { 36, 57, 16, 1, 0, 37, 0, 7, 5, 0, 0, 19, 20, 30, 84, 17, 34, 43, 50, 20, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 70, 103, 7, 115, 0, 0, 0, 13, 7, 9, 16, 16, 67, 84, 96, 100 },
      { 48, 44, 16, 1, 1, 49, 55, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 60, 8, 47, 93, 16, 11, 46, 8, 50, 0, 0, 0, 34, 20, 24, 24, 60, 3, 7, 11, 16, 75, 70, 127, 0, 115, 0, 0, 0, 24, 7, 14, 30, 9, 81, 95, 100, 85 } }
};

const static mt32_timbre_parameter mt32_timbre_22 = { // "Harmonica "
    { { 'H',  'a',  'r',  'm',  'o',  'n',  'i',  'c',  'a',  ' ' }, 1, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 0, 0, 82, 7, 7, 2, 4, 12, 12, 18, 0, 19, 34, 43, 50, 50, 66, 0, 32, 69, 20, 8, 117, 4, 36, 85, 0, 0, 12, 37, 68, 55, 89, 28, 45, 32, 34, 72, 80, 91, 12, 27, 12, 3, 4, 6, 18, 17, 38, 54, 62, 87, 97, 100 },
      { 55, 51, 16, 1, 0, 0, 95, 7, 3, 0, 0, 32, 45, 33, 100, 50, 50, 50, 60, 50, 0, 0, 0, 72, 26, 10, 115, 4, 0, 0, 0, 0, 18, 24, 37, 55, 89, 31, 46, 32, 34, 82, 80, 127, 7, 27, 12, 0, 0, 8, 28, 100, 100, 54, 76, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_23 = { // "TangoAcc  "
    { { 'T',  'a',  'n',  'g',  'o',  'A',  'c',  'c',  ' ',  ' ' }, 5, 0, 0b0111, 0 },
    { { 36, 57, 16, 1, 0, 37, 0, 7, 5, 0, 0, 19, 20, 30, 84, 50, 40, 40, 40, 20, 60, 2, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 70, 103, 7, 115, 0, 0, 0, 3, 27, 69, 26, 36, 87, 100, 86, 80 },
      { 24, 44, 16, 1, 1, 49, 55, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 60, 1, 0, 93, 16, 11, 46, 8, 50, 0, 0, 0, 34, 20, 24, 24, 60, 3, 7, 11, 16, 48, 100, 127, 0, 115, 0, 4, 4, 4, 17, 54, 90, 39, 81, 100, 76, 37 },
      { 36, 44, 16, 1, 2, 49, 55, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 60, 0, 47, 93, 16, 11, 47, 8, 50, 0, 0, 0, 34, 20, 24, 24, 60, 3, 7, 11, 16, 56, 60, 127, 0, 115, 0, 0, 0, 24, 7, 14, 30, 9, 81, 95, 100, 85 } }
};

const static mt32_timbre_parameter mt32_timbre_24 = { // "NylonGtr  "
    { { 'N',  'y',  'l',  'o',  'n',  'G',  't',  'r',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 0, 39, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 65, 120, 12, 17, 12, 0, 1, 0, 0, 0, 0, 55, 100, 100, 100, 100 },
      { 36, 50, 16, 1, 0, 0, 80, 7, 5, 0, 0, 1, 2, 12, 58, 51, 70, 48, 50, 37, 12, 4, 4, 41, 4, 10, 40, 11, 26, 30, 0, 0, 1, 5, 9, 94, 79, 88, 55, 69, 6, 58, 69, 91, 12, 27, 12, 1, 3, 0, 7, 2, 85, 50, 100, 67, 100, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_25 = { // "SteelGtr  "
    { { 'S',  't',  'e',  'e',  'l',  'G',  't',  'r',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 0, 40, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 91, 12, 27, 12, 0, 0, 0, 0, 0, 75, 74, 100, 100, 100, 0 },
      { 36, 50, 16, 1, 0, 0, 60, 7, 4, 0, 0, 1, 1, 18, 0, 50, 100, 41, 50, 50, 67, 5, 59, 88, 14, 9, 105, 3, 50, 0, 0, 0, 0, 24, 42, 58, 100, 84, 52, 19, 0, 64, 80, 91, 12, 27, 12, 3, 4, 2, 15, 46, 76, 72, 100, 91, 83, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_26 = { // "JazzGuitar"
    { { 'J',  'a',  'z',  'z',  'G',  'u',  'i',  't',  'a',  'r' }, 0, 0, 0b0001, 0 },
    { { 36, 50, 16, 1, 0, 0, 71, 7, 3, 3, 4, 16, 20, 55, 0, 33, 43, 46, 50, 50, 62, 12, 52, 85, 0, 6, 102, 8, 37, 83, 0, 0, 0, 17, 11, 60, 36, 84, 39, 26, 0, 80, 82, 75, 12, 27, 12, 2, 1, 0, 13, 61, 89, 40, 100, 91, 38, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_27 = { // "CleanGtr  "
    { { 'C',  'l',  'e',  'a',  'n',  'G',  't',  'r',  ' ',  ' ' }, 1, 2, 0b0111, 0 },
    { { 36, 50, 16, 1, 0, 0, 85, 7, 3, 3, 4, 16, 20, 55, 0, 33, 43, 46, 50, 50, 62, 12, 52, 69, 0, 6, 102, 8, 37, 83, 0, 0, 0, 17, 11, 60, 36, 84, 39, 26, 0, 70, 68, 75, 12, 27, 12, 2, 1, 0, 13, 69, 89, 40, 100, 91, 38, 0 },
      { 83, 22, 16, 1, 0, 0, 85, 7, 6, 3, 4, 1, 1, 9, 0, 46, 100, 43, 50, 50, 62, 12, 79, 51, 0, 9, 102, 4, 93, 25, 0, 0, 3, 2, 11, 60, 36, 84, 56, 32, 0, 28, 68, 68, 7, 27, 12, 2, 1, 0, 13, 66, 89, 100, 100, 91, 38, 0 },
      { 36, 53, 16, 1, 0, 40, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 86, 127, 0, 27, 12, 0, 0, 0, 61, 50, 46, 4, 100, 96, 72, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_28 = { // "MutedGtr  "
    { { 'M',  'u',  't',  'e',  'd',  'G',  't',  'r',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 38, 55, 15, 1, 1, 64, 100, 7, 0, 1, 0, 2, 12, 24, 37, 50, 34, 43, 50, 50, 62, 0, 35, 75, 0, 6, 0, 7, 71, 100, 0, 0, 0, 20, 31, 0, 0, 84, 71, 0, 0, 58, 68, 103, 12, 89, 12, 0, 0, 9, 10, 7, 0, 16, 30, 100, 0, 0 },
      { 36, 44, 16, 1, 0, 0, 100, 7, 0, 1, 0, 2, 12, 24, 37, 50, 34, 43, 50, 50, 62, 0, 35, 47, 13, 11, 0, 7, 99, 0, 0, 0, 16, 0, 19, 100, 63, 7, 100, 46, 0, 74, 70, 103, 12, 89, 12, 0, 0, 15, 1, 76, 0, 37, 4, 99, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_29 = { // "Overdriven"
    { { 'O',  'v',  'e',  'r',  'd',  'r',  'i',  'v',  'e',  'n' }, 1, 7, 0b0011, 0 },
    { { 36, 60, 11, 1, 0, 0, 74, 7, 10, 3, 4, 15, 0, 2, 34, 57, 50, 50, 50, 50, 63, 10, 100, 100, 18, 5, 0, 0, 0, 44, 0, 0, 36, 41, 29, 46, 78, 100, 0, 100, 2, 72, 75, 90, 12, 0, 12, 0, 0, 1, 93, 100, 100, 26, 100, 0, 0, 0 },
      { 55, 61, 11, 1, 1, 0, 5, 7, 10, 3, 4, 19, 0, 2, 34, 50, 50, 50, 50, 50, 63, 10, 100, 100, 30, 2, 0, 0, 0, 44, 0, 0, 36, 41, 29, 46, 78, 100, 0, 100, 2, 72, 75, 85, 1, 0, 12, 0, 0, 1, 93, 100, 100, 26, 100, 0, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_30 = { // "Distortion"
    { { 'D',  'i',  's',  't',  'o',  'r',  't',  'i',  'o',  'n' }, 3, 0, 0b0111, 0 },
    { { 48, 50, 11, 1, 0, 40, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 95, 103, 8, 127, 2, 0, 0, 0, 50, 70, 74, 18, 100, 82, 40, 0 },
      { 48, 51, 15, 1, 1, 0, 29, 14, 9, 3, 0, 0, 11, 0, 0, 50, 0, 50, 50, 50, 64, 4, 100, 88, 0, 5, 0, 7, 100, 6, 0, 0, 0, 16, 59, 72, 82, 82, 76, 71, 66, 60, 70, 91, 12, 27, 12, 0, 0, 0, 50, 70, 82, 18, 100, 90, 77, 53 },
      { 48, 51, 15, 1, 1, 0, 29, 14, 9, 3, 0, 0, 11, 0, 0, 50, 0, 50, 50, 50, 64, 4, 100, 84, 0, 5, 0, 7, 100, 6, 0, 0, 0, 16, 59, 72, 82, 82, 76, 71, 66, 60, 70, 91, 12, 27, 12, 0, 0, 0, 50, 70, 82, 18, 100, 90, 77, 53 } }
};

const static mt32_timbre_parameter mt32_timbre_31 = { // "GuitarHrmn"
    { { 'G',  'u',  'i',  't',  'a',  'r',  'H',  'r',  'm',  'n' }, 1, 0, 0b0011, 0 },
    { { 48, 50, 11, 1, 1, 0, 100, 5, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 63, 0, 76, 67, 0, 9, 99, 4, 75, 100, 0, 0, 0, 32, 21, 21, 47, 100, 32, 49, 49, 72, 76, 91, 12, 27, 12, 0, 0, 3, 0, 0, 0, 10, 100, 100, 100, 100 },
      { 55, 49, 15, 1, 0, 0, 100, 13, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 60, 0, 9, 91, 3, 42, 90, 3, 0, 6, 83, 0, 0, 54, 100, 0, 0, 0, 68, 82, 91, 12, 27, 12, 4, 1, 6, 0, 0, 0, 40, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_32 = { // "AcouBass  "
    { { 'A',  'c',  'o',  'u',  'B',  'a',  's',  's',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 0, 38, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 60, 91, 12, 27, 12, 0, 0, 0, 0, 0, 0, 40, 100, 100, 100, 90 },
      { 36, 50, 16, 1, 0, 0, 69, 7, 2, 0, 0, 11, 10, 23, 0, 69, 59, 53, 50, 50, 62, 10, 69, 47, 0, 10, 30, 11, 21, 0, 0, 0, 21, 38, 59, 70, 51, 98, 34, 4, 4, 78, 70, 91, 12, 27, 12, 3, 0, 2, 49, 28, 75, 54, 100, 97, 23, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_33 = { // "FingerBass"
    { { 'F',  'i',  'n',  'g',  'e',  'r',  'B',  'a',  's',  's' }, 0, 0, 0b0001, 0 },
    { { 36, 50, 15, 1, 0, 0, 100, 7, 1, 0, 0, 0, 9, 20, 0, 58, 46, 50, 50, 50, 64, 0, 100, 44, 0, 3, 19, 11, 56, 13, 4, 2, 12, 23, 19, 40, 53, 100, 75, 64, 63, 72, 71, 91, 12, 27, 12, 0, 0, 1, 83, 0, 0, 15, 100, 0, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_34 = { // "PickBass  "
    { { 'P',  'i',  'c',  'k',  'B',  'a',  's',  's',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 42, 50, 15, 1, 0, 3, 100, 7, 1, 0, 0, 0, 9, 20, 0, 58, 46, 50, 50, 50, 64, 0, 100, 49, 0, 7, 0, 7, 77, 25, 0, 0, 1, 13, 71, 89, 50, 100, 75, 37, 0, 64, 67, 91, 12, 27, 12, 0, 0, 0, 0, 26, 0, 15, 100, 100, 0, 0 },
      { 48, 50, 16, 1, 1, 0, 100, 7, 3, 0, 0, 14, 14, 13, 0, 24, 39, 46, 50, 50, 62, 6, 61, 71, 15, 10, 30, 10, 45, 0, 0, 0, 0, 17, 46, 36, 63, 78, 77, 38, 20, 96, 82, 127, 9, 27, 12, 3, 0, 0, 4, 14, 70, 40, 100, 92, 100, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_35 = { // "Fretless  "
    { { 'F',  'r',  'e',  't',  'l',  'e',  's',  's',  ' ',  ' ' }, 5, 0, 0b1111, 0 },
    { { 36, 46, 16, 1, 0, 35, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 60, 127, 0, 27, 12, 0, 0, 0, 100, 100, 100, 46, 100, 100, 100, 100 },
      { 36, 46, 16, 1, 0, 38, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 85, 65, 7, 27, 12, 4, 0, 0, 34, 100, 100, 46, 100, 0, 0, 0 },
      { 48, 44, 16, 1, 1, 0, 82, 7, 0, 0, 0, 0, 0, 13, 0, 50, 50, 50, 50, 50, 54, 20, 0, 51, 26, 10, 30, 11, 22, 46, 0, 1, 7, 7, 18, 34, 100, 29, 43, 53, 58, 72, 75, 127, 9, 27, 12, 0, 0, 7, 3, 13, 97, 40, 67, 85, 97, 0 },
      { 48, 60, 16, 1, 1, 0, 82, 7, 0, 0, 0, 0, 0, 8, 0, 50, 50, 50, 50, 50, 66, 0, 56, 58, 26, 11, 30, 10, 29, 12, 0, 1, 7, 14, 16, 21, 100, 13, 23, 17, 3, 72, 75, 127, 9, 27, 12, 0, 0, 4, 7, 19, 97, 56, 73, 93, 100, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_36 = { // "SlapBass1 "
    { { 'S',  'l',  'a',  'p',  'B',  'a',  's',  's',  '1',  ' ' }, 5, 0, 0b0111, 0 },
    { { 36, 50, 16, 1, 0, 36, 0, 7, 0, 0, 0, 15, 12, 18, 0, 21, 35, 44, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 80, 80, 6, 15, 12, 0, 0, 0, 60, 0, 0, 30, 100, 0, 0, 0 },
      { 36, 38, 16, 1, 0, 37, 0, 7, 0, 0, 0, 13, 12, 18, 0, 21, 37, 44, 50, 50, 64, 0, 56, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 80, 67, 4, 15, 12, 0, 0, 0, 59, 78, 100, 30, 100, 80, 55, 0 },
      { 36, 55, 16, 1, 1, 0, 38, 7, 4, 0, 0, 12, 12, 12, 0, 27, 39, 47, 50, 50, 55, 25, 38, 40, 20, 7, 46, 7, 100, 25, 0, 0, 0, 45, 80, 94, 28, 100, 85, 48, 26, 76, 80, 91, 12, 15, 12, 0, 0, 0, 59, 59, 100, 30, 100, 80, 55, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_37 = { // "SlapBass2 "
    { { 'S',  'l',  'a',  'p',  'B',  'a',  's',  's',  '2',  ' ' }, 5, 0, 0b0111, 0 },
    { { 36, 50, 16, 1, 0, 36, 0, 7, 0, 0, 0, 15, 12, 18, 0, 21, 35, 44, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 80, 80, 12, 15, 12, 0, 0, 0, 60, 0, 0, 30, 100, 0, 0, 0 },
      { 36, 38, 16, 1, 0, 37, 0, 7, 0, 0, 0, 13, 12, 18, 0, 21, 37, 44, 50, 50, 64, 0, 56, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 80, 67, 12, 15, 12, 0, 0, 0, 59, 78, 100, 30, 100, 80, 55, 0 },
      { 36, 55, 16, 1, 1, 0, 38, 7, 4, 0, 0, 12, 12, 12, 0, 27, 39, 47, 50, 50, 55, 25, 38, 67, 23, 7, 46, 7, 79, 25, 0, 0, 0, 45, 80, 94, 28, 100, 85, 48, 26, 72, 80, 91, 12, 15, 12, 0, 0, 0, 59, 59, 100, 30, 100, 80, 55, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_38 = { // "SynthBass1"
    { { 'S',  'y',  'n',  't',  'h',  'B',  'a',  's',  's',  '1' }, 0, 0, 0b0011, 0 },
    { { 36, 57, 16, 1, 1, 0, 0, 7, 6, 3, 0, 1, 0, 3, 41, 50, 100, 42, 50, 41, 64, 0, 0, 60, 15, 9, 48, 10, 50, 100, 0, 1, 0, 24, 44, 50, 45, 99, 83, 55, 40, 82, 75, 91, 12, 27, 12, 2, 4, 0, 15, 26, 95, 60, 100, 92, 84, 35 },
      { 36, 44, 16, 1, 0, 0, 59, 7, 0, 3, 0, 0, 0, 0, 16, 12, 29, 42, 50, 50, 61, 15, 56, 60, 15, 9, 48, 10, 50, 100, 0, 1, 0, 24, 44, 50, 45, 99, 83, 55, 40, 79, 75, 91, 12, 27, 12, 2, 4, 0, 15, 26, 95, 60, 100, 92, 84, 35 } }
};

const static mt32_timbre_parameter mt32_timbre_39 = { // "SynthBass2"
    { { 'S',  'y',  'n',  't',  'h',  'B',  'a',  's',  's',  '2' }, 0, 0, 0b0001, 0 },
    { { 48, 50, 16, 1, 1, 0, 95, 7, 8, 0, 0, 0, 0, 39, 0, 50, 50, 50, 50, 50, 62, 36, 49, 43, 27, 7, 98, 2, 65, 58, 0, 0, 8, 10, 34, 52, 100, 83, 100, 62, 19, 84, 70, 103, 7, 27, 12, 0, 4, 0, 26, 42, 90, 42, 100, 100, 89, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_40 = { // "Violin    "
    { { 'V',  'i',  'o',  'l',  'i',  'n',  ' ',  ' ',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 37, 50, 16, 1, 1, 45, 70, 7, 7, 3, 3, 13, 20, 44, 0, 27, 39, 50, 50, 50, 64, 30, 0, 92, 0, 6, 29, 8, 16, 40, 4, 4, 17, 32, 23, 25, 88, 36, 58, 28, 16, 80, 80, 35, 7, 3, 0, 3, 4, 0, 58, 10, 17, 58, 100, 0, 0, 0 },
      { 36, 57, 11, 1, 0, 0, 78, 7, 7, 3, 4, 9, 10, 24, 0, 38, 44, 48, 50, 50, 62, 29, 41, 85, 0, 9, 39, 10, 15, 42, 0, 0, 0, 32, 28, 89, 88, 85, 68, 26, 18, 72, 72, 112, 9, 27, 12, 4, 1, 8, 10, 14, 18, 54, 48, 74, 90, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_41 = { // "Viola     "
    { { 'V',  'i',  'o',  'l',  'a',  ' ',  ' ',  ' ',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 37, 42, 16, 1, 0, 45, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 100, 43, 11, 91, 12, 1, 0, 0, 48, 15, 0, 60, 100, 0, 0, 0 },
      { 36, 43, 16, 1, 0, 0, 80, 7, 7, 1, 3, 0, 22, 42, 0, 48, 99, 49, 50, 50, 66, 28, 35, 75, 0, 9, 27, 10, 30, 20, 0, 0, 16, 24, 24, 80, 88, 100, 96, 90, 18, 88, 90, 91, 12, 27, 12, 3, 1, 8, 10, 18, 24, 60, 62, 41, 96, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_42 = { // "Cello     "
    { { 'C',  'e',  'l',  'l',  'o',  ' ',  ' ',  ' ',  ' ',  ' ' }, 1, 0, 0b0011, 0 },
    { { 36, 54, 16, 1, 0, 0, 95, 7, 6, 3, 0, 0, 20, 33, 37, 36, 95, 42, 50, 49, 64, 30, 62, 83, 0, 10, 39, 10, 10, 89, 0, 0, 17, 24, 24, 81, 88, 28, 48, 58, 19, 85, 85, 91, 12, 27, 12, 0, 1, 17, 10, 19, 25, 65, 56, 80, 95, 100 },
      { 55, 54, 16, 1, 0, 0, 84, 7, 4, 1, 1, 0, 25, 25, 37, 51, 81, 39, 50, 49, 64, 30, 60, 86, 0, 10, 39, 10, 10, 41, 0, 0, 17, 24, 24, 81, 88, 28, 48, 58, 19, 61, 61, 91, 12, 27, 12, 0, 1, 9, 6, 9, 25, 68, 91, 28, 95, 64 } }
};

const static mt32_timbre_parameter mt32_timbre_43 = { // "Contrabass"
    { { 'C',  'o',  'n',  't',  'r',  'a',  'b',  'a',  's',  's' }, 0, 0, 0b0001, 0 },
    { { 36, 50, 16, 1, 0, 0, 79, 7, 7, 3, 0, 15, 14, 33, 100, 26, 37, 44, 50, 49, 62, 11, 42, 87, 0, 10, 38, 10, 10, 54, 0, 0, 17, 24, 24, 81, 88, 28, 48, 58, 19, 88, 85, 91, 12, 27, 12, 0, 1, 17, 10, 19, 25, 68, 56, 64, 79, 84 } }
};

const static mt32_timbre_parameter mt32_timbre_44 = { // "TremoloStr"
    { { 'T',  'r',  'e',  'm',  'o',  'l',  'o',  'S',  't',  'r' }, 0, 2, 0b0011, 0 },
    { { 36, 58, 16, 1, 1, 0, 24, 7, 6, 2, 0, 21, 8, 4, 18, 0, 11, 24, 50, 50, 51, 32, 0, 100, 0, 8, 122, 3, 37, 47, 0, 0, 9, 20, 21, 66, 90, 21, 35, 23, 29, 50, 80, 91, 12, 27, 12, 0, 3, 30, 27, 49, 44, 66, 71, 100, 94, 94 },
      { 36, 43, 16, 1, 1, 0, 24, 7, 0, 2, 0, 21, 8, 4, 18, 0, 11, 24, 50, 50, 57, 27, 0, 100, 0, 8, 122, 3, 37, 47, 0, 0, 9, 20, 21, 66, 90, 21, 35, 23, 29, 50, 80, 91, 12, 27, 12, 0, 3, 30, 27, 49, 44, 66, 71, 100, 94, 94 } }
};

const static mt32_timbre_parameter mt32_timbre_45 = { // "Pizzicato "
    { { 'P',  'i',  'z',  'z',  'i',  'c',  'a',  't',  'o',  ' ' }, 2, 2, 0b0111, 0 },
    { { 36, 34, 16, 1, 0, 41, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 27, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 76, 127, 12, 33, 7, 0, 0, 0, 0, 0, 65, 70, 100, 100, 100, 0 },
      { 36, 45, 16, 1, 1, 0, 22, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 64, 5, 54, 31, 0, 7, 37, 7, 75, 50, 3, 0, 10, 29, 1, 60, 100, 100, 48, 97, 28, 92, 84, 127, 10, 27, 12, 0, 0, 1, 32, 1, 62, 65, 100, 84, 100, 0 },
      { 36, 34, 16, 1, 0, 38, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 27, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 66, 81, 3, 0, 0, 0, 0, 3, 6, 10, 30, 70, 73, 87, 95, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_46 = { // "OrchHarp  "
    { { 'O',  'r',  'c',  'h',  'H',  'a',  'r',  'p',  ' ',  ' ' }, 5, 0, 0b0011, 0 },
    { { 36, 53, 15, 1, 0, 42, 60, 7, 0, 0, 1, 10, 7, 22, 0, 50, 66, 51, 50, 50, 0, 0, 0, 38, 17, 8, 22, 10, 62, 70, 1, 2, 1, 19, 34, 100, 95, 91, 76, 54, 0, 88, 70, 92, 12, 28, 0, 0, 0, 0, 100, 85, 100, 80, 100, 25, 0, 0 },
      { 36, 46, 15, 1, 0, 39, 60, 7, 0, 0, 1, 10, 7, 22, 0, 50, 66, 51, 50, 50, 0, 0, 0, 38, 17, 8, 22, 10, 62, 70, 1, 2, 1, 19, 34, 100, 95, 91, 76, 54, 0, 88, 90, 92, 9, 16, 12, 0, 0, 0, 67, 100, 100, 80, 100, 39, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_47 = { // "Timpani   "
    { { 'T',  'i',  'm',  'p',  'a',  'n',  'i',  ' ',  ' ',  ' ' }, 5, 2, 0b0011, 0 },
    { { 36, 50, 11, 1, 0, 46, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 84, 12, 3, 12, 0, 0, 0, 0, 0, 0, 73, 100, 100, 100, 100 },
      { 24, 50, 11, 1, 0, 46, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 84, 12, 17, 11, 0, 0, 1, 0, 0, 0, 74, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_48 = { // "StringEns1"
    { { 'S',  't',  'r',  'i',  'n',  'g',  'E',  'n',  's',  '1' }, 0, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 1, 0, 0, 7, 5, 2, 0, 10, 8, 4, 18, 0, 11, 24, 50, 50, 64, 4, 100, 100, 0, 8, 122, 3, 27, 100, 0, 0, 9, 20, 21, 66, 90, 21, 35, 23, 29, 56, 80, 91, 12, 27, 12, 0, 3, 27, 28, 22, 30, 72, 100, 100, 95, 100 },
      { 36, 60, 16, 1, 1, 0, 0, 7, 3, 1, 0, 12, 9, 5, 19, 5, 15, 28, 50, 50, 65, 5, 100, 100, 0, 8, 119, 1, 27, 100, 0, 0, 12, 18, 23, 68, 92, 21, 35, 23, 29, 56, 80, 91, 12, 27, 12, 0, 3, 27, 32, 20, 32, 72, 100, 100, 95, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_49 = { // "StringEns2"
    { { 'S',  't',  'r',  'i',  'n',  'g',  'E',  'n',  's',  '2' }, 0, 0, 0b0111, 0 },
    { { 36, 46, 16, 1, 1, 0, 24, 7, 5, 2, 0, 10, 8, 4, 18, 0, 11, 24, 50, 50, 30, 9, 0, 100, 0, 8, 122, 3, 27, 100, 0, 0, 9, 20, 21, 66, 90, 21, 35, 23, 29, 44, 80, 91, 12, 27, 12, 0, 3, 22, 28, 22, 30, 55, 71, 100, 95, 100 },
      { 36, 56, 16, 1, 1, 0, 24, 7, 3, 1, 0, 12, 9, 5, 19, 5, 15, 28, 50, 50, 43, 2, 100, 100, 0, 8, 119, 1, 27, 100, 0, 0, 12, 18, 23, 68, 92, 21, 35, 23, 29, 60, 80, 91, 12, 27, 12, 0, 3, 19, 32, 20, 32, 55, 71, 100, 95, 100 },
      { 36, 50, 16, 1, 1, 0, 0, 7, 5, 2, 0, 10, 2, 0, 18, 0, 11, 32, 50, 50, 46, 11, 100, 100, 0, 8, 122, 3, 27, 100, 0, 0, 9, 20, 21, 66, 90, 21, 35, 23, 29, 44, 80, 91, 12, 27, 12, 0, 3, 22, 28, 22, 30, 50, 71, 100, 95, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_50 = { // "SynString1"
    { { 'S',  'y',  'n',  'S',  't',  'r',  'i',  'n',  'g',  '1' }, 7, 0, 0b0111, 0 },
    { { 36, 42, 16, 0, 1, 0, 0, 7, 5, 0, 0, 6, 15, 23, 0, 2, 22, 39, 50, 50, 65, 13, 80, 84, 0, 8, 29, 4, 18, 64, 4, 0, 41, 38, 48, 81, 100, 97, 60, 32, 14, 72, 80, 103, 12, 20, 12, 0, 1, 33, 30, 34, 38, 70, 46, 61, 78, 80 },
      { 36, 58, 16, 1, 1, 0, 0, 7, 5, 0, 0, 17, 17, 23, 0, 39, 43, 47, 50, 50, 65, 9, 80, 97, 0, 9, 27, 9, 41, 64, 0, 0, 29, 44, 56, 68, 100, 39, 28, 17, 13, 72, 80, 91, 12, 15, 12, 0, 2, 23, 37, 42, 55, 62, 36, 57, 78, 80 },
      { 36, 50, 16, 1, 0, 0, 64, 7, 5, 0, 0, 16, 22, 24, 0, 27, 37, 45, 50, 50, 54, 14, 67, 86, 0, 9, 41, 10, 37, 43, 0, 0, 21, 28, 38, 74, 100, 28, 37, 25, 13, 76, 80, 91, 12, 15, 7, 0, 0, 28, 37, 46, 71, 60, 33, 49, 71, 80 } }
};

const static mt32_timbre_parameter mt32_timbre_51 = { // "SynString2"
    { { 'S',  'y',  'n',  'S',  't',  'r',  'i',  'n',  'g',  '2' }, 7, 7, 0b1111, 0 },
    { { 36, 54, 11, 1, 0, 0, 0, 7, 4, 2, 0, 37, 16, 15, 42, 49, 45, 58, 50, 50, 62, 12, 58, 43, 0, 8, 53, 9, 68, 47, 4, 0, 62, 74, 70, 74, 100, 32, 90, 88, 0, 68, 80, 91, 12, 32, 5, 0, 2, 23, 38, 53, 48, 73, 50, 82, 88, 66 },
      { 36, 58, 11, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 63, 19, 58, 64, 0, 8, 0, 7, 74, 43, 4, 0, 56, 66, 96, 74, 100, 30, 88, 92, 0, 75, 80, 91, 12, 27, 12, 0, 3, 38, 43, 27, 56, 73, 54, 84, 86, 76 },
      { 36, 46, 11, 1, 1, 0, 0, 7, 1, 2, 0, 36, 23, 15, 39, 56, 59, 46, 50, 50, 60, 14, 33, 87, 0, 7, 46, 9, 100, 55, 4, 0, 0, 15, 78, 0, 100, 0, 32, 0, 0, 69, 80, 91, 12, 27, 6, 0, 0, 31, 49, 49, 50, 73, 52, 82, 82, 64 },
      { 36, 42, 11, 1, 1, 0, 0, 7, 5, 3, 1, 13, 18, 34, 0, 63, 55, 51, 50, 50, 61, 16, 37, 74, 0, 7, 0, 9, 100, 47, 4, 0, 32, 13, 78, 74, 100, 72, 34, 0, 0, 73, 80, 91, 12, 27, 12, 0, 0, 35, 50, 41, 61, 73, 20, 47, 69, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_52 = { // "ChoirAahs "
    { { 'C',  'h',  'o',  'i',  'r',  'A',  'a',  'h',  's',  ' ' }, 0, 0, 0b0011, 0 },
    { { 36, 57, 16, 1, 0, 0, 95, 7, 0, 0, 0, 10, 0, 2, 0, 50, 34, 50, 50, 50, 59, 17, 43, 75, 23, 7, 106, 7, 54, 0, 0, 0, 8, 0, 2, 0, 29, 0, 0, 0, 0, 76, 71, 91, 12, 27, 12, 0, 4, 31, 17, 27, 55, 62, 85, 100, 100, 100 },
      { 36, 42, 16, 1, 0, 0, 100, 7, 10, 0, 0, 29, 0, 2, 0, 47, 50, 50, 50, 50, 66, 29, 43, 78, 20, 7, 106, 7, 54, 0, 0, 0, 8, 0, 2, 0, 29, 0, 0, 0, 0, 76, 71, 91, 12, 27, 12, 0, 4, 36, 26, 27, 55, 62, 85, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_53 = { // "VoiceOohs "
    { { 'V',  'o',  'i',  'c',  'e',  'O',  'o',  'h',  's',  ' ' }, 2, 0, 0b0011, 0 },
    { { 55, 57, 16, 1, 0, 53, 95, 7, 0, 0, 0, 10, 0, 2, 0, 50, 34, 50, 50, 50, 59, 17, 43, 80, 27, 7, 106, 7, 54, 0, 0, 0, 8, 0, 2, 0, 29, 0, 0, 0, 0, 81, 71, 91, 12, 27, 12, 0, 0, 3, 33, 86, 0, 62, 100, 36, 0, 0 },
      { 36, 42, 16, 1, 0, 0, 1, 7, 10, 0, 0, 25, 0, 2, 0, 34, 50, 50, 50, 50, 61, 23, 43, 54, 30, 11, 106, 7, 54, 0, 0, 0, 8, 0, 2, 0, 29, 0, 0, 0, 0, 84, 71, 91, 12, 27, 12, 0, 0, 20, 21, 92, 0, 62, 85, 100, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_54 = { // "SynthVoice"
    { { 'S',  'y',  'n',  't',  'h',  'V',  'o',  'i',  'c',  'e' }, 7, 2, 0b0111, 0 },
    { { 48, 56, 16, 1, 1, 0, 92, 7, 4, 0, 0, 35, 22, 25, 1, 0, 33, 45, 50, 50, 63, 40, 65, 59, 21, 8, 114, 9, 36, 62, 0, 0, 4, 16, 14, 52, 42, 15, 34, 28, 34, 60, 80, 109, 7, 27, 12, 1, 0, 4, 10, 30, 84, 73, 37, 69, 100, 80 },
      { 36, 44, 16, 1, 0, 0, 83, 7, 2, 0, 0, 18, 28, 46, 1, 2, 29, 44, 50, 50, 65, 40, 70, 60, 23, 9, 23, 9, 34, 60, 0, 0, 20, 47, 55, 59, 42, 15, 28, 22, 9, 70, 80, 110, 9, 27, 12, 1, 0, 4, 18, 34, 77, 73, 34, 65, 98, 89 },
      { 55, 50, 4, 1, 0, 53, 0, 7, 4, 0, 0, 3, 11, 22, 46, 11, 100, 41, 50, 48, 60, 74, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 80, 91, 12, 42, 7, 0, 0, 8, 13, 36, 66, 75, 88, 74, 100, 80 } }
};

const static mt32_timbre_parameter mt32_timbre_55 = { // "OrcheHit  "
    { { 'O',  'r',  'c',  'h',  'e',  'H',  'i',  't',  ' ',  ' ' }, 5, 8, 0b0011, 0 },
    { { 24, 47, 16, 1, 0, 47, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 70, 27, 12, 103, 12, 2, 0, 0, 66, 65, 61, 63, 100, 93, 50, 0 },
      { 36, 53, 16, 1, 0, 47, 100, 7, 4, 0, 0, 11, 19, 37, 0, 50, 50, 50, 50, 50, 0, 0, 0, 58, 0, 10, 30, 9, 62, 0, 0, 0, 8, 47, 35, 45, 41, 30, 42, 34, 5, 92, 63, 27, 12, 103, 12, 1, 0, 0, 66, 94, 61, 67, 100, 97, 63, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_56 = { // "Trumpet   "
    { { 'T',  'r',  'u',  'm',  'p',  'e',  't',  ' ',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 46, 16, 1, 0, 23, 0, 7, 0, 0, 4, 0, 50, 60, 0, 100, 95, 80, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 70, 127, 0, 22, 4, 0, 0, 0, 51, 37, 44, 30, 100, 100, 67, 0 },
      { 36, 50, 16, 1, 1, 0, 0, 7, 5, 0, 0, 8, 16, 31, 0, 12, 29, 40, 50, 50, 62, 19, 50, 55, 0, 8, 34, 10, 100, 40, 0, 4, 25, 20, 37, 92, 22, 100, 75, 62, 78, 62, 65, 127, 7, 27, 12, 3, 0, 20, 18, 29, 35, 30, 100, 90, 85, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_57 = { // "Trombone  "
    { { 'T',  'r',  'o',  'm',  'b',  'o',  'n',  'e',  ' ',  ' ' }, 0, 2, 0b0111, 0 },
    { { 36, 55, 16, 1, 1, 0, 0, 7, 6, 0, 0, 17, 25, 42, 82, 23, 39, 50, 50, 49, 62, 17, 41, 40, 3, 10, 42, 11, 70, 61, 0, 1, 18, 11, 15, 93, 100, 100, 35, 88, 43, 60, 70, 127, 11, 27, 12, 1, 0, 4, 5, 7, 16, 42, 73, 88, 96, 100 },
      { 36, 45, 16, 1, 1, 0, 0, 7, 6, 0, 0, 17, 25, 41, 82, 23, 39, 50, 50, 49, 60, 17, 40, 40, 3, 10, 42, 11, 70, 61, 0, 1, 18, 11, 15, 93, 100, 100, 35, 88, 43, 60, 70, 127, 11, 27, 12, 1, 0, 4, 5, 7, 16, 42, 73, 88, 96, 100 },
      { 36, 46, 16, 1, 0, 22, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 72, 127, 0, 27, 12, 1, 4, 0, 33, 47, 46, 42, 100, 100, 36, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_58 = { // "Tuba      "
    { { 'T',  'u',  'b',  'a',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' }, 0, 0, 0b0011, 0 },
    { { 36, 55, 15, 1, 1, 0, 0, 7, 4, 1, 4, 14, 18, 22, 0, 7, 23, 39, 50, 50, 62, 6, 31, 64, 0, 10, 41, 11, 34, 81, 0, 0, 28, 29, 50, 63, 90, 100, 73, 100, 80, 92, 100, 91, 12, 27, 12, 2, 4, 5, 9, 10, 13, 50, 77, 83, 95, 100 },
      { 48, 47, 15, 1, 1, 0, 100, 7, 4, 1, 4, 14, 18, 22, 0, 7, 23, 39, 50, 50, 62, 6, 42, 31, 0, 10, 41, 10, 33, 81, 0, 0, 31, 29, 50, 63, 90, 100, 73, 100, 80, 92, 100, 91, 12, 27, 12, 2, 4, 5, 9, 10, 13, 50, 77, 51, 95, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_59 = { // "MutedTrmpt"
    { { 'M',  'u',  't',  'e',  'd',  'T',  'r',  'm',  'p',  't' }, 2, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 0, 23, 0, 7, 1, 0, 0, 8, 16, 31, 0, 22, 29, 40, 50, 50, 62, 0, 49, 55, 0, 8, 34, 10, 100, 40, 0, 4, 25, 20, 37, 92, 22, 100, 75, 62, 78, 60, 74, 127, 12, 27, 12, 1, 0, 10, 18, 9, 45, 30, 100, 100, 100, 90 },
      { 48, 50, 16, 1, 1, 0, 81, 7, 1, 0, 0, 8, 16, 31, 0, 12, 29, 40, 50, 50, 62, 0, 24, 71, 24, 3, 34, 11, 42, 6, 0, 0, 26, 10, 17, 92, 22, 100, 8, 100, 95, 80, 75, 118, 12, 27, 12, 3, 0, 0, 15, 23, 15, 30, 100, 90, 85, 89 } }
};

const static mt32_timbre_parameter mt32_timbre_60 = { // "FrenchHorn"
    { { 'F',  'r',  'e',  'n',  'c',  'h',  'H',  'o',  'r',  'n' }, 7, 0, 0b0011, 0 },
    { { 36, 55, 16, 1, 1, 0, 0, 7, 6, 1, 4, 14, 18, 22, 0, 7, 23, 39, 50, 50, 62, 6, 31, 41, 0, 10, 41, 11, 34, 81, 0, 0, 11, 29, 35, 63, 90, 100, 73, 100, 80, 64, 64, 91, 12, 27, 12, 2, 4, 2, 9, 7, 13, 50, 77, 51, 95, 100 },
      { 36, 47, 16, 1, 0, 0, 80, 7, 6, 1, 4, 14, 18, 22, 0, 7, 23, 39, 50, 50, 62, 6, 42, 31, 0, 10, 41, 10, 33, 81, 0, 0, 11, 29, 34, 63, 90, 100, 73, 100, 80, 60, 64, 91, 12, 27, 12, 2, 4, 5, 9, 10, 13, 50, 77, 51, 95, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_61 = { // "BrassSectn"
    { { 'B',  'r',  'a',  's',  's',  'S',  'e',  'c',  't',  'n' }, 2, 0, 0b0011, 0 },
    { { 36, 76, 11, 1, 0, 23, 50, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 62, 11, 46, 72, 0, 7, 27, 7, 0, 0, 0, 0, 1, 50, 50, 50, 50, 100, 100, 100, 100, 66, 58, 27, 12, 27, 12, 0, 0, 1, 58, 58, 56, 49, 100, 95, 83, 77 },
      { 48, 60, 11, 1, 1, 0, 61, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 62, 11, 46, 49, 2, 11, 27, 7, 61, 25, 2, 0, 33, 51, 75, 64, 100, 100, 68, 60, 60, 61, 62, 27, 12, 27, 12, 2, 3, 29, 79, 48, 77, 49, 99, 74, 75, 75 } }
};

const static mt32_timbre_parameter mt32_timbre_62 = { // "SynBrass1 "
    { { 'S',  'y',  'n',  'B',  'r',  'a',  's',  's',  '1',  ' ' }, 0, 0, 0b0011, 0 },
    { { 36, 52, 11, 1, 1, 0, 0, 7, 6, 0, 0, 35, 0, 0, 15, 56, 50, 50, 50, 50, 61, 10, 100, 50, 0, 3, 0, 7, 100, 100, 4, 0, 32, 66, 63, 44, 91, 99, 50, 50, 50, 52, 68, 86, 12, 0, 12, 0, 0, 17, 0, 0, 0, 50, 100, 100, 100, 100 },
      { 36, 47, 11, 1, 1, 0, 0, 7, 5, 3, 0, 34, 58, 69, 100, 50, 50, 50, 50, 50, 56, 0, 100, 45, 0, 3, 0, 0, 100, 100, 4, 0, 32, 66, 63, 44, 91, 100, 50, 50, 50, 52, 70, 90, 12, 0, 12, 0, 0, 17, 0, 0, 0, 50, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_63 = { // "SynBrass2 "
    { { 'S',  'y',  'n',  'B',  'r',  'a',  's',  's',  '2',  ' ' }, 0, 0, 0b0011, 0 },
    { { 36, 52, 11, 1, 1, 0, 0, 7, 6, 0, 0, 35, 0, 0, 15, 56, 50, 50, 50, 50, 61, 10, 100, 42, 0, 3, 0, 7, 55, 100, 4, 0, 16, 66, 63, 44, 91, 99, 50, 50, 50, 74, 68, 86, 12, 0, 12, 0, 0, 31, 0, 0, 0, 50, 100, 100, 100, 100 },
      { 36, 47, 11, 1, 1, 0, 0, 7, 10, 3, 0, 35, 0, 0, 35, 51, 50, 50, 50, 50, 64, 16, 100, 68, 0, 3, 0, 0, 55, 100, 4, 0, 32, 66, 63, 44, 91, 100, 50, 50, 50, 48, 70, 90, 12, 0, 12, 0, 0, 17, 0, 0, 0, 50, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_64 = { // "SopranoSax"
    { { 'S',  'o',  'p',  'r',  'a',  'n',  'o',  'S',  'a',  'x' }, 1, 0, 0b0011, 0 },
    { { 36, 57, 16, 1, 0, 0, 78, 7, 0, 0, 0, 51, 0, 0, 0, 50, 50, 50, 50, 50, 64, 0, 40, 57, 18, 11, 104, 6, 67, 0, 0, 0, 25, 23, 23, 29, 42, 50, 40, 40, 40, 92, 75, 91, 12, 27, 12, 4, 1, 19, 49, 38, 36, 27, 100, 88, 88, 88 },
      { 48, 57, 16, 1, 0, 0, 78, 7, 0, 0, 0, 51, 0, 0, 0, 50, 50, 50, 50, 50, 64, 10, 40, 75, 14, 11, 104, 6, 67, 0, 0, 0, 25, 23, 23, 29, 42, 50, 40, 40, 40, 76, 75, 91, 12, 27, 12, 4, 1, 32, 49, 38, 36, 27, 100, 88, 88, 88 } }
};

const static mt32_timbre_parameter mt32_timbre_65 = { // "AltoSax   "
    { { 'A',  'l',  't',  'o',  'S',  'a',  'x',  ' ',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 44, 16, 1, 0, 29, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 107, 12, 23, 0, 0, 0, 0, 0, 0, 0, 44, 100, 100, 100, 100 },
      { 36, 50, 16, 1, 1, 0, 0, 7, 2, 0, 0, 17, 21, 40, 0, 50, 46, 50, 50, 50, 63, 22, 0, 86, 24, 8, 33, 12, 100, 5, 0, 0, 0, 12, 17, 27, 42, 56, 43, 38, 34, 84, 80, 91, 12, 27, 12, 0, 0, 14, 14, 17, 22, 43, 67, 89, 96, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_66 = { // "TenorSax  "
    { { 'T',  'e',  'n',  'o',  'r',  'S',  'a',  'x',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 45, 11, 1, 0, 30, 52, 7, 10, 0, 0, 0, 6, 0, 0, 49, 50, 50, 50, 50, 64, 9, 40, 64, 30, 9, 104, 6, 0, 0, 0, 0, 0, 16, 0, 0, 0, 69, 0, 0, 0, 84, 75, 91, 12, 27, 12, 4, 1, 20, 65, 0, 0, 27, 100, 0, 0, 0 },
      { 36, 57, 16, 1, 0, 0, 67, 7, 0, 0, 0, 51, 0, 0, 0, 50, 50, 50, 50, 50, 64, 3, 40, 92, 0, 4, 104, 6, 67, 0, 0, 0, 22, 27, 23, 29, 57, 48, 40, 40, 40, 64, 75, 91, 12, 27, 12, 4, 1, 23, 49, 38, 36, 45, 100, 88, 88, 88 } }
};

const static mt32_timbre_parameter mt32_timbre_67 = { // "BaritonSax"
    { { 'B',  'a',  'r',  'i',  't',  'o',  'n',  'S',  'a',  'x' }, 1, 5, 0b1111, 0 },
    { { 36, 50, 16, 1, 1, 0, 0, 7, 7, 3, 4, 21, 21, 39, 0, 50, 39, 50, 50, 50, 64, 26, 48, 88, 17, 7, 33, 9, 48, 71, 0, 0, 3, 17, 25, 62, 45, 76, 55, 41, 29, 84, 80, 91, 12, 27, 12, 3, 0, 11, 14, 12, 22, 30, 47, 66, 96, 100 },
      { 55, 49, 16, 1, 1, 0, 0, 7, 0, 0, 0, 10, 20, 50, 0, 50, 50, 50, 50, 50, 64, 33, 46, 100, 0, 6, 38, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 115, 0, 36, 8, 2, 0, 10, 26, 20, 60, 17, 62, 100, 89, 69 },
      { 36, 0, 16, 1, 0, 30, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 80, 0, 27, 12, 0, 0, 0, 0, 0, 0, 30, 100, 100, 100, 100 },
      { 36, 56, 16, 1, 0, 29, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 111, 5, 27, 6, 0, 0, 0, 0, 0, 0, 30, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_68 = { // "Oboe      "
    { { 'O',  'b',  'o',  'e',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' }, 0, 0, 0b0001, 0 },
    { { 36, 57, 16, 1, 0, 0, 100, 7, 10, 0, 0, 17, 0, 0, 0, 47, 50, 50, 50, 50, 63, 5, 40, 82, 22, 7, 104, 6, 0, 0, 0, 0, 0, 10, 0, 0, 0, 62, 0, 0, 0, 84, 75, 91, 12, 27, 12, 4, 1, 22, 17, 28, 0, 27, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_69 = { // "EnglishHrn"
    { { 'E',  'n',  'g',  'l',  'i',  's',  'h',  'H',  'r',  'n' }, 1, 0, 0b0011, 0 },
    { { 48, 50, 16, 1, 1, 0, 60, 7, 5, 3, 2, 9, 16, 46, 0, 15, 33, 43, 50, 50, 63, 3, 20, 72, 26, 10, 103, 4, 20, 100, 0, 2, 9, 6, 33, 82, 100, 100, 35, 24, 45, 84, 78, 127, 10, 27, 12, 0, 3, 1, 1, 5, 8, 33, 57, 85, 97, 100 },
      { 74, 53, 16, 1, 1, 0, 60, 7, 5, 1, 2, 3, 2, 46, 0, 49, 100, 45, 50, 50, 63, 16, 0, 50, 30, 7, 31, 7, 14, 100, 0, 2, 16, 4, 24, 61, 100, 100, 82, 17, 27, 84, 70, 91, 12, 27, 12, 0, 3, 8, 8, 14, 19, 33, 91, 98, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_70 = { // "Bassoon   "
    { { 'B',  'a',  's',  's',  'o',  'o',  'n',  ' ',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 57, 16, 1, 0, 13, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 63, 5, 40, 76, 5, 11, 104, 6, 0, 0, 0, 0, 0, 10, 0, 0, 0, 62, 0, 0, 0, 100, 75, 91, 12, 27, 12, 0, 0, 13, 0, 0, 36, 27, 100, 100, 100, 0 },
      { 36, 57, 16, 1, 0, 0, 100, 7, 10, 0, 0, 17, 0, 0, 0, 47, 50, 50, 50, 50, 63, 5, 40, 82, 26, 7, 104, 6, 0, 0, 0, 0, 0, 10, 0, 0, 0, 62, 0, 0, 0, 95, 75, 91, 12, 27, 12, 4, 1, 22, 17, 28, 0, 27, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_71 = { // "Clarinet  "
    { { 'C',  'l',  'a',  'r',  'i',  'n',  'e',  't',  ' ',  ' ' }, 1, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 0, 0, 0, 7, 2, 1, 0, 10, 14, 54, 54, 36, 44, 50, 50, 45, 64, 12, 34, 80, 10, 8, 34, 10, 10, 72, 0, 2, 11, 22, 27, 50, 100, 27, 48, 61, 69, 78, 75, 127, 11, 27, 11, 3, 3, 8, 6, 12, 16, 54, 57, 77, 91, 100 },
      { 76, 13, 16, 1, 0, 0, 0, 7, 2, 1, 0, 10, 14, 54, 54, 36, 44, 50, 50, 45, 64, 12, 35, 100, 10, 8, 34, 10, 10, 72, 0, 2, 11, 22, 27, 50, 50, 27, 48, 61, 69, 32, 73, 127, 11, 27, 12, 0, 3, 7, 22, 35, 55, 54, 57, 100, 62, 43 } }
};

const static mt32_timbre_parameter mt32_timbre_72 = { // "Piccolo   "
    { { 'P',  'i',  'c',  'c',  'o',  'l',  'o',  ' ',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 43, 16, 1, 0, 26, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 77, 127, 6, 27, 0, 0, 4, 0, 13, 35, 60, 28, 100, 99, 76, 0 },
      { 36, 50, 16, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 36, 0, 50, 50, 50, 50, 50, 66, 16, 40, 57, 20, 12, 47, 11, 40, 98, 0, 2, 0, 24, 22, 31, 100, 70, 48, 35, 26, 88, 80, 127, 10, 27, 12, 2, 4, 22, 6, 7, 16, 28, 76, 90, 96, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_73 = { // "Flute     "
    { { 'F',  'l',  'u',  't',  'e',  ' ',  ' ',  ' ',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 1, 26, 0, 7, 2, 2, 2, 9, 11, 43, 0, 27, 38, 44, 50, 50, 64, 22, 0, 56, 0, 10, 39, 11, 56, 86, 0, 0, 0, 23, 41, 51, 90, 88, 51, 44, 26, 84, 72, 91, 12, 27, 12, 0, 4, 0, 0, 0, 84, 46, 65, 81, 100, 0 },
      { 36, 50, 16, 1, 1, 0, 0, 7, 2, 2, 2, 9, 11, 43, 0, 27, 38, 44, 50, 50, 64, 11, 44, 64, 0, 10, 39, 7, 56, 86, 0, 0, 0, 23, 41, 52, 90, 88, 51, 44, 36, 76, 80, 91, 12, 27, 12, 1, 4, 13, 0, 8, 15, 46, 53, 75, 94, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_74 = { // "Recorder  "
    { { 'R',  'e',  'c',  'o',  'r',  'd',  'e',  'r',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 44, 50, 5, 1, 0, 53, 0, 7, 7, 3, 4, 9, 13, 19, 0, 17, 31, 43, 50, 50, 63, 1, 19, 26, 27, 11, 39, 10, 61, 76, 0, 2, 7, 13, 22, 22, 40, 39, 56, 40, 6, 72, 71, 127, 9, 47, 10, 2, 4, 13, 29, 16, 20, 51, 57, 60, 42, 40 },
      { 36, 50, 16, 1, 0, 0, 51, 7, 0, 1, 1, 0, 8, 20, 0, 47, 37, 44, 50, 50, 63, 1, 19, 53, 27, 11, 51, 9, 19, 76, 0, 2, 15, 13, 2, 34, 40, 40, 59, 42, 6, 76, 74, 103, 12, 27, 12, 2, 4, 13, 8, 10, 20, 36, 73, 89, 97, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_75 = { // "PanFlute  "
    { { 'P',  'a',  'n',  'F',  'l',  'u',  't',  'e',  ' ',  ' ' }, 2, 2, 0b0111, 0 },
    { { 36, 58, 16, 0, 0, 27, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 90, 127, 10, 39, 5, 0, 0, 11, 11, 13, 26, 53, 44, 74, 90, 100 },
      { 36, 50, 16, 1, 0, 0, 0, 7, 6, 3, 4, 19, 25, 54, 67, 93, 65, 50, 50, 33, 63, 15, 40, 50, 0, 11, 39, 12, 18, 79, 3, 0, 8, 19, 22, 34, 100, 25, 42, 22, 12, 64, 70, 120, 7, 27, 7, 3, 4, 17, 12, 14, 20, 53, 66, 86, 95, 100 },
      { 48, 50, 5, 0, 0, 53, 0, 7, 5, 3, 4, 35, 37, 28, 5, 100, 97, 88, 71, 50, 63, 100, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 69, 127, 2, 27, 12, 0, 0, 10, 15, 34, 29, 40, 90, 100, 95, 87 } }
};

const static mt32_timbre_parameter mt32_timbre_76 = { // "BottleBlow"
    { { 'B',  'o',  't',  't',  'l',  'e',  'B',  'l',  'o',  'w' }, 2, 0, 0b0011, 0 },
    { { 33, 50, 16, 1, 0, 28, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 85, 123, 8, 32, 5, 0, 0, 0, 0, 0, 0, 60, 100, 100, 100, 100 },
      { 36, 50, 16, 1, 0, 0, 0, 7, 6, 3, 1, 14, 17, 48, 0, 66, 56, 50, 50, 50, 63, 25, 68, 50, 24, 12, 29, 11, 42, 67, 0, 0, 5, 21, 44, 45, 68, 17, 29, 23, 14, 56, 68, 127, 0, 27, 12, 0, 0, 4, 8, 23, 34, 54, 87, 100, 93, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_77 = { // "Shakuhachi"
    { { 'S',  'h',  'a',  'k',  'u',  'h',  'a',  'c',  'h',  'i' }, 5, 0, 0b1111, 0 },
    { { 36, 50, 16, 1, 0, 48, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 85, 110, 3, 3, 0, 0, 0, 0, 31, 71, 65, 64, 80, 100, 80, 0 },
      { 42, 82, 13, 0, 0, 53, 0, 7, 5, 0, 0, 21, 27, 49, 0, 89, 69, 58, 50, 50, 64, 28, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 80, 115, 4, 3, 0, 0, 0, 6, 26, 17, 75, 38, 83, 100, 63, 79 },
      { 36, 55, 16, 1, 1, 0, 46, 7, 4, 3, 0, 21, 27, 23, 35, 24, 40, 50, 50, 50, 64, 36, 40, 64, 0, 9, 27, 10, 36, 87, 0, 0, 6, 36, 45, 72, 65, 29, 49, 37, 40, 72, 64, 91, 12, 27, 12, 0, 0, 14, 33, 44, 54, 58, 71, 99, 86, 93 },
      { 36, 45, 16, 1, 0, 0, 83, 7, 4, 3, 0, 21, 27, 27, 35, 24, 40, 50, 50, 50, 62, 31, 40, 51, 0, 9, 27, 10, 36, 87, 0, 0, 6, 36, 45, 72, 65, 29, 49, 37, 40, 72, 64, 91, 12, 27, 12, 0, 0, 14, 33, 44, 54, 58, 71, 99, 86, 93 } }
};

const static mt32_timbre_parameter mt32_timbre_78 = { // "Whistle   "
    { { 'W',  'h',  'i',  's',  't',  'l',  'e',  ' ',  ' ',  ' ' }, 0, 0, 0b0001, 0 },
    { { 36, 50, 16, 1, 0, 0, 66, 7, 8, 3, 0, 18, 29, 43, 61, 12, 39, 50, 50, 48, 64, 54, 66, 43, 0, 10, 60, 5, 18, 69, 0, 0, 8, 19, 34, 37, 68, 20, 44, 64, 71, 92, 65, 91, 12, 27, 12, 1, 2, 26, 25, 27, 40, 56, 45, 74, 90, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_79 = { // "Ocarina   "
    { { 'O',  'c',  'a',  'r',  'i',  'n',  'a',  ' ',  ' ',  ' ' }, 0, 0, 0b0001, 0 },
    { { 36, 50, 16, 1, 0, 0, 63, 7, 4, 3, 1, 18, 23, 43, 0, 22, 38, 50, 50, 50, 58, 31, 83, 45, 0, 10, 59, 6, 35, 50, 0, 0, 0, 21, 41, 50, 100, 28, 25, 21, 0, 100, 72, 91, 12, 27, 12, 0, 2, 3, 11, 17, 23, 48, 90, 100, 96, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_80 = { // "Square    "
    { { 'S',  'q',  'u',  'a',  'r',  'e',  ' ',  ' ',  ' ',  ' ' }, 0, 0, 0b0011, 0 },
    { { 36, 53, 11, 1, 0, 0, 36, 7, 0, 0, 0, 0, 0, 52, 0, 50, 50, 50, 50, 50, 62, 23, 85, 100, 0, 4, 39, 8, 24, 100, 0, 0, 6, 20, 33, 77, 83, 45, 69, 76, 0, 48, 74, 91, 12, 27, 12, 0, 0, 0, 0, 0, 0, 43, 100, 100, 100, 100 },
      { 36, 47, 11, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 52, 0, 50, 50, 50, 50, 50, 64, 23, 56, 100, 16, 5, 103, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 70, 91, 12, 27, 12, 0, 0, 9, 5, 11, 14, 15, 77, 92, 98, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_81 = { // "Sawtooth  "
    { { 'S',  'a',  'w',  't',  'o',  'o',  't',  'h',  ' ',  ' ' }, 0, 0, 0b0011, 0 },
    { { 36, 56, 11, 1, 1, 0, 0, 7, 6, 0, 0, 21, 0, 0, 15, 81, 50, 50, 50, 50, 61, 0, 100, 62, 0, 3, 0, 7, 100, 100, 4, 0, 0, 49, 84, 44, 91, 99, 67, 47, 48, 56, 68, 86, 12, 0, 12, 0, 0, 3, 0, 0, 0, 41, 100, 100, 100, 100 },
      { 36, 46, 11, 1, 1, 0, 0, 7, 5, 100, 0, 21, 58, 69, 100, 50, 50, 50, 50, 50, 56, 0, 100, 62, 0, 3, 0, 0, 100, 100, 4, 0, 0, 49, 84, 44, 91, 100, 67, 47, 48, 56, 70, 90, 12, 0, 12, 0, 0, 3, 0, 0, 0, 41, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_82 = { // "Calliope  "
    { { 'C',  'a',  'l',  'l',  'i',  'o',  'p',  'e',  ' ',  ' ' }, 0, 5, 0b0111, 0 },
    { { 36, 56, 16, 1, 0, 0, 54, 7, 0, 3, 4, 28, 20, 27, 35, 59, 59, 50, 50, 50, 55, 31, 40, 47, 22, 9, 27, 10, 47, 87, 0, 0, 5, 11, 44, 55, 65, 29, 49, 50, 49, 72, 64, 91, 12, 27, 12, 0, 0, 0, 7, 46, 54, 58, 71, 99, 97, 93 },
      { 36, 45, 16, 1, 0, 0, 54, 7, 0, 3, 4, 28, 20, 27, 35, 59, 59, 50, 50, 50, 63, 37, 40, 47, 22, 9, 27, 10, 47, 87, 0, 0, 5, 11, 44, 55, 65, 29, 49, 50, 49, 72, 64, 91, 12, 27, 12, 0, 0, 0, 7, 46, 54, 58, 71, 99, 97, 93 },
      { 48, 45, 16, 1, 0, 53, 100, 7, 8, 3, 4, 28, 20, 27, 35, 50, 50, 50, 50, 50, 62, 31, 40, 43, 22, 9, 27, 10, 47, 87, 0, 0, 23, 34, 44, 55, 65, 29, 49, 50, 49, 58, 64, 91, 12, 27, 12, 0, 0, 1, 9, 37, 53, 48, 69, 99, 66, 66 } }
};

const static mt32_timbre_parameter mt32_timbre_83 = { // "ChiffLead "
    { { 'C',  'h',  'i',  'f',  'f',  'L',  'e',  'a',  'd',  ' ' }, 0, 2, 0b0111, 0 },
    { { 36, 50, 11, 1, 1, 0, 0, 7, 10, 0, 0, 12, 20, 0, 15, 44, 44, 50, 50, 50, 62, 30, 100, 45, 25, 3, 0, 7, 100, 100, 4, 0, 18, 8, 62, 19, 91, 85, 70, 37, 37, 56, 68, 86, 12, 0, 12, 0, 0, 12, 40, 14, 42, 41, 100, 100, 100, 100 },
      { 36, 57, 11, 1, 1, 0, 0, 7, 10, 0, 0, 12, 7, 0, 15, 41, 44, 50, 50, 50, 65, 41, 100, 45, 25, 3, 0, 7, 100, 100, 4, 0, 18, 8, 62, 19, 91, 99, 70, 37, 37, 76, 68, 86, 12, 0, 12, 0, 0, 12, 40, 14, 42, 41, 100, 100, 100, 100 },
      { 33, 50, 11, 1, 1, 28, 0, 7, 0, 0, 0, 47, 81, 69, 15, 57, 50, 50, 50, 50, 56, 0, 100, 68, 0, 3, 0, 7, 100, 100, 4, 0, 21, 31, 63, 44, 91, 99, 60, 60, 60, 46, 68, 86, 12, 0, 12, 4, 4, 1, 56, 34, 0, 41, 100, 46, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_84 = { // "Charang   "
    { { 'C',  'h',  'a',  'r',  'a',  'n',  'g',  ' ',  ' ',  ' ' }, 0, 0, 0b0011, 0 },
    { { 48, 50, 16, 1, 1, 0, 100, 7, 6, 0, 0, 4, 3, 0, 0, 50, 74, 44, 50, 50, 64, 2, 44, 63, 20, 7, 103, 8, 100, 0, 0, 0, 0, 0, 1, 0, 24, 0, 0, 100, 77, 60, 64, 27, 12, 15, 12, 2, 1, 2, 20, 68, 92, 65, 97, 100, 50, 50 },
      { 48, 42, 16, 1, 1, 0, 53, 7, 0, 0, 0, 8, 7, 0, 0, 50, 60, 45, 50, 50, 0, 0, 0, 96, 30, 11, 115, 2, 0, 50, 0, 0, 0, 20, 10, 0, 0, 20, 90, 10, 0, 74, 64, 64, 10, 15, 12, 2, 1, 3, 0, 31, 96, 62, 100, 90, 69, 42 } }
};

const static mt32_timbre_parameter mt32_timbre_85 = { // "Voice     "
    { { 'V',  'o',  'i',  'c',  'e',  ' ',  ' ',  ' ',  ' ',  ' ' }, 0, 2, 0b0111, 0 },
    { { 36, 62, 16, 1, 0, 0, 100, 7, 0, 0, 0, 10, 0, 2, 0, 50, 34, 50, 50, 50, 70, 41, 43, 68, 21, 7, 106, 7, 54, 0, 0, 0, 8, 0, 2, 0, 29, 0, 0, 0, 0, 80, 71, 91, 12, 27, 12, 0, 0, 20, 66, 0, 0, 60, 100, 83, 83, 83 },
      { 36, 42, 16, 1, 0, 0, 100, 7, 0, 0, 0, 10, 0, 2, 0, 50, 34, 50, 50, 50, 62, 24, 43, 68, 21, 7, 106, 7, 54, 0, 0, 0, 8, 0, 2, 0, 29, 0, 0, 0, 0, 80, 71, 91, 12, 27, 12, 0, 0, 20, 66, 0, 0, 60, 100, 83, 83, 83 },
      { 61, 42, 16, 1, 0, 53, 100, 7, 0, 0, 0, 10, 0, 2, 0, 50, 34, 50, 50, 50, 73, 100, 43, 72, 21, 7, 106, 7, 54, 0, 0, 0, 8, 0, 2, 0, 29, 0, 0, 0, 0, 39, 71, 91, 12, 27, 12, 0, 0, 16, 48, 73, 0, 60, 100, 66, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_86 = { // "Fifths    "
    { { 'F',  'i',  'f',  't',  'h',  's',  ' ',  ' ',  ' ',  ' ' }, 0, 0, 0b0111, 0 },
    { { 31, 56, 11, 1, 1, 0, 0, 7, 6, 0, 0, 40, 0, 0, 15, 56, 50, 50, 50, 50, 61, 18, 100, 76, 18, 3, 0, 7, 100, 0, 0, 0, 0, 71, 0, 0, 91, 99, 0, 0, 0, 60, 68, 86, 12, 0, 12, 0, 0, 12, 0, 0, 0, 54, 100, 100, 100, 100 },
      { 36, 46, 11, 1, 1, 0, 0, 7, 5, 100, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 62, 26, 100, 71, 0, 3, 0, 0, 100, 0, 0, 0, 0, 81, 0, 0, 91, 53, 0, 0, 0, 74, 70, 90, 12, 0, 12, 0, 0, 12, 0, 0, 0, 54, 100, 100, 100, 100 },
      { 31, 49, 11, 1, 0, 0, 57, 7, 6, 0, 0, 23, 0, 0, 15, 9, 50, 50, 50, 50, 56, 24, 100, 67, 0, 3, 0, 7, 24, 0, 0, 0, 0, 71, 0, 0, 91, 99, 0, 0, 0, 70, 68, 86, 12, 0, 12, 0, 0, 4, 0, 0, 0, 54, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_87 = { // "BassLead  "
    { { 'B',  'a',  's',  's',  'L',  'e',  'a',  'd',  ' ',  ' ' }, 1, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 0, 0, 85, 7, 5, 0, 1, 1, 1, 1, 0, 50, 100, 48, 50, 50, 66, 0, 59, 55, 10, 8, 77, 5, 100, 30, 0, 0, 0, 40, 70, 80, 30, 100, 70, 25, 0, 96, 70, 79, 10, 27, 12, 0, 4, 0, 50, 78, 90, 30, 100, 75, 35, 0 },
      { 69, 54, 8, 1, 0, 0, 96, 7, 6, 0, 0, 1, 0, 1, 0, 50, 100, 48, 50, 50, 0, 0, 0, 68, 9, 7, 0, 7, 63, 10, 0, 0, 0, 25, 35, 79, 63, 100, 80, 50, 0, 40, 85, 65, 8, 27, 12, 3, 4, 0, 45, 80, 90, 30, 100, 81, 62, 59 } }
};

const static mt32_timbre_parameter mt32_timbre_88 = { // "NewAge    "
    { { 'N',  'e',  'w',  'A',  'g',  'e',  ' ',  ' ',  ' ',  ' ' }, 0, 2, 0b0111, 0 },
    { { 36, 59, 16, 1, 1, 0, 10, 7, 0, 0, 0, 10, 0, 2, 0, 50, 34, 50, 50, 50, 62, 35, 43, 80, 0, 7, 106, 7, 54, 0, 0, 0, 8, 0, 2, 0, 29, 0, 0, 0, 0, 76, 71, 90, 9, 27, 12, 0, 4, 14, 66, 0, 0, 74, 100, 83, 83, 83 },
      { 36, 41, 16, 1, 1, 0, 10, 7, 0, 0, 0, 10, 0, 2, 0, 50, 34, 50, 50, 50, 55, 35, 43, 80, 0, 7, 106, 7, 54, 0, 0, 0, 8, 0, 2, 0, 29, 0, 0, 0, 0, 76, 71, 90, 9, 27, 12, 0, 4, 14, 66, 0, 0, 74, 100, 83, 83, 83 },
      { 60, 42, 16, 1, 0, 50, 100, 7, 0, 0, 0, 10, 0, 2, 0, 50, 34, 50, 50, 50, 73, 0, 43, 72, 21, 7, 106, 7, 54, 0, 0, 0, 8, 0, 2, 0, 29, 0, 0, 0, 0, 59, 71, 90, 9, 27, 12, 0, 4, 0, 44, 80, 0, 74, 100, 47, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_89 = { // "WarmPad   "
    { { 'W',  'a',  'r',  'm',  'P',  'a',  'd',  ' ',  ' ',  ' ' }, 0, 2, 0b0011, 0 },
    { { 36, 61, 16, 1, 1, 0, 0, 7, 7, 0, 0, 49, 0, 2, 0, 51, 50, 50, 50, 50, 64, 31, 43, 58, 0, 7, 106, 7, 54, 0, 0, 0, 0, 78, 2, 0, 95, 64, 0, 0, 0, 76, 71, 91, 12, 27, 12, 0, 0, 33, 59, 0, 0, 74, 56, 100, 100, 100 },
      { 36, 41, 16, 1, 1, 0, 0, 7, 0, 0, 0, 10, 0, 2, 0, 50, 34, 50, 50, 50, 54, 25, 43, 58, 0, 7, 106, 7, 54, 0, 0, 0, 0, 78, 2, 0, 95, 64, 0, 0, 0, 76, 71, 91, 12, 27, 12, 0, 0, 33, 59, 0, 0, 74, 56, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_90 = { // "Polysynth "
    { { 'P',  'o',  'l',  'y',  's',  'y',  'n',  't',  'h',  ' ' }, 0, 0, 0b0011, 0 },
    { { 36, 46, 11, 1, 1, 0, 0, 7, 10, 0, 0, 12, 20, 0, 12, 44, 44, 50, 50, 50, 62, 30, 100, 61, 19, 3, 0, 7, 100, 100, 4, 0, 17, 8, 62, 81, 73, 83, 70, 37, 100, 60, 68, 86, 12, 0, 12, 0, 0, 12, 72, 0, 0, 70, 100, 87, 87, 87 },
      { 36, 57, 11, 1, 1, 0, 0, 7, 10, 0, 0, 12, 7, 0, 12, 41, 44, 50, 50, 50, 65, 41, 100, 61, 19, 3, 0, 7, 100, 100, 4, 0, 17, 8, 62, 81, 73, 83, 70, 37, 100, 60, 68, 86, 12, 0, 12, 0, 0, 12, 72, 0, 0, 70, 100, 87, 87, 87 } }
};

const static mt32_timbre_parameter mt32_timbre_91 = { // "Choir     "
    { { 'C',  'h',  'o',  'i',  'r',  ' ',  ' ',  ' ',  ' ',  ' ' }, 7, 2, 0b0111, 0 },
    { { 48, 56, 16, 1, 1, 0, 92, 7, 4, 0, 0, 35, 22, 25, 1, 0, 33, 45, 50, 50, 61, 5, 100, 61, 21, 8, 114, 9, 36, 62, 0, 0, 4, 16, 14, 52, 42, 16, 36, 29, 36, 70, 87, 109, 7, 27, 12, 1, 0, 4, 10, 30, 95, 85, 37, 69, 100, 45 },
      { 36, 44, 16, 1, 0, 0, 83, 7, 2, 0, 0, 18, 28, 46, 1, 2, 29, 44, 50, 50, 58, 5, 100, 62, 23, 9, 23, 9, 34, 60, 0, 0, 20, 47, 55, 59, 42, 15, 28, 22, 9, 80, 87, 110, 9, 27, 12, 1, 0, 4, 18, 34, 87, 85, 34, 65, 98, 50 },
      { 55, 50, 4, 1, 0, 53, 0, 7, 4, 0, 0, 3, 11, 22, 46, 11, 100, 41, 50, 48, 60, 74, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 90, 91, 12, 42, 7, 0, 0, 8, 13, 36, 66, 75, 88, 74, 100, 80 } }
};

const static mt32_timbre_parameter mt32_timbre_92 = { // "Bowed     "
    { { 'B',  'o',  'w',  'e',  'd',  ' ',  ' ',  ' ',  ' ',  ' ' }, 0, 0, 0b0001, 0 },
    { { 36, 58, 16, 1, 0, 0, 83, 7, 0, 2, 0, 21, 8, 4, 18, 0, 11, 24, 50, 50, 64, 0, 0, 53, 0, 8, 122, 3, 0, 47, 0, 0, 4, 27, 57, 70, 90, 21, 35, 23, 23, 92, 80, 91, 12, 27, 12, 0, 3, 26, 39, 0, 82, 69, 71, 100, 100, 71 } }
};

const static mt32_timbre_parameter mt32_timbre_93 = { // "Metallic  "
    { { 'M',  'e',  't',  'a',  'l',  'l',  'i',  'c',  ' ',  ' ' }, 7, 2, 0b0111, 0 },
    { { 36, 55, 16, 1, 0, 0, 81, 7, 6, 2, 0, 21, 8, 4, 18, 0, 11, 24, 50, 50, 57, 32, 0, 51, 0, 8, 122, 3, 93, 100, 0, 0, 17, 71, 78, 74, 90, 41, 19, 13, 8, 68, 80, 91, 12, 27, 12, 0, 3, 54, 63, 49, 44, 69, 71, 100, 94, 94 },
      { 36, 45, 16, 1, 0, 0, 81, 7, 6, 2, 0, 21, 8, 4, 18, 0, 11, 24, 50, 50, 63, 45, 0, 51, 0, 8, 122, 3, 93, 100, 0, 0, 17, 71, 78, 74, 90, 41, 19, 13, 8, 68, 80, 91, 12, 27, 12, 0, 3, 54, 63, 49, 44, 69, 71, 100, 94, 94 },
      { 36, 43, 16, 1, 1, 43, 0, 7, 0, 2, 0, 21, 8, 4, 18, 0, 11, 24, 50, 50, 63, 31, 0, 90, 16, 8, 122, 3, 48, 47, 0, 0, 22, 41, 47, 66, 90, 21, 35, 23, 29, 36, 80, 91, 12, 27, 12, 0, 3, 21, 42, 73, 0, 69, 69, 99, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_94 = { // "Halo      "
    { { 'H',  'a',  'l',  'o',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' }, 0, 0, 0b0011, 0 },
    { { 36, 55, 11, 1, 1, 0, 0, 7, 10, 3, 0, 1, 0, 0, 0, 50, 50, 50, 50, 50, 57, 43, 0, 55, 0, 3, 0, 7, 35, 70, 0, 0, 0, 68, 68, 0, 82, 100, 50, 50, 50, 68, 65, 86, 12, 0, 12, 0, 0, 27, 0, 0, 0, 61, 100, 100, 100, 100 },
      { 36, 44, 11, 1, 1, 0, 0, 7, 10, 3, 0, 1, 0, 0, 0, 50, 50, 50, 50, 50, 66, 37, 0, 55, 0, 3, 0, 7, 35, 70, 0, 0, 0, 68, 68, 0, 82, 100, 50, 50, 50, 68, 65, 86, 12, 0, 12, 0, 0, 27, 0, 0, 0, 61, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_95 = { // "Sweep     "
    { { 'S',  'w',  'e',  'e',  'p',  ' ',  ' ',  ' ',  ' ',  ' ' }, 0, 0, 0b0011, 0 },
    { { 36, 56, 11, 1, 1, 0, 50, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 58, 8, 35, 30, 30, 7, 0, 7, 100, 0, 0, 0, 42, 65, 85, 60, 90, 30, 90, 80, 70, 48, 50, 91, 12, 27, 12, 0, 0, 10, 0, 0, 0, 80, 100, 100, 100, 100 },
      { 36, 44, 11, 1, 3, 0, 50, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 60, 8, 35, 30, 30, 7, 0, 7, 100, 0, 0, 0, 42, 65, 85, 60, 90, 30, 90, 80, 70, 48, 50, 91, 12, 27, 12, 0, 0, 10, 0, 0, 0, 80, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_96 = { // "Rain      "
    { { 'R',  'a',  'i',  'n',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' }, 7, 2, 0b0111, 0 },
    { { 36, 55, 16, 1, 1, 0, 0, 6, 8, 1, 0, 1, 8, 6, 100, 50, 98, 41, 50, 50, 64, 30, 76, 25, 0, 7, 41, 10, 92, 88, 0, 1, 1, 15, 41, 61, 89, 79, 31, 64, 40, 88, 80, 91, 12, 27, 12, 1, 1, 0, 7, 14, 84, 85, 100, 71, 83, 0 },
      { 36, 45, 16, 1, 0, 0, 85, 6, 5, 1, 0, 1, 8, 6, 100, 50, 98, 41, 50, 50, 61, 30, 70, 25, 0, 7, 41, 10, 92, 88, 0, 1, 1, 15, 41, 61, 89, 79, 31, 64, 40, 88, 80, 91, 12, 27, 12, 1, 1, 0, 7, 14, 84, 85, 100, 71, 83, 0 },
      { 67, 50, 5, 1, 0, 105, 0, 7, 8, 3, 0, 54, 54, 68, 76, 93, 87, 77, 45, 0, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 80, 127, 0, 27, 12, 0, 0, 16, 63, 61, 72, 76, 68, 62, 24, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_97 = { // "Soundtrack"
    { { 'S',  'o',  'u',  'n',  'd',  't',  'r',  'a',  'c',  'k' }, 0, 0, 0b0011, 0 },
    { { 36, 56, 11, 1, 1, 0, 0, 7, 10, 0, 0, 0, 0, 58, 0, 50, 50, 50, 50, 50, 59, 10, 35, 83, 0, 9, 0, 7, 35, 0, 0, 0, 4, 13, 49, 72, 100, 56, 96, 77, 63, 56, 70, 91, 12, 27, 12, 0, 4, 48, 41, 0, 0, 77, 64, 100, 100, 100 },
      { 43, 45, 11, 1, 1, 0, 0, 7, 10, 0, 0, 44, 0, 58, 0, 48, 50, 50, 50, 50, 59, 10, 35, 57, 20, 9, 0, 7, 100, 0, 0, 0, 0, 71, 74, 0, 100, 100, 35, 49, 49, 32, 70, 91, 12, 27, 12, 0, 4, 41, 49, 0, 0, 77, 64, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_98 = { // "Crystal   "
    { { 'C',  'r',  'y',  's',  't',  'a',  'l',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 0 },
    { { 24, 50, 16, 1, 0, 50, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 74, 0, 3, 18, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 75, 116, 6, 3, 0, 1, 4, 0, 64, 66, 75, 81, 100, 66, 16, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_99 = { // "Atmosphere"
    { { 'A',  't',  'm',  'o',  's',  'p',  'h',  'e',  'r',  'e' }, 0, 0, 0b0011, 0 },
    { { 36, 58, 11, 1, 0, 0, 65, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 63, 0, 100, 33, 11, 7, 0, 7, 100, 28, 0, 0, 0, 41, 49, 72, 72, 100, 74, 60, 48, 61, 70, 110, 8, 27, 12, 0, 4, 1, 14, 53, 58, 64, 100, 94, 84, 78 },
      { 36, 43, 11, 1, 0, 0, 65, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 63, 0, 100, 33, 11, 7, 0, 7, 100, 28, 0, 0, 0, 41, 49, 72, 72, 100, 74, 56, 48, 61, 70, 110, 8, 27, 12, 0, 4, 1, 14, 53, 58, 64, 100, 94, 83, 77 } }
};

const static mt32_timbre_parameter mt32_timbre_100 = { // "Brightness"
    { { 'B',  'r',  'i',  'g',  'h',  't',  'n',  'e',  's',  's' }, 5, 0, 0b0111, 0 },
    { { 36, 44, 11, 1, 0, 37, 100, 7, 0, 0, 0, 0, 0, 0, 21, 53, 50, 50, 50, 30, 64, 20, 76, 45, 30, 7, 6, 7, 27, 0, 0, 0, 0, 91, 100, 100, 100, 100, 100, 100, 100, 100, 89, 21, 12, 27, 12, 3, 0, 0, 0, 0, 93, 75, 100, 100, 100, 0 },
      { 36, 53, 11, 1, 0, 37, 100, 7, 0, 0, 0, 0, 0, 0, 21, 53, 50, 50, 50, 30, 52, 20, 76, 45, 30, 7, 6, 7, 27, 0, 0, 0, 0, 91, 100, 100, 100, 100, 100, 100, 100, 100, 89, 21, 12, 27, 12, 3, 0, 0, 0, 0, 93, 75, 100, 100, 100, 0 },
      { 48, 50, 11, 1, 0, 0, 55, 7, 0, 0, 0, 39, 18, 18, 21, 53, 50, 50, 50, 30, 62, 33, 76, 53, 0, 10, 6, 7, 92, 0, 0, 0, 0, 20, 89, 0, 100, 100, 42, 0, 0, 80, 100, 21, 12, 27, 12, 3, 0, 0, 0, 0, 83, 50, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_101 = { // "Goblins   "
    { { 'G',  'o',  'b',  'l',  'i',  'n',  's',  ' ',  ' ',  ' ' }, 0, 12, 0b1111, 0 },
    { { 36, 50, 11, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 74, 30, 11, 0, 7, 100, 0, 0, 0, 25, 79, 100, 48, 100, 21, 80, 85, 40, 49, 80, 127, 12, 0, 12, 0, 2, 43, 61, 51, 100, 75, 32, 74, 94, 100 },
      { 36, 50, 11, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 22, 28, 11, 0, 7, 97, 0, 0, 0, 0, 24, 33, 100, 100, 38, 38, 38, 38, 85, 80, 127, 12, 0, 12, 0, 2, 35, 49, 51, 100, 73, 34, 71, 94, 100 },
      { 42, 50, 4, 1, 0, 118, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 100, 0, 11, 0, 7, 50, 0, 0, 0, 0, 39, 32, 100, 18, 100, 64, 35, 0, 90, 80, 127, 12, 0, 12, 0, 2, 52, 60, 78, 73, 40, 29, 69, 90, 86 },
      { 36, 50, 11, 1, 0, 24, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 50, 0, 11, 0, 7, 50, 0, 0, 0, 0, 8, 32, 100, 18, 97, 65, 35, 0, 58, 80, 127, 12, 0, 12, 0, 2, 69, 68, 45, 52, 40, 47, 89, 95, 98 } }
};

const static mt32_timbre_parameter mt32_timbre_102 = { // "Echoes    "
    { { 'E',  'c',  'h',  'o',  'e',  's',  ' ',  ' ',  ' ',  ' ' }, 7, 0, 0b0011, 0 },
    { { 36, 55, 16, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 61, 20, 54, 45, 20, 7, 107, 7, 100, 30, 0, 0, 0, 42, 1, 44, 77, 100, 45, 86, 55, 63, 66, 91, 12, 27, 12, 2, 4, 1, 42, 1, 85, 80, 100, 89, 97, 45 },
      { 36, 45, 16, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 66, 23, 49, 37, 20, 7, 107, 7, 100, 30, 0, 0, 0, 49, 1, 47, 99, 98, 16, 99, 55, 63, 66, 91, 12, 27, 12, 2, 4, 1, 48, 6, 80, 80, 81, 99, 97, 45 } }
};

const static mt32_timbre_parameter mt32_timbre_103 = { // "Sci-fi    "
    { { 'S',  'c',  'i',  '-',  'f',  'i',  ' ',  ' ',  ' ',  ' ' }, 0, 0, 0b0011, 0 },
    { { 36, 45, 11, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 64, 26, 49, 100, 16, 6, 0, 7, 40, 0, 0, 0, 0, 36, 0, 0, 100, 53, 39, 39, 39, 64, 70, 91, 12, 27, 12, 0, 0, 21, 66, 100, 0, 71, 100, 98, 0, 0 },
      { 36, 55, 11, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 62, 29, 35, 100, 16, 6, 0, 7, 40, 0, 0, 0, 0, 36, 0, 0, 100, 53, 39, 39, 39, 64, 70, 91, 12, 27, 12, 0, 0, 21, 66, 100, 0, 71, 100, 98, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_104 = { // "Sitar     "
    { { 'S',  'i',  't',  'a',  'r',  ' ',  ' ',  ' ',  ' ',  ' ' }, 5, 0, 0b1111, 0 },
    { { 36, 47, 16, 1, 0, 37, 0, 7, 6, 1, 0, 17, 16, 23, 0, 36, 44, 48, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 70, 127, 0, 3, 4, 0, 4, 22, 29, 46, 85, 62, 93, 97, 78, 0 },
      { 36, 52, 16, 1, 0, 43, 0, 7, 1, 1, 0, 17, 16, 24, 0, 41, 47, 49, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 64, 127, 0, 3, 9, 0, 4, 17, 38, 69, 75, 84, 77, 100, 61, 0 },
      { 36, 50, 16, 1, 1, 0, 44, 7, 6, 3, 0, 34, 17, 34, 50, 85, 63, 50, 50, 50, 52, 10, 32, 69, 20, 10, 91, 7, 88, 68, 0, 0, 2, 44, 67, 67, 71, 96, 60, 87, 37, 73, 86, 91, 12, 27, 12, 0, 4, 48, 41, 43, 88, 84, 87, 96, 83, 0 },
      { 36, 54, 16, 1, 0, 0, 100, 7, 5, 3, 0, 9, 13, 18, 50, 29, 38, 46, 50, 50, 52, 12, 31, 60, 14, 9, 91, 3, 97, 45, 0, 0, 10, 42, 64, 74, 100, 64, 58, 78, 0, 70, 75, 91, 12, 27, 12, 0, 4, 0, 22, 49, 88, 83, 2, 100, 90, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_105 = { // "Banjo     "
    { { 'B',  'a',  'n',  'j',  'o',  ' ',  ' ',  ' ',  ' ',  ' ' }, 1, 2, 0b0111, 0 },
    { { 36, 62, 15, 1, 0, 0, 75, 7, 3, 0, 1, 20, 7, 25, 0, 50, 67, 50, 50, 50, 62, 3, 0, 85, 0, 6, 15, 9, 92, 73, 0, 2, 0, 0, 44, 50, 87, 78, 69, 29, 0, 64, 76, 127, 12, 27, 5, 0, 0, 0, 45, 57, 85, 31, 97, 82, 32, 0 },
      { 69, 37, 11, 1, 0, 0, 0, 7, 0, 0, 0, 6, 0, 0, 0, 68, 50, 41, 50, 50, 64, 2, 49, 31, 30, 7, 103, 8, 70, 88, 0, 2, 0, 9, 50, 0, 88, 98, 71, 0, 0, 24, 74, 91, 8, 62, 12, 0, 2, 0, 41, 47, 92, 36, 92, 84, 32, 0 },
      { 36, 50, 16, 1, 0, 40, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 90, 91, 12, 27, 12, 0, 0, 0, 0, 0, 75, 74, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_106 = { // "Shamisen  "
    { { 'S',  'h',  'a',  'm',  'i',  's',  'e',  'n',  ' ',  ' ' }, 2, 2, 0b0111, 0 },
    { { 36, 50, 15, 1, 0, 21, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 75, 91, 12, 27, 6, 0, 0, 0, 50, 60, 34, 27, 100, 37, 0, 0 },
      { 48, 55, 15, 1, 1, 0, 100, 7, 3, 1, 4, 10, 11, 28, 36, 63, 39, 56, 50, 47, 55, 9, 21, 82, 28, 8, 27, 9, 24, 20, 0, 0, 10, 44, 49, 45, 88, 100, 58, 40, 31, 75, 68, 109, 6, 18, 9, 2, 1, 0, 16, 83, 76, 76, 100, 58, 0, 0 },
      { 48, 55, 15, 1, 1, 26, 100, 7, 3, 1, 4, 10, 11, 28, 36, 63, 39, 56, 50, 47, 55, 9, 21, 82, 28, 8, 27, 9, 24, 20, 0, 0, 10, 44, 49, 45, 88, 100, 58, 40, 31, 75, 68, 109, 6, 18, 9, 2, 1, 0, 30, 100, 76, 76, 100, 78, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_107 = { // "Koto      "
    { { 'K',  'o',  't',  'o',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 50, 16, 1, 0, 39, 0, 7, 5, 0, 0, 39, 29, 40, 0, 50, 32, 38, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 67, 127, 0, 0, 0, 0, 0, 0, 19, 43, 87, 84, 100, 91, 83, 0 },
      { 48, 50, 16, 1, 1, 0, 58, 7, 5, 3, 0, 39, 29, 40, 0, 50, 32, 62, 50, 50, 62, 10, 44, 68, 0, 11, 91, 3, 61, 14, 0, 0, 0, 36, 45, 73, 100, 84, 48, 28, 24, 80, 67, 91, 12, 27, 12, 1, 4, 0, 15, 41, 78, 94, 84, 87, 77, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_108 = { // "Kalimba   "
    { { 'K',  'a',  'l',  'i',  'm',  'b',  'a',  ' ',  ' ',  ' ' }, 2, 0, 0b0011, 1 },
    { { 76, 50, 11, 1, 0, 13, 85, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 30, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 78, 110, 12, 3, 12, 0, 0, 0, 0, 0, 89, 64, 100, 99, 100, 0 },
      { 36, 50, 16, 1, 0, 34, 40, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 62, 20, 6, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 75, 110, 12, 3, 12, 0, 0, 0, 0, 0, 64, 40, 100, 99, 100, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_109 = { // "Bagpipe   "
    { { 'B',  'a',  'g',  'p',  'i',  'p',  'e',  ' ',  ' ',  ' ' }, 0, 0, 0b0111, 0 },
    { { 36, 44, 11, 1, 1, 0, 0, 7, 6, 0, 0, 17, 12, 19, 0, 27, 38, 51, 50, 50, 0, 0, 0, 100, 30, 11, 0, 7, 81, 0, 0, 0, 32, 73, 100, 55, 18, 40, 54, 51, 46, 68, 66, 84, 0, 84, 0, 0, 2, 18, 21, 36, 100, 35, 69, 98, 88, 0 },
      { 48, 56, 11, 1, 1, 0, 0, 7, 4, 0, 0, 32, 41, 78, 0, 35, 35, 50, 50, 50, 0, 0, 0, 97, 29, 11, 0, 9, 35, 100, 0, 0, 11, 14, 25, 99, 18, 20, 57, 92, 94, 68, 65, 84, 0, 84, 0, 0, 2, 32, 21, 36, 100, 40, 81, 98, 88, 0 },
      { 36, 55, 11, 1, 1, 0, 0, 7, 2, 0, 0, 55, 63, 100, 32, 52, 51, 49, 51, 52, 0, 0, 0, 100, 30, 11, 0, 7, 10, 0, 0, 0, 28, 65, 82, 90, 100, 86, 86, 86, 86, 76, 63, 127, 12, 24, 0, 0, 2, 0, 27, 41, 100, 40, 61, 91, 91, 91 } }
};

const static mt32_timbre_parameter mt32_timbre_110 = { // "Fiddle    "
    { { 'F',  'i',  'd',  'd',  'l',  'e',  ' ',  ' ',  ' ',  ' ' }, 5, 0, 0b0111, 0 },
    { { 37, 42, 16, 1, 0, 45, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 92, 43, 11, 91, 12, 1, 0, 0, 48, 15, 0, 60, 100, 0, 0, 0 },
      { 59, 43, 5, 1, 0, 53, 80, 7, 10, 1, 3, 0, 18, 21, 30, 48, 59, 35, 50, 47, 66, 93, 0, 75, 0, 9, 27, 10, 30, 20, 0, 0, 16, 24, 24, 80, 88, 100, 96, 90, 18, 52, 80, 36, 9, 27, 12, 3, 1, 18, 9, 4, 46, 60, 78, 23, 42, 23 },
      { 36, 43, 16, 1, 0, 0, 80, 7, 7, 1, 3, 0, 22, 42, 0, 48, 99, 49, 50, 50, 66, 28, 35, 75, 0, 9, 27, 10, 30, 20, 0, 0, 16, 24, 24, 80, 88, 100, 96, 90, 18, 80, 90, 91, 12, 27, 12, 3, 1, 8, 10, 18, 24, 60, 62, 41, 96, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_111 = { // "Shanai    "
    { { 'S',  'h',  'a',  'n',  'a',  'i',  ' ',  ' ',  ' ',  ' ' }, 0, 0, 0b0001, 0 },
    { { 36, 57, 16, 1, 0, 0, 100, 7, 10, 0, 0, 17, 0, 0, 0, 47, 50, 50, 50, 50, 63, 5, 40, 83, 26, 7, 104, 6, 0, 0, 0, 0, 0, 10, 0, 0, 0, 62, 0, 0, 0, 100, 75, 91, 12, 27, 12, 4, 1, 17, 17, 28, 0, 27, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_112 = { // "TinkleBell"
    { { 'T',  'i',  'n',  'k',  'l',  'e',  'B',  'e',  'l',  'l' }, 1, 0, 0b0011, 0 },
    { { 48, 50, 11, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 53, 0, 50, 50, 50, 50, 50, 62, 14, 34, 42, 0, 11, 41, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 60, 91, 12, 27, 8, 3, 0, 0, 10, 35, 80, 69, 100, 98, 87, 0 },
      { 82, 68, 11, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 75, 0, 11, 27, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 50, 91, 12, 27, 8, 1, 0, 0, 5, 42, 78, 76, 100, 85, 51, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_113 = { // "Agogo     "
    { { 'A',  'g',  'o',  'g',  'o',  ' ',  ' ',  ' ',  ' ',  ' ' }, 5, 0, 0b0011, 0 },
    { { 27, 50, 11, 1, 0, 16, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 50, 0, 11, 0, 7, 50, 0, 0, 0, 0, 8, 32, 100, 18, 100, 65, 35, 0, 92, 73, 127, 12, 0, 12, 0, 2, 0, 21, 36, 100, 40, 100, 98, 88, 0 },
      { 39, 65, 11, 1, 0, 16, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 88, 30, 11, 0, 7, 100, 0, 0, 0, 0, 8, 32, 100, 18, 100, 65, 35, 0, 92, 76, 127, 12, 0, 12, 0, 2, 15, 54, 25, 100, 40, 100, 100, 72, 35 } }
};

const static mt32_timbre_parameter mt32_timbre_114 = { // "SteelDrums"
    { { 'S',  't',  'e',  'e',  'l',  'D',  'r',  'u',  'm',  's' }, 0, 5, 0b0011, 1 },
    { { 36, 50, 11, 1, 0, 41, 57, 7, 0, 0, 0, 39, 18, 18, 21, 53, 50, 50, 50, 30, 6, 23, 76, 62, 0, 7, 6, 7, 27, 0, 0, 0, 33, 91, 100, 100, 100, 100, 100, 100, 100, 81, 89, 21, 12, 27, 12, 3, 0, 0, 0, 0, 70, 50, 100, 100, 100, 0 },
      { 60, 25, 11, 1, 0, 41, 55, 7, 0, 0, 0, 39, 18, 18, 21, 53, 50, 50, 50, 30, 6, 23, 76, 43, 0, 10, 6, 7, 27, 0, 0, 0, 0, 91, 100, 100, 100, 100, 100, 100, 100, 81, 100, 21, 12, 27, 12, 3, 0, 20, 0, 0, 68, 50, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_115 = { // "Woodblock "
    { { 'W',  'o',  'o',  'd',  'b',  'l',  'o',  'c',  'k',  ' ' }, 5, 5, 0b0011, 0 },
    { { 10, 50, 7, 1, 0, 71, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 50, 0, 11, 0, 7, 50, 0, 0, 0, 0, 8, 32, 100, 18, 100, 65, 35, 0, 68, 80, 127, 12, 0, 12, 0, 2, 8, 65, 51, 100, 40, 100, 100, 100, 0 },
      { 58, 50, 7, 1, 0, 66, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 50, 0, 11, 0, 7, 50, 0, 0, 0, 0, 8, 32, 100, 18, 100, 65, 35, 0, 100, 63, 127, 12, 0, 12, 0, 2, 0, 85, 36, 100, 40, 88, 52, 88, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_116 = { // "TaikoDrum "
    { { 'T',  'a',  'i',  'k',  'o',  'D',  'r',  'u',  'm',  ' ' }, 5, 2, 0b0111, 0 },
    { { 24, 24, 6, 1, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 70, 91, 12, 27, 12, 0, 0, 0, 4, 5, 6, 84, 59, 85, 95, 100 },
      { 15, 50, 6, 1, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 70, 91, 12, 27, 12, 0, 0, 8, 5, 9, 11, 83, 74, 90, 97, 100 },
      { 19, 50, 6, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 70, 91, 12, 27, 12, 0, 0, 3, 3, 8, 11, 72, 67, 84, 96, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_117 = { // "MelodicTom"
    { { 'M',  'e',  'l',  'o',  'd',  'i',  'c',  'T',  'o',  'm' }, 2, 0, 0b0001, 0 },
    { { 32, 100, 16, 1, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 65, 0, 74, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 66, 91, 12, 27, 12, 3, 3, 1, 7, 2, 5, 70, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_118 = { // "SynthDrum "
    { { 'S',  'y',  'n',  't',  'h',  'D',  'r',  'u',  'm',  ' ' }, 2, 0, 0b0011, 0 },
    { { 35, 76, 10, 1, 0, 2, 0, 7, 8, 2, 0, 2, 5, 100, 100, 83, 22, 68, 29, 4, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 80, 91, 12, 3, 0, 0, 3, 0, 23, 100, 100, 100, 100, 90, 75, 0 },
      { 24, 50, 16, 1, 0, 0, 0, 7, 9, 1, 0, 42, 41, 63, 60, 51, 40, 29, 0, 0, 0, 0, 0, 69, 0, 3, 0, 7, 16, 26, 1, 0, 0, 30, 49, 51, 56, 100, 44, 12, 0, 92, 80, 91, 12, 3, 0, 3, 3, 0, 45, 45, 65, 72, 100, 60, 26, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_119 = { // "RevCymbal "
    { { 'R',  'e',  'v',  'C',  'y',  'm',  'b',  'a',  'l',  ' ' }, 2, 0, 0b0001, 0 },
    { { 34, 50, 11, 1, 0, 5, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 50, 0, 11, 0, 7, 50, 0, 0, 0, 12, 8, 32, 100, 18, 97, 65, 35, 0, 96, 100, 127, 12, 0, 12, 0, 2, 37, 57, 64, 0, 40, 26, 70, 98, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_120 = { // "GuitarFret"
    { { 'G',  'u',  'i',  't',  'a',  'r',  'F',  'r',  'e',  't' }, 5, 0, 0b0011, 0 },
    { { 58, 56, 11, 1, 0, 118, 0, 7, 10, 0, 4, 38, 38, 0, 0, 50, 76, 47, 47, 50, 59, 10, 35, 37, 0, 9, 0, 7, 35, 0, 0, 0, 4, 13, 49, 72, 100, 56, 96, 77, 63, 45, 70, 91, 12, 27, 12, 4, 4, 27, 42, 40, 0, 53, 100, 100, 0, 0 },
      { 55, 56, 11, 1, 0, 115, 0, 7, 10, 0, 4, 42, 38, 0, 0, 50, 76, 47, 47, 50, 59, 10, 35, 37, 0, 9, 0, 7, 35, 0, 0, 0, 4, 13, 49, 72, 100, 56, 96, 77, 63, 45, 70, 91, 12, 27, 12, 4, 4, 27, 42, 40, 0, 53, 100, 100, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_121 = { // "BreathNois"
    { { 'B',  'r',  'e',  'a',  't',  'h',  'N',  'o',  'i',  's' }, 5, 0, 0b0011, 0 },
    { { 62, 50, 16, 1, 0, 53, 0, 7, 2, 1, 0, 0, 0, 0, 54, 36, 44, 50, 50, 45, 66, 42, 34, 79, 24, 8, 34, 10, 10, 72, 0, 2, 11, 22, 27, 50, 100, 27, 48, 61, 69, 46, 69, 127, 12, 27, 12, 3, 3, 21, 48, 0, 0, 54, 100, 1, 1, 1 },
      { 36, 13, 16, 1, 0, 27, 0, 7, 2, 1, 0, 10, 14, 54, 54, 36, 44, 50, 50, 45, 64, 12, 35, 57, 10, 8, 34, 10, 10, 72, 0, 2, 11, 22, 27, 50, 100, 27, 48, 61, 69, 24, 73, 127, 12, 27, 12, 0, 3, 7, 22, 50, 0, 54, 57, 100, 0, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_122 = { // "Seashore  "
    { { 'S',  'e',  'a',  's',  'h',  'o',  'r',  'e',  ' ',  ' ' }, 5, 0, 0b0011, 0 },
    { { 14, 50, 8, 1, 0, 24, 80, 7, 2, 0, 0, 30, 100, 45, 0, 100, 73, 51, 60, 50, 62, 10, 69, 45, 16, 10, 30, 11, 51, 0, 0, 0, 21, 38, 59, 70, 51, 64, 34, 14, 4, 100, 80, 91, 12, 27, 12, 0, 0, 0, 70, 75, 79, 54, 34, 100, 61, 0 },
      { 44, 50, 9, 1, 0, 24, 80, 7, 8, 0, 0, 39, 22, 68, 79, 31, 48, 52, 56, 57, 62, 10, 69, 45, 16, 10, 30, 11, 51, 0, 0, 0, 21, 38, 59, 70, 51, 64, 34, 14, 4, 100, 80, 91, 12, 27, 12, 0, 0, 0, 70, 75, 79, 54, 34, 100, 61, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_123 = { // "BirdTweet "
    { { 'B',  'i',  'r',  'd',  'T',  'w',  'e',  'e',  't',  ' ' }, 0, 0, 0b0001, 0 },
    { { 78, 56, 6, 0, 0, 0, 0, 7, 10, 0, 0, 47, 0, 54, 30, 48, 50, 76, 38, 75, 59, 10, 35, 37, 0, 9, 0, 7, 35, 0, 0, 0, 4, 13, 49, 72, 100, 56, 96, 77, 63, 99, 92, 91, 12, 27, 12, 0, 0, 29, 40, 51, 33, 42, 100, 0, 100, 0 } }
};

const static mt32_timbre_parameter mt32_timbre_124 = { // "Telephone "
    { { 'T',  'e',  'l',  'e',  'p',  'h',  'o',  'n',  'e',  ' ' }, 2, 0, 0b0001, 0 },
    { { 38, 32, 7, 1, 0, 51, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 65, 0, 70, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 60, 115, 0, 3, 0, 0, 0, 0, 0, 0, 0, 64, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_125 = { // "Helicopter"
    { { 'H',  'e',  'l',  'i',  'c',  'o',  'p',  't',  'e',  'r' }, 10, 0, 0b0011, 0 },
    { { 41, 58, 4, 1, 0, 75, 65, 7, 0, 0, 0, 0, 0, 58, 0, 50, 50, 50, 50, 50, 55, 18, 36, 92, 11, 7, 0, 7, 100, 28, 0, 0, 38, 23, 23, 84, 78, 4, 80, 96, 48, 64, 81, 110, 12, 27, 12, 0, 0, 31, 80, 49, 0, 69, 73, 100, 100, 100 },
      { 21, 58, 4, 1, 1, 0, 52, 7, 0, 0, 0, 0, 0, 58, 0, 50, 50, 50, 50, 50, 55, 18, 36, 46, 0, 7, 0, 7, 100, 0, 0, 0, 38, 0, 0, 0, 100, 100, 100, 100, 100, 84, 50, 110, 12, 27, 12, 0, 0, 0, 0, 0, 0, 83, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_timbre_126 = { // "Applause  "
    { { 'A',  'p',  'p',  'l',  'a',  'u',  's',  'e',  ' ',  ' ' }, 5, 0, 0b0011, 0 },
    { { 14, 50, 3, 1, 0, 24, 80, 7, 2, 0, 0, 25, 100, 63, 55, 98, 73, 45, 39, 80, 62, 10, 69, 45, 16, 10, 30, 11, 51, 0, 0, 0, 21, 38, 59, 70, 51, 64, 34, 14, 4, 68, 80, 91, 12, 27, 12, 3, 0, 56, 64, 33, 39, 90, 69, 87, 86, 82 },
      { 17, 50, 3, 1, 0, 24, 80, 7, 2, 0, 0, 72, 100, 72, 55, 1, 23, 45, 63, 80, 62, 10, 69, 45, 16, 10, 30, 11, 51, 0, 0, 0, 21, 38, 59, 70, 51, 64, 34, 14, 4, 68, 80, 91, 12, 27, 12, 3, 0, 56, 64, 33, 39, 90, 69, 87, 86, 82 } }
};

const static mt32_timbre_parameter mt32_timbre_127 = { // "Gunshot   "
    { { 'G',  'u',  'n',  's',  'h',  'o',  't',  ' ',  ' ',  ' ' }, 5, 2, 0b0111, 0 },
    { { 12, 50, 8, 1, 0, 83, 0, 7, 10, 0, 2, 49, 0, 59, 72, 50, 51, 51, 37, 50, 73, 0, 0, 0, 0, 3, 0, 7, 100, 0, 0, 0, 0, 40, 100, 70, 0, 99, 100, 100, 100, 84, 80, 110, 12, 61, 12, 4, 4, 0, 41, 54, 65, 56, 100, 80, 52, 0 },
      { 0, 50, 8, 1, 0, 24, 0, 7, 10, 0, 2, 55, 18, 61, 72, 74, 61, 70, 49, 50, 73, 0, 0, 0, 0, 3, 0, 7, 100, 0, 0, 0, 0, 40, 100, 70, 0, 99, 100, 100, 100, 76, 80, 110, 12, 61, 12, 4, 4, 0, 0, 53, 67, 56, 100, 100, 79, 0 },
      { 0, 50, 8, 1, 0, 60, 0, 7, 10, 0, 2, 54, 25, 74, 72, 68, 47, 60, 30, 50, 73, 0, 0, 0, 0, 3, 0, 7, 100, 0, 0, 0, 0, 40, 100, 70, 0, 99, 100, 100, 100, 84, 80, 110, 12, 61, 12, 4, 4, 0, 0, 36, 76, 46, 100, 100, 98, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_27 = { // "OFF       "
    { { 'O',  'F',  'F',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' }, 0, 0, 0b0000, 1 },
};

const static mt32_timbre_parameter mt32_rhythm_timbre_29 = { // "ScrtchPush"
    { { 'S',  'c',  'r',  't',  'c',  'h',  'P',  'u',  's',  'h' }, 5, 0, 0b0001, 0 },
    { { 37, 50, 3, 1, 0, 19, 0, 7, 10, 0, 0, 39, 45, 73, 96, 7, 34, 48, 22, 0, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 90, 91, 12, 27, 12, 0, 4, 0, 13, 100, 0, 52, 20, 95, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_30 = { // "ScrtchPull"
    { { 'S',  'c',  'r',  't',  'c',  'h',  'P',  'u',  'l',  'l' }, 5, 5, 0b0001, 0 },
    { { 31, 50, 3, 1, 0, 15, 0, 7, 10, 0, 0, 39, 45, 73, 96, 7, 34, 48, 22, 0, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 90, 91, 12, 27, 12, 0, 4, 0, 13, 100, 0, 52, 20, 95, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_31 = { // "Sticks    "
    { { 'S',  't',  'i',  'c',  'k',  's',  ' ',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 34, 50, 3, 1, 0, 9, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_32 = { // "SquareClk "
    { { 'S',  'q',  'u',  'a',  'r',  'e',  'C',  'l',  'k',  ' ' }, 5, 8, 0b0001, 0 },
    { { 52, 50, 16, 1, 0, 52, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 127, 12, 0, 12, 0, 4, 0, 0, 20, 0, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_33 = { // "MetroClick"
    { { 'M',  'e',  't',  'r',  'o',  'C',  'l',  'i',  'c',  'k' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 63, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_34 = { // "Metronome "
    { { 'M',  'e',  't',  'r',  'o',  'n',  'o',  'm',  'e',  ' ' }, 2, 0, 0b0011, 0 },
    { { 86, 50, 5, 0, 0, 34, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 100, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 70, 98, 12, 22, 12, 0, 0, 0, 22, 54, 43, 40, 100, 92, 53, 0 },
      { 86, 50, 4, 0, 0, 0, 0, 7, 10, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 64, 7, 39, 61, 12, 5, 0, 7, 18, 0, 0, 0, 22, 25, 25, 80, 93, 25, 51, 53, 0, 64, 70, 98, 12, 22, 12, 0, 0, 1, 23, 38, 82, 74, 100, 94, 79, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_35 = { // "KickDrum2 "
    { { 'K',  'i',  'c',  'k',  'D',  'r',  'u',  'm',  '2',  ' ' }, 5, 0, 0b0001, 1 },
    { { 34, 50, 3, 1, 0, 54, 0, 7, 7, 1, 0, 2, 3, 19, 100, 7, 63, 48, 52, 36, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 75, 127, 12, 0, 12, 0, 3, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_36 = { // "KickDrum1 "
    { { 'K',  'i',  'c',  'k',  'D',  'r',  'u',  'm',  '1',  ' ' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 54, 0, 7, 7, 1, 0, 2, 3, 19, 100, 7, 63, 48, 52, 36, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 75, 127, 12, 0, 12, 0, 3, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_37 = { // "SideStick "
    { { 'S',  'i',  'd',  'e',  'S',  't',  'i',  'c',  'k',  ' ' }, 5, 0, 0b0001, 1 },
    { { 35, 50, 3, 1, 0, 63, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 88, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_38 = { // "SnareDrum1"
    { { 'S',  'n',  'a',  'r',  'e',  'D',  'r',  'u',  'm',  '1' }, 5, 0, 0b0001, 1 },
    { { 36, 46, 3, 1, 0, 55, 0, 7, 4, 3, 0, 7, 12, 29, 64, 53, 49, 45, 41, 39, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 80, 127, 12, 0, 12, 3, 4, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_39 = { // "HandClap  "
    { { 'H',  'a',  'n',  'd',  'C',  'l',  'a',  'p',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 64, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_40 = { // "SnareDrum2"
    { { 'S',  'n',  'a',  'r',  'e',  'D',  'r',  'u',  'm',  '2' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 56, 0, 7, 5, 3, 2, 17, 23, 66, 100, 55, 42, 31, 17, 1, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 78, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_41 = { // "LowTom2   "
    { { 'L',  'o',  'w',  'T',  'o',  'm',  '2',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 25, 63, 3, 1, 0, 57, 0, 7, 6, 3, 0, 10, 47, 96, 100, 53, 36, 22, 16, 8, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 70, 127, 12, 0, 12, 0, 4, 0, 25, 100, 100, 100, 95, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_42 = { // "ClosdHiHat"
    { { 'C',  'l',  'o',  's',  'd',  'H',  'i',  'H',  'a',  't' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 58, 0, 7, 0, 0, 0, 2, 6, 12, 100, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 100, 127, 12, 0, 12, 0, 3, 0, 1, 25, 43, 51, 69, 100, 77, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_43 = { // "LowTom1   "
    { { 'L',  'o',  'w',  'T',  'o',  'm',  '1',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 29, 63, 3, 1, 0, 57, 0, 7, 6, 3, 0, 10, 47, 96, 100, 53, 36, 22, 16, 8, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 70, 127, 12, 0, 12, 0, 4, 0, 25, 100, 100, 100, 95, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_44 = { // "PedalHiHat"
    { { 'P',  'e',  'd',  'a',  'l',  'H',  'i',  'H',  'a',  't' }, 5, 0, 0b0001, 1 },
    { { 37, 50, 3, 1, 0, 58, 0, 7, 0, 0, 0, 2, 6, 12, 100, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 80, 127, 12, 0, 12, 0, 3, 4, 7, 25, 43, 51, 74, 100, 77, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_45 = { // "MidTom2   "
    { { 'M',  'i',  'd',  'T',  'o',  'm',  '2',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 30, 70, 3, 1, 0, 57, 0, 7, 6, 3, 0, 28, 58, 100, 100, 53, 38, 25, 19, 1, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 73, 127, 12, 0, 12, 0, 4, 0, 22, 100, 100, 100, 94, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_46 = { // "OpenHiHat "
    { { 'O',  'p',  'e',  'n',  'H',  'i',  'H',  'a',  't',  ' ' }, 5, 0, 0b0011, 1 },
    { { 35, 50, 3, 1, 0, 58, 0, 7, 3, 2, 0, 2, 6, 12, 100, 64, 57, 52, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 92, 127, 12, 0, 12, 0, 1, 1, 33, 38, 33, 32, 100, 92, 50, 0 },
      { 35, 50, 3, 1, 0, 59, 0, 7, 4, 2, 0, 3, 12, 28, 100, 64, 55, 51, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 80, 127, 12, 0, 12, 0, 3, 0, 66, 54, 82, 51, 100, 53, 35, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_47 = { // "MidTom1   "
    { { 'M',  'i',  'd',  'T',  'o',  'm',  '1',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 34, 70, 3, 1, 0, 57, 0, 7, 6, 3, 0, 28, 58, 100, 100, 53, 38, 25, 19, 1, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 73, 127, 12, 0, 12, 0, 4, 0, 22, 100, 100, 100, 94, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_48 = { // "HighTom2  "
    { { 'H',  'i',  'g',  'h',  'T',  'o',  'm',  '2',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 57, 0, 7, 5, 3, 2, 9, 19, 100, 100, 52, 41, 33, 25, 1, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 70, 127, 12, 0, 12, 0, 4, 0, 22, 100, 100, 100, 88, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_49 = { // "CrashCym  "
    { { 'C',  'r',  'a',  's',  'h',  'C',  'y',  'm',  ' ',  ' ' }, 5, 0, 0b0011, 1 },
    { { 29, 50, 3, 1, 0, 61, 56, 7, 3, 3, 0, 34, 0, 0, 0, 100, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 76, 103, 12, 27, 12, 0, 0, 0, 40, 68, 63, 35, 100, 100, 18, 0 },
      { 37, 50, 3, 1, 0, 7, 56, 7, 3, 3, 0, 34, 0, 0, 0, 100, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 76, 103, 12, 27, 12, 0, 0, 0, 40, 68, 63, 35, 100, 100, 18, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_50 = { // "HighTom1  "
    { { 'H',  'i',  'g',  'h',  'T',  'o',  'm',  '1',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 37, 50, 3, 1, 0, 57, 0, 7, 5, 3, 2, 9, 19, 100, 100, 52, 41, 33, 25, 1, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 70, 127, 12, 0, 12, 0, 4, 0, 22, 100, 100, 100, 88, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_51 = { // "RideCymbal"
    { { 'R',  'i',  'd',  'e',  'C',  'y',  'm',  'b',  'a',  'l' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 62, 0, 7, 0, 3, 0, 0, 13, 26, 100, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 85, 127, 12, 0, 12, 0, 4, 0, 30, 62, 100, 100, 100, 99, 51, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_52 = { // "ChineseCym"
    { { 'C',  'h',  'i',  'n',  'e',  's',  'e',  'C',  'y',  'm' }, 5, 0, 0b0011, 1 },
    { { 36, 50, 3, 1, 0, 60, 0, 7, 2, 3, 0, 0, 13, 17, 100, 62, 58, 51, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 94, 127, 12, 0, 12, 0, 4, 0, 39, 30, 18, 54, 100, 100, 69, 0 },
      { 36, 50, 3, 1, 0, 61, 0, 7, 2, 3, 0, 0, 17, 15, 96, 50, 58, 52, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 81, 127, 12, 0, 12, 0, 4, 0, 55, 58, 72, 78, 100, 83, 53, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_53 = { // "RideBell  "
    { { 'R',  'i',  'd',  'e',  'B',  'e',  'l',  'l',  ' ',  ' ' }, 5, 0, 0b0011, 1 },
    { { 39, 0, 3, 1, 0, 62, 0, 7, 2, 0, 0, 5, 14, 31, 100, 50, 48, 44, 39, 15, 64, 0, 80, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 91, 9, 64, 10, 0, 0, 0, 1, 29, 43, 88, 94, 100, 94, 66 },
      { 36, 91, 3, 1, 0, 61, 0, 7, 3, 0, 0, 3, 5, 19, 100, 61, 51, 45, 38, 28, 64, 0, 80, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 100, 106, 5, 84, 8, 0, 0, 0, 40, 42, 51, 76, 100, 96, 80, 48 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_54 = { // "Tambourine"
    { { 'T',  'a',  'm',  'b',  'o',  'u',  'r',  'i',  'n',  'e' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 69, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_55 = { // "SplashCym "
    { { 'S',  'p',  'l',  'a',  's',  'h',  'C',  'y',  'm',  ' ' }, 5, 0, 0b0011, 1 },
    { { 43, 50, 11, 1, 1, 60, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 127, 12, 0, 12, 0, 2, 0, 12, 66, 100, 38, 100, 98, 52, 0 },
      { 43, 21, 11, 1, 1, 61, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 80, 127, 12, 0, 12, 0, 1, 0, 30, 48, 24, 5, 100, 100, 86, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_56 = { // "Cowbell   "
    { { 'C',  'o',  'w',  'b',  'e',  'l',  'l',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 68, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 90, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_57 = { // "CrashCym2 "
    { { 'C',  'r',  'a',  's',  'h',  'C',  'y',  'm',  '2',  ' ' }, 5, 0, 0b0011, 1 },
    { { 38, 50, 11, 1, 1, 60, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 127, 12, 0, 12, 0, 2, 0, 12, 66, 100, 38, 100, 98, 52, 0 },
      { 38, 21, 11, 1, 1, 61, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 127, 12, 0, 12, 0, 1, 0, 30, 56, 56, 80, 100, 100, 86, 58 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_58 = { // "VibraSlap "
    { { 'V',  'i',  'b',  'r',  'a',  'S',  'l',  'a',  'p',  ' ' }, 5, 5, 0b0111, 1 },
    { { 44, 8, 3, 1, 0, 82, 0, 7, 4, 0, 0, 29, 51, 64, 100, 61, 46, 31, 6, 5, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 80, 127, 12, 0, 12, 0, 3, 1, 47, 56, 65, 80, 100, 90, 55, 0 },
      { 43, 42, 3, 1, 0, 82, 0, 7, 4, 0, 0, 72, 51, 64, 100, 31, 41, 31, 7, 4, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 80, 127, 12, 0, 12, 0, 3, 1, 42, 57, 66, 77, 100, 92, 67, 0 },
      { 40, 31, 3, 1, 0, 83, 0, 7, 6, 0, 0, 21, 59, 79, 100, 44, 40, 30, 21, 2, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 127, 12, 0, 12, 0, 3, 0, 42, 53, 66, 70, 57, 46, 23, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_59 = { // "RideCym2  "
    { { 'R',  'i',  'd',  'e',  'C',  'y',  'm',  '2',  ' ',  ' ' }, 5, 5, 0b0111, 1 },
    { { 39, 0, 3, 1, 0, 8, 0, 7, 2, 0, 0, 5, 14, 31, 100, 50, 48, 44, 39, 15, 64, 0, 80, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 80, 91, 9, 64, 10, 0, 0, 0, 1, 29, 43, 88, 94, 100, 94, 66 },
      { 39, 14, 3, 1, 0, 62, 0, 7, 2, 0, 0, 5, 14, 31, 100, 50, 48, 44, 39, 15, 64, 0, 80, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 80, 91, 12, 27, 12, 0, 0, 0, 40, 50, 58, 77, 100, 94, 74, 37 },
      { 36, 91, 3, 1, 0, 61, 0, 7, 3, 0, 0, 3, 5, 19, 100, 61, 51, 45, 38, 28, 64, 0, 80, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 80, 106, 5, 84, 8, 0, 0, 0, 40, 42, 51, 76, 100, 96, 80, 48 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_60 = { // "HighBongo "
    { { 'H',  'i',  'g',  'h',  'B',  'o',  'n',  'g',  'o',  ' ' }, 5, 0, 0b0011, 1 },
    { { 44, 100, 3, 1, 0, 67, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 127, 12, 0, 12, 0, 0, 0, 100, 100, 100, 100, 100, 100, 100, 0 },
      { 57, 50, 3, 1, 0, 20, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_61 = { // "LowBongo  "
    { { 'L',  'o',  'w',  'B',  'o',  'n',  'g',  'o',  ' ',  ' ' }, 5, 0, 0b0011, 1 },
    { { 35, 100, 3, 1, 0, 67, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 127, 12, 0, 12, 0, 0, 0, 100, 100, 100, 100, 100, 100, 100, 0 },
      { 55, 50, 3, 1, 0, 20, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_62 = { // "MutHiConga"
    { { 'M',  'u',  't',  'H',  'i',  'C',  'o',  'n',  'g',  'a' }, 2, 0, 0b0001, 1 },
    { { 36, 97, 3, 1, 0, 65, 0, 7, 7, 2, 0, 0, 2, 4, 6, 65, 59, 52, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_63 = { // "OpnHiConga"
    { { 'O',  'p',  'n',  'H',  'i',  'C',  'o',  'n',  'g',  'a' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 66, 0, 7, 5, 0, 0, 1, 25, 51, 100, 60, 44, 40, 36, 31, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 79, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_64 = { // "LowConga  "
    { { 'L',  'o',  'w',  'C',  'o',  'n',  'g',  'a',  ' ',  ' ' }, 2, 0, 0b0001, 1 },
    { { 31, 18, 3, 1, 0, 66, 0, 7, 7, 0, 0, 1, 25, 51, 51, 60, 44, 40, 36, 31, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_65 = { // "HiTimbale "
    { { 'H',  'i',  'T',  'i',  'm',  'b',  'a',  'l',  'e',  ' ' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 72, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_66 = { // "LowTimbale"
    { { 'L',  'o',  'w',  'T',  'i',  'm',  'b',  'a',  'l',  'e' }, 5, 0, 0b0001, 1 },
    { { 31, 22, 3, 1, 0, 72, 0, 7, 3, 2, 0, 1, 25, 51, 51, 60, 44, 40, 36, 31, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_67 = { // "HighAgogo "
    { { 'H',  'i',  'g',  'h',  'A',  'g',  'o',  'g',  'o',  ' ' }, 5, 0, 0b0001, 1 },
    { { 40, 7, 3, 1, 0, 70, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_68 = { // "LowAgogo  "
    { { 'L',  'o',  'w',  'A',  'g',  'o',  'g',  'o',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 34, 90, 3, 1, 0, 70, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_69 = { // "Cabasa    "
    { { 'C',  'a',  'b',  'a',  's',  'a',  ' ',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 34, 65, 3, 1, 0, 73, 0, 7, 3, 0, 0, 2, 43, 38, 37, 25, 50, 48, 43, 36, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 80, 127, 12, 0, 12, 0, 4, 2, 7, 100, 100, 100, 47, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_70 = { // "Maracas   "
    { { 'M',  'a',  'r',  'a',  'c',  'a',  's',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 32, 11, 3, 1, 0, 73, 0, 7, 8, 1, 0, 2, 6, 10, 100, 53, 41, 42, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 127, 12, 0, 12, 0, 4, 0, 3, 12, 18, 100, 90, 99, 39, 22 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_71 = { // "SHiWhistle"
    { { 'S',  'H',  'i',  'W',  'h',  'i',  's',  't',  'l',  'e' }, 0, 0, 0b0011, 1 },
    { { 75, 6, 3, 1, 0, 0, 0, 7, 7, 0, 0, 1, 1, 2, 100, 58, 52, 50, 45, 46, 86, 99, 0, 61, 29, 3, 0, 7, 10, 66, 0, 0, 9, 15, 18, 17, 53, 44, 89, 84, 93, 48, 78, 27, 12, 91, 12, 0, 4, 1, 37, 29, 30, 5, 100, 100, 16, 0 },
      { 74, 61, 3, 1, 0, 0, 0, 7, 7, 0, 0, 3, 3, 5, 100, 57, 50, 47, 42, 43, 87, 98, 0, 68, 26, 3, 0, 7, 8, 56, 0, 0, 0, 15, 18, 17, 53, 44, 89, 84, 93, 48, 78, 27, 12, 91, 12, 0, 4, 1, 37, 29, 30, 5, 100, 100, 16, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_72 = { // "LLoWhistle"
    { { 'L',  'L',  'o',  'W',  'h',  'i',  's',  't',  'l',  'e' }, 0, 0, 0b0011, 1 },
    { { 74, 6, 3, 1, 0, 0, 0, 7, 7, 0, 0, 1, 1, 2, 100, 58, 52, 50, 45, 46, 86, 99, 0, 61, 29, 3, 0, 7, 10, 66, 0, 0, 9, 15, 18, 17, 53, 44, 89, 84, 93, 48, 80, 27, 12, 91, 12, 0, 4, 1, 52, 20, 1, 2, 100, 100, 0, 0 },
      { 73, 61, 3, 1, 0, 0, 0, 7, 7, 0, 0, 3, 3, 5, 100, 57, 50, 47, 42, 43, 87, 98, 0, 68, 26, 3, 0, 7, 8, 56, 0, 0, 0, 15, 18, 17, 53, 44, 89, 84, 93, 48, 80, 27, 12, 91, 12, 0, 4, 1, 52, 20, 1, 2, 100, 100, 0, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_73 = { // "ShortGuiro"
    { { 'S',  'h',  'o',  'r',  't',  'G',  'u',  'i',  'r',  'o' }, 5, 0, 0b0011, 1 },
    { { 65, 8, 3, 1, 0, 82, 0, 7, 4, 0, 0, 27, 52, 60, 100, 100, 0, 0, 0, 5, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 80, 127, 12, 0, 12, 0, 3, 0, 27, 0, 65, 80, 100, 82, 0, 0 },
      { 70, 8, 3, 1, 0, 82, 0, 7, 4, 0, 0, 27, 52, 60, 100, 100, 0, 0, 0, 5, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 80, 127, 12, 0, 12, 0, 3, 0, 27, 0, 65, 80, 100, 82, 0, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_74 = { // "LongGuiro "
    { { 'L',  'o',  'n',  'g',  'G',  'u',  'i',  'r',  'o',  ' ' }, 5, 0, 0b0011, 1 },
    { { 58, 8, 3, 1, 0, 82, 0, 7, 4, 0, 0, 35, 0, 60, 100, 0, 100, 0, 0, 5, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 127, 12, 0, 12, 0, 3, 0, 6, 43, 0, 80, 100, 36, 100, 0 },
      { 64, 8, 3, 1, 0, 82, 0, 7, 4, 0, 0, 35, 0, 60, 100, 0, 100, 0, 0, 5, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 80, 127, 12, 0, 12, 0, 3, 0, 6, 43, 0, 80, 100, 36, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_75 = { // "Claves    "
    { { 'C',  'l',  'a',  'v',  'e',  's',  ' ',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 36, 0, 3, 1, 0, 71, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_76 = { // "HWoodblock"
    { { 'H',  'W',  'o',  'o',  'd',  'b',  'l',  'o',  'c',  'k' }, 5, 0, 0b0011, 1 },
    { { 59, 75, 3, 1, 0, 12, 0, 7, 3, 0, 0, 3, 3, 8, 6, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 80, 127, 12, 0, 12, 0, 0, 0, 100, 100, 100, 100, 100, 100, 100, 100 },
      { 37, 75, 3, 1, 0, 9, 0, 7, 3, 0, 0, 3, 2, 8, 4, 49, 48, 49, 50, 47, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 80, 127, 12, 0, 12, 0, 0, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_77 = { // "LWoodblock"
    { { 'L',  'W',  'o',  'o',  'd',  'b',  'l',  'o',  'c',  'k' }, 5, 5, 0b0011, 1 },
    { { 52, 75, 3, 1, 0, 12, 0, 7, 3, 0, 0, 3, 3, 8, 6, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 127, 12, 0, 12, 0, 0, 0, 100, 100, 100, 100, 100, 100, 100, 100 },
      { 30, 75, 3, 1, 0, 9, 0, 7, 3, 0, 0, 3, 2, 8, 4, 49, 48, 49, 50, 47, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 80, 127, 12, 0, 12, 0, 0, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_78 = { // "MuteCuica "
    { { 'M',  'u',  't',  'e',  'C',  'u',  'i',  'c',  'a',  ' ' }, 2, 0, 0b0011, 1 },
    { { 41, 0, 6, 0, 1, 22, 100, 7, 9, 0, 0, 19, 29, 34, 0, 60, 47, 61, 31, 11, 100, 100, 0, 73, 22, 3, 64, 0, 100, 0, 0, 0, 10, 72, 36, 38, 100, 78, 76, 63, 0, 80, 90, 64, 12, 63, 12, 0, 0, 0, 42, 8, 6, 12, 100, 87, 37, 0 },
      { 38, 55, 6, 0, 0, 0, 100, 7, 8, 0, 0, 0, 46, 0, 0, 28, 74, 32, 31, 28, 100, 100, 0, 73, 10, 3, 64, 0, 100, 0, 0, 0, 35, 46, 36, 38, 100, 80, 80, 63, 0, 34, 90, 64, 12, 63, 12, 0, 0, 6, 42, 27, 30, 0, 79, 100, 35, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_79 = { // "OpenCuica "
    { { 'O',  'p',  'e',  'n',  'C',  'u',  'i',  'c',  'a',  ' ' }, 2, 0, 0b0011, 0 },
    { { 36, 42, 3, 1, 0, 45, 0, 7, 0, 0, 0, 28, 20, 56, 28, 0, 36, 47, 53, 0, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 80, 43, 11, 91, 12, 1, 0, 0, 62, 69, 0, 60, 100, 0, 0, 0 },
      { 36, 43, 3, 1, 0, 0, 80, 7, 10, 1, 3, 26, 21, 63, 28, 24, 40, 48, 61, 0, 66, 0, 35, 67, 21, 9, 27, 10, 30, 20, 0, 0, 49, 50, 71, 80, 88, 31, 49, 57, 18, 58, 80, 91, 12, 27, 12, 3, 0, 8, 1, 43, 57, 60, 62, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_80 = { // "MTriangle "
    { { 'M',  'T',  'r',  'i',  'a',  'n',  'g',  'l',  'e',  ' ' }, 2, 0, 0b0001, 0 },
    { { 84, 55, 3, 1, 0, 34, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 90, 98, 12, 22, 12, 0, 0, 0, 22, 54, 43, 44, 84, 76, 37, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_81 = { // "OTriangle "
    { { 'O',  'T',  'r',  'i',  'a',  'n',  'g',  'l',  'e',  ' ' }, 2, 0, 0b0011, 0 },
    { { 84, 55, 3, 1, 0, 34, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 90, 98, 12, 22, 12, 0, 0, 0, 22, 54, 43, 44, 100, 92, 53, 0 },
      { 84, 50, 3, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 24, 0, 50, 50, 50, 50, 50, 64, 7, 39, 61, 12, 3, 0, 7, 18, 0, 0, 0, 22, 25, 25, 80, 93, 25, 51, 53, 0, 72, 90, 98, 12, 22, 12, 0, 0, 1, 23, 33, 72, 44, 100, 94, 79, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_82 = { // "Shaker    "
    { { 'S',  'h',  'a',  'k',  'e',  'r',  ' ',  ' ',  ' ',  ' ' }, 5, 0, 0b0001, 1 },
    { { 36, 50, 3, 1, 0, 73, 0, 7, 0, 0, 0, 2, 6, 12, 100, 50, 50, 50, 50, 50, 0, 0, 0, 100, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 100, 127, 12, 0, 12, 0, 3, 1, 19, 22, 43, 51, 76, 100, 93, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_83 = { // "JingleBell"
    { { 'J',  'i',  'n',  'g',  'l',  'e',  'B',  'e',  'l',  'l' }, 5, 0, 0b0011, 1 },
    { { 37, 50, 3, 1, 0, 58, 0, 7, 3, 2, 0, 2, 6, 12, 100, 64, 57, 52, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 80, 127, 12, 0, 12, 0, 1, 1, 33, 38, 33, 32, 100, 92, 50, 0 },
      { 37, 50, 3, 1, 0, 59, 0, 7, 4, 2, 0, 3, 12, 28, 100, 64, 55, 51, 50, 50, 0, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 80, 127, 12, 0, 12, 0, 3, 0, 66, 54, 82, 51, 100, 53, 35, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_84 = { // "Belltree  "
    { { 'B',  'e',  'l',  'l',  't',  'r',  'e',  'e',  ' ',  ' ' }, 5, 0, 0b0011, 0 },
    { { 56, 50, 3, 1, 0, 122, 0, 7, 6, 0, 0, 6, 17, 55, 0, 100, 57, 28, 0, 0, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 91, 7, 15, 5, 0, 1, 38, 13, 35, 0, 0, 80, 68, 48, 1 },
      { 54, 50, 3, 1, 0, 51, 0, 7, 4, 0, 0, 4, 22, 54, 4, 100, 58, 31, 24, 23, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 91, 7, 15, 5, 0, 1, 0, 22, 45, 65, 71, 69, 100, 87, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_85 = { // "Castanets "
    { { 'C',  'a',  's',  't',  'a',  'n',  'e',  't',  's',  ' ' }, 2, 0, 0b0001, 1 },
    { { 43, 50, 3, 1, 0, 63, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 100 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_86 = { // "MuteSurdo "
    { { 'M',  'u',  't',  'e',  'S',  'u',  'r',  'd',  'o',  ' ' }, 5, 0, 0b0011, 1 },
    { { 26, 100, 3, 1, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 80, 127, 12, 0, 12, 0, 0, 0, 100, 100, 100, 100, 100, 100, 100, 0 },
      { 40, 50, 3, 1, 0, 20, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 80, 127, 12, 0, 12, 0, 4, 0, 100, 100, 100, 100, 100, 100, 100, 0 } }
};

const static mt32_timbre_parameter mt32_rhythm_timbre_87 = { // "OpenSurdo "
    { { 'O',  'p',  'e',  'n',  'S',  'u',  'r',  'd',  'o',  ' ' }, 5, 0, 0b0001, 0 },
    { { 24, 24, 3, 1, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 80, 91, 12, 27, 12, 0, 0, 0, 5, 5, 6, 84, 59, 94, 95, 100 } }
};

const static mt32_timbre_parameter *mt32_timbres[256] = {
    &mt32_timbre_0, // "AcouPiano "
    &mt32_timbre_1, // "BrightPian"
    &mt32_timbre_2, // "ElecPiano "
    &mt32_timbre_3, // "Honkytonk "
    &mt32_timbre_4, // "Rhodes    "
    &mt32_timbre_5, // "Chorused  "
    &mt32_timbre_6, // "Harpsichrd"
    &mt32_timbre_7, // "Clavinet  "
    &mt32_timbre_8, // "Celesta   "
    &mt32_timbre_9, // "Glock     "
    &mt32_timbre_10, // "MusicBox  "
    &mt32_timbre_11, // "Vibraphone"
    &mt32_timbre_12, // "Marimba   "
    &mt32_timbre_13, // "Xylophone "
    &mt32_timbre_14, // "Tubular   "
    &mt32_timbre_15, // "Dulcimer  "
    &mt32_timbre_16, // "HammondOrg"
    &mt32_timbre_17, // "PercOrgan "
    &mt32_timbre_18, // "RockOrgan "
    &mt32_timbre_19, // "ChurchOrg "
    &mt32_timbre_20, // "ReedOrgan "
    &mt32_timbre_21, // "Accordion "
    &mt32_timbre_22, // "Harmonica "
    &mt32_timbre_23, // "TangoAcc  "
    &mt32_timbre_24, // "NylonGtr  "
    &mt32_timbre_25, // "SteelGtr  "
    &mt32_timbre_26, // "JazzGuitar"
    &mt32_timbre_27, // "CleanGtr  "
    &mt32_timbre_28, // "MutedGtr  "
    &mt32_timbre_29, // "Overdriven"
    &mt32_timbre_30, // "Distortion"
    &mt32_timbre_31, // "GuitarHrmn"
    &mt32_timbre_32, // "AcouBass  "
    &mt32_timbre_33, // "FingerBass"
    &mt32_timbre_34, // "PickBass  "
    &mt32_timbre_35, // "Fretless  "
    &mt32_timbre_36, // "SlapBass1 "
    &mt32_timbre_37, // "SlapBass2 "
    &mt32_timbre_38, // "SynthBass1"
    &mt32_timbre_39, // "SynthBass2"
    &mt32_timbre_40, // "Violin    "
    &mt32_timbre_41, // "Viola     "
    &mt32_timbre_42, // "Cello     "
    &mt32_timbre_43, // "Contrabass"
    &mt32_timbre_44, // "TremoloStr"
    &mt32_timbre_45, // "Pizzicato "
    &mt32_timbre_46, // "OrchHarp  "
    &mt32_timbre_47, // "Timpani   "
    &mt32_timbre_48, // "StringEns1"
    &mt32_timbre_49, // "StringEns2"
    &mt32_timbre_50, // "SynString1"
    &mt32_timbre_51, // "SynString2"
    &mt32_timbre_52, // "ChoirAahs "
    &mt32_timbre_53, // "VoiceOohs "
    &mt32_timbre_54, // "SynthVoice"
    &mt32_timbre_55, // "OrcheHit  "
    &mt32_timbre_56, // "Trumpet   "
    &mt32_timbre_57, // "Trombone  "
    &mt32_timbre_58, // "Tuba      "
    &mt32_timbre_59, // "MutedTrmpt"
    &mt32_timbre_60, // "FrenchHorn"
    &mt32_timbre_61, // "BrassSectn"
    &mt32_timbre_62, // "SynBrass1 "
    &mt32_timbre_63, // "SynBrass2 "
    &mt32_timbre_64, // "SopranoSax"
    &mt32_timbre_65, // "AltoSax   "
    &mt32_timbre_66, // "TenorSax  "
    &mt32_timbre_67, // "BaritonSax"
    &mt32_timbre_68, // "Oboe      "
    &mt32_timbre_69, // "EnglishHrn"
    &mt32_timbre_70, // "Bassoon   "
    &mt32_timbre_71, // "Clarinet  "
    &mt32_timbre_72, // "Piccolo   "
    &mt32_timbre_73, // "Flute     "
    &mt32_timbre_74, // "Recorder  "
    &mt32_timbre_75, // "PanFlute  "
    &mt32_timbre_76, // "BottleBlow"
    &mt32_timbre_77, // "Shakuhachi"
    &mt32_timbre_78, // "Whistle   "
    &mt32_timbre_79, // "Ocarina   "
    &mt32_timbre_80, // "Square    "
    &mt32_timbre_81, // "Sawtooth  "
    &mt32_timbre_82, // "Calliope  "
    &mt32_timbre_83, // "ChiffLead "
    &mt32_timbre_84, // "Charang   "
    &mt32_timbre_85, // "Voice     "
    &mt32_timbre_86, // "Fifths    "
    &mt32_timbre_87, // "BassLead  "
    &mt32_timbre_88, // "NewAge    "
    &mt32_timbre_89, // "WarmPad   "
    &mt32_timbre_90, // "Polysynth "
    &mt32_timbre_91, // "Choir     "
    &mt32_timbre_92, // "Bowed     "
    &mt32_timbre_93, // "Metallic  "
    &mt32_timbre_94, // "Halo      "
    &mt32_timbre_95, // "Sweep     "
    &mt32_timbre_96, // "Rain      "
    &mt32_timbre_97, // "Soundtrack"
    &mt32_timbre_98, // "Crystal   "
    &mt32_timbre_99, // "Atmosphere"
    &mt32_timbre_100, // "Brightness"
    &mt32_timbre_101, // "Goblins   "
    &mt32_timbre_102, // "Echoes    "
    &mt32_timbre_103, // "Sci-fi    "
    &mt32_timbre_104, // "Sitar     "
    &mt32_timbre_105, // "Banjo     "
    &mt32_timbre_106, // "Shamisen  "
    &mt32_timbre_107, // "Koto      "
    &mt32_timbre_108, // "Kalimba   "
    &mt32_timbre_109, // "Bagpipe   "
    &mt32_timbre_110, // "Fiddle    "
    &mt32_timbre_111, // "Shanai    "
    &mt32_timbre_112, // "TinkleBell"
    &mt32_timbre_113, // "Agogo     "
    &mt32_timbre_114, // "SteelDrums"
    &mt32_timbre_115, // "Woodblock "
    &mt32_timbre_116, // "TaikoDrum "
    &mt32_timbre_117, // "MelodicTom"
    &mt32_timbre_118, // "SynthDrum "
    &mt32_timbre_119, // "RevCymbal "
    &mt32_timbre_120, // "GuitarFret"
    &mt32_timbre_121, // "BreathNois"
    &mt32_timbre_122, // "Seashore  "
    &mt32_timbre_123, // "BirdTweet "
    &mt32_timbre_124, // "Telephone "
    &mt32_timbre_125, // "Helicopter"
    &mt32_timbre_126, // "Applause  "
    &mt32_timbre_127, // "Gunshot   "
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    &mt32_rhythm_timbre_27, // "OFF       "
    &mt32_rhythm_timbre_27, // "OFF       "
    &mt32_rhythm_timbre_29, // "ScrtchPush"
    &mt32_rhythm_timbre_30, // "ScrtchPull"
    &mt32_rhythm_timbre_31, // "Sticks    "
    &mt32_rhythm_timbre_32, // "SquareClk "
    &mt32_rhythm_timbre_33, // "MetroClick"
    &mt32_rhythm_timbre_34, // "Metronome "
    &mt32_rhythm_timbre_35, // "KickDrum2 "
    &mt32_rhythm_timbre_36, // "KickDrum1 "
    &mt32_rhythm_timbre_37, // "SideStick "
    &mt32_rhythm_timbre_38, // "SnareDrum1"
    &mt32_rhythm_timbre_39, // "HandClap  "
    &mt32_rhythm_timbre_40, // "SnareDrum2"
    &mt32_rhythm_timbre_41, // "LowTom2   "
    &mt32_rhythm_timbre_42, // "ClosdHiHat"
    &mt32_rhythm_timbre_43, // "LowTom1   "
    &mt32_rhythm_timbre_44, // "PedalHiHat"
    &mt32_rhythm_timbre_45, // "MidTom2   "
    &mt32_rhythm_timbre_46, // "OpenHiHat "
    &mt32_rhythm_timbre_47, // "MidTom1   "
    &mt32_rhythm_timbre_48, // "HighTom2  "
    &mt32_rhythm_timbre_49, // "CrashCym  "
    &mt32_rhythm_timbre_50, // "HighTom1  "
    &mt32_rhythm_timbre_51, // "RideCymbal"
    &mt32_rhythm_timbre_52, // "ChineseCym"
    &mt32_rhythm_timbre_53, // "RideBell  "
    &mt32_rhythm_timbre_54, // "Tambourine"
    &mt32_rhythm_timbre_55, // "SplashCym "
    &mt32_rhythm_timbre_56, // "Cowbell   "
    &mt32_rhythm_timbre_57, // "CrashCym2 "
    &mt32_rhythm_timbre_58, // "VibraSlap "
    &mt32_rhythm_timbre_59, // "RideCym2  "
    &mt32_rhythm_timbre_60, // "HighBongo "
    &mt32_rhythm_timbre_61, // "LowBongo  "
    &mt32_rhythm_timbre_62, // "MutHiConga"
    &mt32_rhythm_timbre_63, // "OpnHiConga"
    &mt32_rhythm_timbre_64, // "LowConga  "
    &mt32_rhythm_timbre_65, // "HiTimbale "
    &mt32_rhythm_timbre_66, // "LowTimbale"
    &mt32_rhythm_timbre_67, // "HighAgogo "
    &mt32_rhythm_timbre_68, // "LowAgogo  "
    &mt32_rhythm_timbre_69, // "Cabasa    "
    &mt32_rhythm_timbre_70, // "Maracas   "
    &mt32_rhythm_timbre_71, // "SHiWhistle"
    &mt32_rhythm_timbre_72, // "LLoWhistle"
    &mt32_rhythm_timbre_73, // "ShortGuiro"
    &mt32_rhythm_timbre_74, // "LongGuiro "
    &mt32_rhythm_timbre_75, // "Claves    "
    &mt32_rhythm_timbre_76, // "HWoodblock"
    &mt32_rhythm_timbre_77, // "LWoodblock"
    &mt32_rhythm_timbre_78, // "MuteCuica "
    &mt32_rhythm_timbre_79, // "OpenCuica "
    &mt32_rhythm_timbre_80, // "MTriangle "
    &mt32_rhythm_timbre_81, // "OTriangle "
    &mt32_rhythm_timbre_82, // "Shaker    "
    &mt32_rhythm_timbre_83, // "JingleBell"
    &mt32_rhythm_timbre_84, // "Belltree  "
    &mt32_rhythm_timbre_85, // "Castanets "
    &mt32_rhythm_timbre_86, // "MuteSurdo "
    &mt32_rhythm_timbre_87, // "OpenSurdo "
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
};


static uint8_t mt32_calculate_checksum(const uint8_t *data, unsigned int size)
{
    unsigned int index;
    int checksum;

    checksum = 0;
    for (index = 0; index < size; index++)
    {
        checksum += data[index];
    }

    return (-checksum) & 0x7f;
}

static int mt32_prepare_sysex(uint8_t *buffer, uint8_t addr_a, uint8_t addr_b, uint8_t addr_c, const uint8_t *data, unsigned int size, unsigned int wait)
{
    int len;

    buffer[0] = 0xf0;

    // Roland MT-32 header
    buffer[1] = 0x41;
    buffer[2] = 0x10;
    buffer[3] = 0x16;
    buffer[4] = 0x12;

    // address
    buffer[5] = addr_a;
    buffer[6] = addr_b;
    buffer[7] = addr_c;

    // data
    memcpy(buffer + 8, data, size);

    // checksum
    buffer[8 + size] = mt32_calculate_checksum(buffer + 5, size + 3);

    // EOX terminator
    buffer[9 + size] = 0xf7;

    len = 10 + size;

    if (wait)
    {
        if (wait > 1023) wait = 1023;

        buffer[len] = wait & 0x7f;
        len++;

        if (wait >> 7)
        {
            buffer[len] = wait >> 7;
            len++;
        }
    }

    return len;
}

static void mt32_initialize_gm(void)
{
    int buf_len, index;
    uint8_t buffer[440];

    buf_len = 0;

    // addr: 7f 00 00 - All parameters Reset
    buf_len += mt32_prepare_sysex(buffer + buf_len, 0x7f, 0x00, 0x00, mt32_part_chans, 1, 290); // reset all internal parameters/patches

    // addr: 10 00 0d - System area - MIDI CHANNEL
    buf_len += mt32_prepare_sysex(buffer + buf_len, 0x10, 0x00, 0x0d, mt32_part_chans, 9, 0); // init part/channel assignments

    // addr: 10 00 04 - System area - PARTIAL RESERVE
    buf_len += mt32_prepare_sysex(buffer + buf_len, 0x10, 0x00, 0x04, mt32_part_rsv, 9, 145); // send adjusted partial reserve table to avoid dropout on high channel #s

    // addr: 10 00 01 - System area - REVERB
    buf_len += mt32_prepare_sysex(buffer + buf_len, 0x10, 0x00, 0x01, mt32_init_reverb, 3, 30);

    // addr: 03 01 10 - Rhythm Setup Temporary Area
    buf_len += mt32_prepare_sysex(buffer + buf_len, 0x03, 0x01, 0x10, (const uint8_t *)mt32_rhythm_setup, 32 * sizeof(mt32_rhythm_setup[0]), 0);

    // addr: 03 02 10 - Rhythm Setup Temporary Area + 128 bytes
    buf_len += mt32_prepare_sysex(buffer + buf_len, 0x03, 0x02, 0x10, (const uint8_t *)&(mt32_rhythm_setup[32]), 32 * sizeof(mt32_rhythm_setup[0]), 0);

    // addr: 03 03 10 - Rhythm Setup Temporary Area + 256 bytes
    buf_len += mt32_prepare_sysex(buffer + buf_len, 0x03, 0x03, 0x10, (const uint8_t *)&(mt32_rhythm_setup[64]), (MT32_NUM_DRUMS - 64) * sizeof(mt32_rhythm_setup[0]), 0);

    buffer[buf_len] = 0xff;

    send_initial_sysex_events(buffer);

    mt32_timbre_event = 0;

    for (index = 0; index < MT32_NUM_TIMBS; index++)
    {
        mt32_timb_data[index].attribs = 0b00000000;
    }

    for (index = 0; index < 256; index++)
    {
        mt32_timbre_index[index] = -1;
    }
}

static void mt32_shutdown_gm(void)
{
    int buf_len;
    uint8_t buffer[36];

    buf_len = 0;

    // addr: 7f 00 00 - All parameters Reset
    buf_len += mt32_prepare_sysex(buffer + buf_len, 0x7f, 0x00, 0x00, mt32_part_chans, 1, 290); // reset all internal parameters/patches

    // addr: 10 00 0d - System area - MIDI CHANNEL
    buf_len += mt32_prepare_sysex(buffer + buf_len, 0x10, 0x00, 0x0d, mt32_part_chans, 9, 0); // init part/channel assignments

    buffer[buf_len] = 0xff;

    send_initial_sysex_events(buffer);
}

static int mt32_prepare_timbre(uint8_t *buffer, uint8_t bank, uint8_t num)
{
    int bank_index, local_index, index, num_partials, buf_len;
    uint32_t min_hist, addr;
    uint8_t temp_buf[5];

    bank_index = num;
    if (bank == 0x7f) bank_index += 128;

    local_index = mt32_timbre_index[bank_index]; // Get global timbre's local index 0-63
    if (local_index != -1)
    {
        // timbre is resident, update it's timestamp
        mt32_timb_data[local_index].hist = mt32_timbre_event;
        return 0;
    }

    // timbre not resident

    if (mt32_timbres[bank_index] == NULL) return 0;

    // look for an empty timbre slot
    for (index = 0; index < MT32_NUM_TIMBS; index++)
    {
        if (!(mt32_timb_data[index].attribs & 0b10000000))
        {
            local_index = index;
            break;
        }
    }

    if (local_index == -1)
    {
        // no free timbre slots, replace least-recently-used unprotected timbre
        min_hist = 0xffffffff;
        for (index = MT32_NUM_TIMBS; index >= 0; index--)
        {
            if (mt32_timb_data[index].attribs & 0b1000000) continue; // (timbre protected)
            if (mt32_timb_data[index].hist <= min_hist)
            {
                min_hist = mt32_timb_data[index].hist;
                local_index = index;
            }
        }

        if (local_index == -1) return 0; // if no unprotected timbre slots, exit without installing new timbre

        for (index = 0; index < 256; index++)
        {
            if (mt32_timbre_index[index] == local_index)
            {
                mt32_timbre_index[index] = -1;
                break;
            }
        }
    }

    mt32_timbre_index[bank_index] = local_index;

    // found free/LRU timbre, update its timestamp and replace it
    mt32_timb_data[local_index].hist = mt32_timbre_event;
    mt32_timb_data[local_index].num = num; // record global # in slot
    mt32_timb_data[local_index].bank = bank;
    mt32_timb_data[local_index].attribs = 0b10000000; // mark timbre "in use/unprotected"

    num_partials = 0;
    for (index = 3; index >= 0; index--)
    {
        if (mt32_timbres[bank_index]->common_parameter.partial_mute & (1 << index))
        {
            num_partials = index + 1;
            break;
        }
    }

    buf_len = 0;

    // addr: 08 00 00 - 08 7e 00 - Timbre memory
    buf_len += mt32_prepare_sysex(buffer + buf_len, 0x08, local_index * 2, 0x00, (const uint8_t *)mt32_timbres[bank_index], sizeof(mt32_timbres[0]->common_parameter) + num_partials * sizeof(mt32_timbres[0]->partial_parameter[0]), 0);

    if (bank == 0x7f)
    {
        temp_buf[0] = local_index;  // timbre: 0-93/127 (i01-i64,r01-r30/r63,OFF)
        temp_buf[1] = 100;          // output level: 0-100

        addr = 0x90 + 4 * (num - 24);

        // addr: 03 01 10 - 03 xx yy - Rhythm Setup Temporary Area
        buf_len += mt32_prepare_sysex(buffer + buf_len, 0x03, addr >> 7, addr & 0x7f, temp_buf, 2, 0);
    }
    else
    {
        temp_buf[0] = 2;            // timbre group: 0-3 (a, b, i, r)
        temp_buf[1] = local_index;  // timbre number: 0-63
        temp_buf[2] = 24;           // key shift: 0-48 (-24 - 24)
        temp_buf[3] = 50;           // fine tune: 0-100 (-50 - 50)
        temp_buf[4] = 2;            // bender range: 0-24

        addr = 8 * num;

        // addr: 05 00 00 - 05 xx yy - Patch Memory
        buf_len += mt32_prepare_sysex(buffer + buf_len, 0x05, addr >> 7, addr & 0x7f, temp_buf, 5, 0);
    }

    return buf_len;
}

static void mt32_init_vars_and_install_timbres(unsigned int number_of_tracks, const midi_track_info *midi_tracks)
{
    unsigned int index, varlen;
    int lasttracknum, num_timbres, bank_index, channel_num, buf_len;
    midi_track_info track, *tracks, *curtrack;
    int8_t programs[16];
    uint8_t used_timbres[256];
    uint8_t buffer[17348];

    // initialize global variables

    for (index = 0; index < MT32_NUM_DRUMS; index++)
    {
        mt32_drum_patch_pan[index] = -1;
    }

    mt32_drum_channel_pan = 0;

    for (index = 0; index < MT32_NUM_CHANS; index++)
    {
        mt32_channels[index].expression = -1;
        mt32_channels[index].modulation_wheel = -1;
        mt32_channels[index].volume = -1;
        mt32_channels[index].pan = -1;
        mt32_channels[index].sustain = -1;
        mt32_channels[index].program = -1;
        mt32_channels[index].pitch_wheel = -1;
        mt32_channels[index].pitch_bend_sensitivity = 2;

        mt32_gm_channels[index].active_notes = 0;
        mt32_gm_channels[index].modulation_wheel = 0;
        mt32_gm_channels[index].volume = 100;
        mt32_gm_channels[index].mt32_pan = 64;
        mt32_gm_channels[index].expression = 127;
        mt32_gm_channels[index].sustain = 0;
        mt32_gm_channels[index].program = 0;
        mt32_gm_channels[index].pitch_wheel = 0x2000;
        mt32_gm_channels[index].pitch_bend_sensitivity = 2;
        mt32_gm_channels[index].note_hist = 0;
        mt32_gm_channels[index].mt32_channel = (index >= 1 && index <= 9) ? index : 0;
        mt32_gm_channels[index].rpn_flags = 0;
    }

    mt32_note_event = 0;

    for (index = 0; index < MT32_NUM_CHANS; index++)
    {
        mt32_chan_timbs[index] = -1;
    }

    memset(channel_notes, 0, 128*MIDI_CHANNELS*sizeof(int));

    // prepare timbres

    if (number_of_tracks == 1)
    {
        track = midi_tracks[0];
        tracks = &track;
    }
    else
    {
        tracks = (midi_track_info *)malloc(number_of_tracks * sizeof(midi_tracks));
        if (tracks == NULL) return;

        memcpy(tracks, midi_tracks, number_of_tracks * sizeof(midi_tracks));
    }

    // prepare tracks
    for (index = 0; index < number_of_tracks; index++)
    {
        curtrack = &(tracks[index]);

        // read delta
        curtrack->delta = read_varlen(curtrack);
    }

    lasttracknum = -1;
    num_timbres = 0;
    memset(used_timbres, 0, 256);

    for (index = 0; index < 16; index++)
    {
        programs[index] = -1;
    }
    programs[9] = 0;

    while (num_timbres < 64)
    {
        curtrack = NULL;

        if ((lasttracknum >= 0) && (!tracks[lasttracknum].eot) && (tracks[lasttracknum].delta == 0))
        {
            curtrack = &(tracks[lasttracknum]);
        }
        else
        {
            unsigned int mindelta;
            mindelta = UINT_MAX;
            for (index = 0; index < number_of_tracks; index++)
            {
                if ((!tracks[index].eot) && (tracks[index].delta < mindelta))
                {
                    mindelta = tracks[index].delta;
                    curtrack = &(tracks[index]);
                    lasttracknum = index;
                }
            }
        }

        if (curtrack == NULL) break;

        // update deltas
        if (curtrack->delta != 0)
        for (index = 0; index < number_of_tracks; index++)
        {
            if ((!tracks[index].eot) && (index != lasttracknum))
            {
                tracks[index].delta -= curtrack->delta;
            }
        }

        if (*curtrack->ptr & 0x80)
        {
            curtrack->event_status = *curtrack->ptr;
            curtrack->ptr += 1;
            curtrack->len -= 1;
        }

        switch (curtrack->event_status >> 4)
        {
            case MIDI_STATUS_NOTE_OFF:
            case MIDI_STATUS_NOTE_ON:
            case MIDI_STATUS_AFTERTOUCH:
            case MIDI_STATUS_CONTROLLER:
            case MIDI_STATUS_PITCH_WHEEL:
                if (curtrack->len >= 2)
                {
                    channel_num = curtrack->event_status & 0x0f;
                    if (((curtrack->event_status >> 4) == MIDI_STATUS_NOTE_ON) && (curtrack->ptr[1] != 0) && (programs[channel_num] >= 0))
                    {
                        bank_index = (channel_num == 9) ? (128 + curtrack->ptr[0]) : programs[channel_num];
                        if (mt32_timbres[bank_index] != NULL)
                        {
                            if (used_timbres[bank_index] == 0)
                            {
                                used_timbres[bank_index] = 1;
                                num_timbres++;
                            }
                        }
                    }
                    curtrack->ptr += 2;
                    curtrack->len -= 2;
                }
                else
                {
                    curtrack->len = 0;
                    curtrack->eot = 1;
                }

                break;

            case MIDI_STATUS_PROG_CHANGE:
            case MIDI_STATUS_PRESSURE:
                if (curtrack->len >= 1)
                {
                    channel_num = curtrack->event_status & 0x0f;
                    if (((curtrack->event_status >> 4) == MIDI_STATUS_PROG_CHANGE) && (channel_num != 9))
                    {
                        programs[channel_num] = curtrack->ptr[0];
                    }
                    curtrack->ptr += 1;
                    curtrack->len -= 1;
                }
                else
                {
                    curtrack->len = 0;
                    curtrack->eot = 1;
                }
                break;

            case MIDI_STATUS_SYSEX:
                if (curtrack->event_status == 0xff) // meta events
                {
                    if (curtrack->len >= 2)
                    {
                        if (curtrack->ptr[0] == 0x2f) // end of track
                        {
                            curtrack->len = 0;
                            curtrack->eot = 1;
                        }
                        else
                        {
                            // read length and skip event
                            curtrack->ptr += 1;
                            curtrack->len -= 1;
                            varlen = read_varlen(curtrack);
                            if (varlen <= curtrack->len)
                            {
                                curtrack->ptr += varlen;
                                curtrack->len -= varlen;
                            }
                            else
                            {
                                curtrack->len = 0;
                                curtrack->eot = 1;
                            }
                        }
                    }
                    else
                    {
                        curtrack->len = 0;
                        curtrack->eot = 1;
                    }
                }
                else if ((curtrack->event_status == 0xf0) || (curtrack->event_status == 0xf7)) // sysex
                {
                    varlen = read_varlen(curtrack);
                    if (varlen <= curtrack->len)
                    {
                        curtrack->ptr += varlen;
                        curtrack->len -= varlen;
                    }
                    else
                    {
                        curtrack->len = 0;
                        curtrack->eot = 1;
                    }
                }
                else
                {
                    curtrack->len = 0;
                    curtrack->eot = 1;
                }
                break;

            default:
                curtrack->len = 0;
                curtrack->eot = 1;
                break;
        }

        // read delta
        curtrack->delta = read_varlen(curtrack);
    }

    if (number_of_tracks != 1)
    {
        free(tracks);
    }

    if (num_timbres == 0) return;

    if (mt32_timbre_event == 0xffffffff)
    {
        mt32_timbre_event = 1;
        for (index = 0; index < MT32_NUM_TIMBS; index++)
        {
            mt32_timb_data[index].hist = 0;
        }
    }
    else
    {
        mt32_timbre_event++;
    }

    buf_len = 0;

    for (index = 0; index < 128; index++)
    {
        if (used_timbres[index])
        {
            buf_len += mt32_prepare_timbre(buffer + buf_len, 0, index);
        }
        if (used_timbres[index + 128])
        {
            buf_len += mt32_prepare_timbre(buffer + buf_len, 0x7f, index);
        }
    }

    if (buf_len)
    {
        buffer[buf_len] = 0xff;

        send_initial_sysex_events(buffer);
    }
}

static int mt32_add_pitch_bend_sensitivity(preprocess_state *state, unsigned int mt32_channel, uint8_t pitch_bend_sensitivity)
{
    int retval;

    retval = add_midi_event(state, 0xb0 | mt32_channel, 100, 0, NULL, 0); // RPN low
    if (retval) return retval;
    retval = add_midi_event(state, 0xb0 | mt32_channel, 101, 0, NULL, 0); // RPN high
    if (retval) return retval;
    return add_midi_event(state, 0xb0 | mt32_channel, 6, pitch_bend_sensitivity, NULL, 0); // data entry
}

static int mt32_change_channel_mapping(preprocess_state *state, unsigned int gm_channel)
{
    uint32_t min_value_1, min_value_2;
    int index, min_index_1, min_index_2, retval;
    unsigned int mt32_channel;

    min_value_1 = min_value_2 = 0xffffffff;
    min_index_1 = min_index_2 = -1;

    for (index = MT32_NUM_CHANS - 1; index >= 0; index--)
    {
        if (mt32_gm_channels[index].mt32_channel >= 1 && mt32_gm_channels[index].mt32_channel <= 8)
        {
            if (mt32_gm_channels[index].note_hist <= min_value_1)
            {
                min_value_1 = mt32_gm_channels[index].note_hist;
                min_index_1 = index;
            }

            if (!mt32_gm_channels[index].active_notes)
            {
                if (mt32_gm_channels[index].note_hist <= min_value_2)
                {
                    min_value_2 = mt32_gm_channels[index].note_hist;
                    min_index_2 = index;
                }
            }
        }
    }

    if (min_index_2 == -1) min_index_2 = min_index_1;

    mt32_channel = mt32_gm_channels[min_index_2].mt32_channel;
    mt32_gm_channels[min_index_2].mt32_channel = 0;
    mt32_gm_channels[gm_channel].mt32_channel = mt32_channel;

    retval = add_midi_event(state, 0xc0 | mt32_channel, mt32_gm_channels[gm_channel].program, 0, NULL, 0); // program change
    if (retval) return retval;
    retval = mt32_add_pitch_bend_sensitivity(state, mt32_channel, mt32_gm_channels[gm_channel].pitch_bend_sensitivity);
    if (retval) return retval;

    if (mt32_gm_channels[gm_channel].pitch_wheel != mt32_channels[mt32_channel].pitch_wheel)
    {
        mt32_channels[mt32_channel].pitch_wheel = mt32_gm_channels[gm_channel].pitch_wheel;

        retval = add_midi_event(state, 0xe0 | mt32_channel, mt32_channels[mt32_channel].pitch_wheel & 0x7f, mt32_channels[mt32_channel].pitch_wheel >> 7, NULL, 0); // pitch wheel
        if (retval) return retval;
    }

    if (mt32_gm_channels[gm_channel].modulation_wheel != mt32_channels[mt32_channel].modulation_wheel)
    {
        mt32_channels[mt32_channel].modulation_wheel = mt32_gm_channels[gm_channel].modulation_wheel;

        retval = add_midi_event(state, 0xb0 | mt32_channel, 1, mt32_channels[mt32_channel].modulation_wheel, NULL, 0); // controller
        if (retval) return retval;
    }

    if (mt32_gm_channels[gm_channel].volume != mt32_channels[mt32_channel].volume)
    {
        mt32_channels[mt32_channel].volume = mt32_gm_channels[gm_channel].volume;

        retval = add_midi_event(state, 0xb0 | mt32_channel, 7, mt32_channels[mt32_channel].volume, NULL, 0); // controller
        if (retval) return retval;
    }

    if (mt32_gm_channels[gm_channel].mt32_pan != mt32_channels[mt32_channel].pan)
    {
        mt32_channels[mt32_channel].pan = mt32_gm_channels[gm_channel].mt32_pan;

        retval = add_midi_event(state, 0xb0 | mt32_channel, 10, mt32_channels[mt32_channel].pan, NULL, 0); // controller
        if (retval) return retval;
    }

    if (mt32_gm_channels[gm_channel].expression != mt32_channels[mt32_channel].expression)
    {
        mt32_channels[mt32_channel].expression = mt32_gm_channels[gm_channel].expression;

        retval = add_midi_event(state, 0xb0 | mt32_channel, 11, mt32_channels[mt32_channel].expression, NULL, 0); // controller
        if (retval) return retval;
    }

    if (mt32_gm_channels[gm_channel].sustain != mt32_channels[mt32_channel].sustain)
    {
        mt32_channels[mt32_channel].sustain = mt32_gm_channels[gm_channel].sustain;

        retval = add_midi_event(state, 0xb0 | mt32_channel, 64, mt32_channels[mt32_channel].sustain, NULL, 0); // controller
        if (retval) return retval;
    }

    return 0;
}

static int mt32_add_short_event(preprocess_state *state, uint8_t status, uint8_t byte1, uint8_t byte2)
{
    unsigned int gm_channel, mt32_channel;
    int drum_index, patch_pan, retval, note_index;

    gm_channel = status & 0x0f;
    mt32_channel = mt32_gm_channels[gm_channel].mt32_channel;

    if (gm_channel == 9)
    {
        // drum channel
        switch (status >> 4)
        {
            case MIDI_STATUS_CONTROLLER:
                if (byte1 == 10) // pan
                {
                    mt32_drum_channel_pan = (((127 - byte2) * 8) / 68) - 7;
                    return 0;
                }
                else if (byte1 == 121) // reset all controllers
                {
                    mt32_drum_channel_pan = 0;
                }
                // fallthrough
            case MIDI_STATUS_NOTE_OFF:
            case MIDI_STATUS_PITCH_WHEEL:
                break;
            case MIDI_STATUS_NOTE_ON:
                if (byte2 == 0) break; // note off

                if ((byte1 < 24) || ((byte1 - 24) >= MT32_NUM_DRUMS)) return 0;

                drum_index = byte1 - 24;

                patch_pan = mt32_rhythm_setup[drum_index].panpot + mt32_drum_channel_pan;
                if (patch_pan < 0) patch_pan = 0;
                else if (patch_pan > 14) patch_pan = 14;

                if (mt32_drum_patch_pan[drum_index] != patch_pan)
                {
                    uint8_t sysex[10];

                    mt32_drum_patch_pan[drum_index] = patch_pan;

                    // Roland MT-32 header
                    sysex[0] = 0x41;
                    sysex[1] = 0x10;
                    sysex[2] = 0x16;
                    sysex[3] = 0x12;

                    // addr: 03 01 10 - 03 xx yy - Rhythm Setup Temporary Area
                    sysex[4] = 0x03;
                    sysex[5] = (0x92 + 4 * (drum_index)) >> 7;
                    sysex[6] = (0x92 + 4 * (drum_index)) & 0x7f;

                    // data
                    sysex[7] = mt32_drum_patch_pan[drum_index];

                    // checksum
                    sysex[8] = mt32_calculate_checksum(sysex + 4, 4);

                    // EOX terminator
                    sysex[9] = 0xf7;

                    retval = add_midi_event(state, 0xf0, 0, 0, sysex, 10);
                    if (retval) return retval;
                }
                break;
            default:
                return 0;
        }
    }
    else
    {
        // melodic channel
        switch (status >> 4)
        {
            case MIDI_STATUS_NOTE_OFF:
            note_off:
                if (channel_notes[gm_channel][byte1] > 0)
                {
                    channel_notes[gm_channel][byte1]--;
                    if (channel_notes[gm_channel][byte1] == 0)
                    {
                        mt32_gm_channels[gm_channel].active_notes--;
                    }
                }
                if (mt32_channel == 0) return 0;
                break;
            case MIDI_STATUS_NOTE_ON:
                if (byte2 == 0) goto note_off; // note off

                if (channel_notes[gm_channel][byte1] == 0)
                {
                    mt32_gm_channels[gm_channel].active_notes++;
                }
                channel_notes[gm_channel][byte1]++;

                mt32_gm_channels[gm_channel].note_hist = mt32_note_event;
                mt32_note_event++;

                if (mt32_channel == 0)
                {
                    retval = mt32_change_channel_mapping(state, gm_channel);
                    if (retval) return retval;

                    mt32_channel = mt32_gm_channels[gm_channel].mt32_channel;
                }
                break;
            case MIDI_STATUS_PROG_CHANGE:
                mt32_gm_channels[gm_channel].program = byte1;
                mt32_chan_timbs[gm_channel] = mt32_timbre_index[byte1];
                if (mt32_channel == 0) return 0;

                mt32_channels[mt32_channel].program = byte1;
                retval = add_midi_event(state, 0xc0 | mt32_channel, byte1, 0, NULL, 0); // program change
                if (retval) return retval;
                return mt32_add_pitch_bend_sensitivity(state, mt32_channel, mt32_gm_channels[gm_channel].pitch_bend_sensitivity);
            case MIDI_STATUS_CONTROLLER:
                switch (byte1)
                {
                    case 1: // modulation wheel
                        mt32_gm_channels[gm_channel].modulation_wheel = byte2;
                        if (mt32_channel == 0) return 0;
                        if (mt32_channels[mt32_channel].modulation_wheel == byte2) return 0;
                        mt32_channels[mt32_channel].modulation_wheel = byte2;
                        break;
                    case 7: // volume
                        mt32_gm_channels[gm_channel].volume = byte2;
                        if (mt32_channel == 0) return 0;
                        if (mt32_channels[mt32_channel].volume == byte2) return 0;
                        mt32_channels[mt32_channel].volume = byte2;
                        break;
                    case 10: // pan
                        byte2 = 127 - byte2;
                        mt32_gm_channels[gm_channel].mt32_pan = byte2;
                        if (mt32_channel == 0) return 0;
                        if (mt32_channels[mt32_channel].pan == byte2) return 0;
                        mt32_channels[mt32_channel].pan = byte2;
                        break;
                    case 11: // expression
                        mt32_gm_channels[gm_channel].expression = byte2;
                        if (mt32_channel == 0) return 0;
                        if (mt32_channels[mt32_channel].expression == byte2) return 0;
                        mt32_channels[mt32_channel].expression = byte2;
                        break;
                    case 64: // sustain pedal
                        mt32_gm_channels[gm_channel].sustain = byte2;
                        if (mt32_channel == 0) return 0;
                        if (mt32_channels[mt32_channel].sustain == byte2) return 0;
                        mt32_channels[mt32_channel].sustain = byte2;
                        break;
                    case 98: // NRPN low
                    case 99: // NRPN high
                        mt32_gm_channels[gm_channel].rpn_flags = 0;
                        return 0;
                    case 100: // RPN low
                        mt32_gm_channels[gm_channel].rpn_flags &= 2;
                        if (byte2 == 0) // pitch bend sensitivity
                        {
                            mt32_gm_channels[gm_channel].rpn_flags |= 1;
                        }
                        return 0;
                    case 101: // RPN high
                        mt32_gm_channels[gm_channel].rpn_flags &= 1;
                        if (byte2 == 0) // pitch bend sensitivity
                        {
                            mt32_gm_channels[gm_channel].rpn_flags |= 2;
                        }
                        return 0;
                    case 6: // data entry
                        if (mt32_gm_channels[gm_channel].rpn_flags != 3) return 0;
                        mt32_gm_channels[gm_channel].pitch_bend_sensitivity = byte2;
                        if (mt32_channel == 0) return 0;
                        return mt32_add_pitch_bend_sensitivity(state, mt32_channel, byte2);
                    case 121: // reset all controllers
                        mt32_gm_channels[gm_channel].modulation_wheel = 0;
                        mt32_gm_channels[gm_channel].expression = 127;
                        mt32_gm_channels[gm_channel].pitch_wheel = 0x2000;
                        mt32_gm_channels[gm_channel].sustain = 0;
                        if (mt32_channel == 0) return 0;
                        mt32_channels[mt32_channel].modulation_wheel = 0;
                        mt32_channels[mt32_channel].expression = 127;
                        mt32_channels[mt32_channel].pitch_wheel = 0x2000;
                        mt32_channels[mt32_channel].sustain = 0;
                        break;
                    case 120: // all sounds off
                        byte1 = 124; // omni mode off
                        // fallthrough
                    case 123: // all notes off
                    case 124: // omni mode off
                    case 125: // omni mode on
                    case 126: // mono mode
                    case 127: // poly mode
                        for (note_index = 0; note_index < 128; note_index++)
                        {
                            channel_notes[gm_channel][note_index] = 0;
                        }
                        mt32_gm_channels[gm_channel].active_notes = 0;
                        if (mt32_channel == 0) return 0;
                        break;
                    default:
                        return 0;
                }
                break;
            case MIDI_STATUS_PITCH_WHEEL: // pitch wheel
                mt32_gm_channels[gm_channel].pitch_wheel = byte1 | (byte2 << 7);
                if (mt32_channel == 0) return 0;
                if (mt32_channels[mt32_channel].pitch_wheel == mt32_gm_channels[gm_channel].pitch_wheel) return 0;
                mt32_channels[mt32_channel].pitch_wheel = mt32_gm_channels[gm_channel].pitch_wheel;
                break;
            default:
                return 0;
        }
    }

    return add_midi_event(state, (status & 0xf0) | mt32_channel, byte1, byte2, NULL, 0);
}

